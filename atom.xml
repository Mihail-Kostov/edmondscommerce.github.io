<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-02-14T17:47:11+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Running PHP Scripts on CLI and Faking a Web Request]]></title>
    <link href="http://edmondscommerce.github.io/php/running-php-scripts-on-cli-and-faking-a-web-request.html"/>
    <updated>2014-02-14T17:31:14+00:00</updated>
    <id>http://edmondscommerce.github.io/php/running-php-scripts-on-cli-and-faking-a-web-request</id>
    <content type="html"><![CDATA[<p>Some times you build a PHP script that is designed to run from a web request and you want to run it on the command line.
The problem is that you have used the standard PHP super globals and you would rather not refactor the script loads.</p>

<p>Here is a nice quick solution:</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">if</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$argc</span><span class="p">)){</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="nv">$argc</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nv">$things</span> <span class="o">=</span> <span class="nb">explode</span><span class="p">(</span><span class="s2">&quot;=&quot;</span><span class="p">,</span> <span class="nv">$argv</span><span class="p">[</span><span class="nv">$i</span><span class="p">]);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="k">false</span> <span class="o">!==</span> <span class="nb">stripos</span><span class="p">(</span><span class="nv">$things</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="s1">&#39;POST:&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>             <span class="nv">$post</span> <span class="o">=</span> <span class="nb">str_replace</span><span class="p">(</span><span class="s1">&#39;POST:&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nv">$things</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>             <span class="nv">$_POST</span><span class="p">[</span><span class="nv">$post</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$things</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>             <span class="nv">$_GET</span><span class="p">[</span><span class="nv">$things</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span> <span class="o">=</span> <span class="nv">$things</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">GET:</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nb">var_dump</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">);</span>
</span><span class='line'><span class="k">echo</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">POST:</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nb">var_dump</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>This will loop over the argc variable that is defined when running in CLI mode and will fake the <code>$_GET</code> and <code>$_POST</code> variables as required.</p>

<p>To run this with get and post variables you would do this:</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">php</span> <span class="o">-</span><span class="nx">f</span> <span class="nx">script</span><span class="o">.</span><span class="nx">php</span> <span class="nx">getvar1</span><span class="o">=</span><span class="nx">test</span> <span class="nx">getvar2</span><span class="o">=</span><span class="nx">foo</span> <span class="nx">POST</span><span class="o">:</span><span class="nx">postvar1</span><span class="o">=</span><span class="nx">bar</span>
</span></code></pre></td></tr></table></div></figure>


<p>And that&rsquo;s it. It is not particularly pretty but it can be pretty handy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cPanel Download Site Files and Database]]></title>
    <link href="http://edmondscommerce.github.io/cpanel/cpanel-download-site-files-and-database.html"/>
    <updated>2014-02-10T18:03:36+00:00</updated>
    <id>http://edmondscommerce.github.io/cpanel/cpanel-download-site-files-and-database</id>
    <content type="html"><![CDATA[<p>Often a client won&rsquo;t have access to SSH, or won&rsquo;t be able to provide you with some of the more specifics such as FTP, PHPMyAdmin etc. All they know to give you is access to their cPanel. Through this there&rsquo;s various tools at your disposal.</p>

<h2>Try SSH</h2>

<p>Your cPanel login is actually a Linux user login, which cPanel&rsquo;s FTP hooks into. The first step is to navigate in your cPanel to FTP Accounts and click Configure FTP client on a user. These are SFTP details and can very often provide you with SSH shell access, unless the host has disabled this.</p>

<p>Simply try <code>ssh user@host -p 1234</code>, where the user, host and password are your cPanel login, and the port displayed on the FTP Accounts page.</p>

<p>From here you&rsquo;re free to use <code>tar</code>, <code>gzip</code>, <code>mysqldump</code> etc to acquire the files and database.</p>

<h2>If SSH isn&rsquo;t enabled</h2>

<p>Sometimes the host disables SSH access, only allowing its use for SFTP. There are still many ways to acquire the site&rsquo;s files and database:</p>

<h3>Getting hold of the files</h3>

<ul>
<li><strong>Plain old FTP</strong> &ndash; You can just use an FTP client such as Filezilla to access and download the site&rsquo;s files using FTP or SFTP. This is the simplest way, but can take a long time because of the amount of files involved</li>
<li><strong>File Manager Web UI</strong> &ndash; compressing the site&rsquo;s files obviously shrinks the download size, but also vastly reduces the amount of connections you need to make, leading to a faster download speed.

<ol>
<li> Navigate to the File Manager section (remember to tick &ldquo;Show hidden files&rdquo; to pick up .htaccess files)</li>
<li>Browse to the web root folder, select all the files and folders you want using Ctrl+Click. Remember to exclude unnecessary large files such as sql dumps, media folders and the var folder</li>
<li>Click Compress from the toolbar</li>
</ol>
</li>
</ul>


<h3>Getting hold of the database</h3>

<ul>
<li><strong>PHPMyAdmin</strong> &ndash; PHPMyAdmin offers an array of options for dumping your database. You should start by checking the database&rsquo;s size and considering excluding the dump of tables such as <code>log_url</code>, <code>log_url_info</code>, <code>log_visitor</code>, <code>log_visitor_info</code>, <code>report_viewed_product_index</code>

<ol>
<li> Navigate to the PHPMyAdmin area of cPanel and locate the database in use (check your <code>app/etc/local.xml</code> if you&rsquo;re not sure which</li>
<li>Click the Export tab</li>
<li>Select Custom: here&rsquo;s where you can selectively export information</li>
<li>Tick &lsquo;Disable foreign key checks&rsquo; and set &lsquo;Dump table&rsquo; to &lsquo;structure&rsquo;. This will have PHPMyAdmin set up only the tables&#8217; columns but no data (we&rsquo;ll get to that)</li>
<li>Click Go</li>
<li>Once this is complete, navigate back to the Export page and click Custom again.</li>
<li>Deselect (ctrl+click) any tables which are unnecessary</li>
<li>Tick &lsquo;Disable foreign key checks&rsquo; and set &lsquo;Dump table&rsquo; this time to &lsquo;data&rsquo;</li>
<li>This will provide you with two files representing the database. Import first the Structure one, and then the Data one (or concatenate the two together)</li>
</ol>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NHS Website Hosting Malware]]></title>
    <link href="http://edmondscommerce.github.io/security/nhs-website-hosting-malware.html"/>
    <updated>2014-02-03T10:39:41+00:00</updated>
    <id>http://edmondscommerce.github.io/security/nhs-website-hosting-malware</id>
    <content type="html"><![CDATA[<p>This morning I was made aware that certain pages of the NHS website &ndash; the UK&rsquo;s National Health Service &ndash; were hosting malware that was automatically redirecting users to malicious pages. The story broke on the popular news site Reddit, you can see the actual reddit thread <a href="http://www.reddit.com/r/unitedkingdom/comments/1wv91h/nhsuk_compromised_many_pages_are_serving_malware/">here</a>.</p>

<p>The first and most important point is that if you ever find yourself unexpectedly redirected from a page to another page then you should definitely not agree to install any software suggsted by the redirected site. Your safest course of action is likely to close the tab or even your browser as soon as possible and then run a full virus scan after updating your virus software.</p>

<h3>Here is some information on this particular attack</h3>

<p>The list of URLs originally shown to be hosting this malware can be found <a href="http://pastebin.com/DbvR0iyj">here</a>.</p>

<p>The attack vector seems to be in a (possibly accidental) mis spelling of the domain name that is hosting some Javascript related to Google Translate.</p>

<h4>You can see a correct chunk of HTML here:</h4>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;/includes/AC_RunActiveContent.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit&quot;</span><span class="nt">&gt;&lt;/script&gt;&lt;link</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">charset=</span><span class="s">&quot;UTF-8&quot;</span> <span class="na">href=</span><span class="s">&quot;https://translate.googleapis.com/translate_static/css/translateelement.css&quot;</span><span class="nt">&gt;&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">charset=</span><span class="s">&quot;UTF-8&quot;</span> <span class="na">src=</span><span class="s">&quot;https://translate.googleapis.com/translate_static/js/element/main.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;/includes/translate.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>And here is the compromised HTML</h4>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;//translate.googleaspis.com/translate_static/js/element/19/element_main.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;//translate.googleaspis.com/translate_static/js/element/element.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;/includes/translate.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The domain name googleaspis.com is registered by regtons.com and though the <a href="http://www.whois.com/whois/googleaspis.com">Whois information</a> has the actual domain ownership details obfuscated by a Czech company that protect the actual real ownership details, it does seem that the server and other <a href="http://www.tcpiputils.com/browse/ip-address/31.170.179.179">internet services</a> are all based in the Czech Republic.</p>

<p>Checking the Google Safe Browsing information, you can see that Google have found <a href="http://www.google.co.uk/safebrowsing/diagnostic?site=hmr.nhs.uk/">numerous issues</a> on the NHS domains seemingly starting on the 31st of January this year.</p>

<p>It seems that the NHS have now confirmed that they are aware of this issue and are currently taking action to resolve the problem.</p>

<p>It is still not clear exactly how or why this issue cropped up in the first place. If it was an accident, how did it manage to get past what you would expect to be quite rigorous quality assurance processes? If this was a result of a malicious break in, how did they manage to compromise the website in this way and are there any further security issues that we should, as a nation, be worried about?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clean Up Meld Files when Git Merging]]></title>
    <link href="http://edmondscommerce.github.io/git/clean-up-meld-files-when-git-merging.html"/>
    <updated>2014-01-29T11:39:19+00:00</updated>
    <id>http://edmondscommerce.github.io/git/clean-up-meld-files-when-git-merging</id>
    <content type="html"><![CDATA[<p>If you do a Git Merge using Meld (a brilliant Linux diff tool) then you might find that there are a bunch of files created that you need to clear up.</p>

<p>These files will be copies of the merged files and can be safely removed as everything you should need to know is already in Git.</p>

<p>I wrote the following quick function to find all of these files and remove them. You could add this as a function to your bashrc file if you need to do this regularly.</p>

<p>Here is the BASH snippet:</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git status -su | grep -P <span class="s2">&quot;\.BACKUP|BASE|LOCAL|REMOTE\.&quot;</span> | cut -f2 -d<span class="s2">&quot; &quot;</span> | xargs rm
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Preorders in Magento Using Attribute Value]]></title>
    <link href="http://edmondscommerce.github.io/magento/preorders-in-magento-using-attribute-value.html"/>
    <updated>2014-01-23T15:52:41+00:00</updated>
    <id>http://edmondscommerce.github.io/magento/preorders-in-magento-using-attribute-value</id>
    <content type="html"><![CDATA[<p>Magento doesn&rsquo;t come built with the ability to place preorders: the closest match is in the form of back orders, but there&rsquo;s a crucial difference between the two. Backorders are orders placed when stock isn&rsquo;t present and are shipped as soon as stock becomes available. Preorders however usually have a predefined point at which they will be shipped.</p>

<p>The excellent <a href="http://www.aitoc.com/en/magentomods_pre_order.html">Aitoc Prorders</a> extension provides a drop-in ability to accept preorders including button text changes, checkout customisation and different order statuses for preorders.</p>

<p>One aspect I had to work around is that the way to define a preorder is by using the extra &ldquo;Pre-Orders&rdquo; value of the Magento &ldquo;Backorders&rdquo; Inventory field. In my case I wanted to define a preorder to be a product with a Release Date set in the future. Fortunately the Aitc Preorders module has a very discrete function where it holds the definition of a Preorder. Changing this is a simple case of overriding that method</p>

<h3>Creating a new extension</h3>

<p>You need to create a new standard Magento extension, creating the usual boilerplate files:</p>

<ul>
<li>/app/etc/modules/Namespace_Module.xml</li>
<li>/app/code/local/Namespace/Module/etc/config.xml</li>
</ul>


<h3>Rewrite the Aitoc module&rsquo;s Product model</h3>

<p>In /app/code/local/Namespace/Module/etc/config.xml, set up your XML:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;config&gt;</span>
</span><span class='line'>    <span class="nt">&lt;modules&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Namespace_Module&gt;</span>
</span><span class='line'>            <span class="nt">&lt;version&gt;</span>0.1.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/Namespace_Module&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/modules&gt;</span>
</span><span class='line'>    <span class="nt">&lt;global&gt;</span>
</span><span class='line'>        <span class="nt">&lt;models&gt;</span>
</span><span class='line'>            <span class="nt">&lt;catalog&gt;</span>
</span><span class='line'>                <span class="nt">&lt;rewrite&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;product&gt;</span>Namespace_Module_Model_Aitpreorder_Rewrite_CatalogProduct<span class="nt">&lt;/product&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/rewrite&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/catalog&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/models&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/global&gt;</span>
</span><span class='line'><span class="nt">&lt;/config&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Create the class and override the function</h3>

<p>Create the file /app/code/local/Namespace/Module/Model/Aitpreorder/Rewrite/CatalogProduct.php</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Namespace_Module_Model_Aitpreorder_Rewrite_CatalogProduct</span> <span class="k">extends</span> <span class="nx">Aitoc_Aitpreorder_Model_Rewrite_CatalogProduct</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">getPreorder</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Add whatever logic you like here and return it as a boolean</span>
</span><span class='line'>        <span class="nv">$releaseDate</span> <span class="o">=</span> <span class="nx">DateTime</span><span class="o">::</span><span class="na">createFromFormat</span><span class="p">(</span><span class="s1">&#39;Y-m-d H:i:s&#39;</span><span class="p">,</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getReleaseDate</span><span class="p">());</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$releaseDate</span> <span class="o">&gt;</span> <span class="k">new</span> <span class="nx">DateTime</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Skype Working on Fedora 20]]></title>
    <link href="http://edmondscommerce.github.io/Fedora/getting-skype-working-on-fedora-20.html"/>
    <updated>2014-01-17T14:45:29+00:00</updated>
    <id>http://edmondscommerce.github.io/Fedora/getting-skype-working-on-fedora-20</id>
    <content type="html"><![CDATA[<p>I recently needed to get Skype working on Fedora 20 and unfortunately the process wasn&rsquo;t completely smooth, there were a few hoops I had to jump through.</p>

<p>I am making a note of these here for my own future reference and to help out any one else hitting problems like these.</p>

<p>To install Skype on Fedora 20 64bit, the first thing you need to do is download the <a href="http://www.skype.com/en/download-skype/skype-for-linux/">Fedora 32bit RPM from Skype</a>.</p>

<p>To install this you should use Yum so that dependancies are handled properly:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum install ~/Downloads/skype-4.2.0.11-fedora.i586.rpm</span></code></pre></td></tr></table></div></figure>


<p>However I hit issues around the libvpx package. I have Chromium installed however it packages an incompatible version of libvpx which was blocking the installation.
After a load of messing around the solution for me was so use Yum to remove that package, install the correct package and then install skype.
One issue was that removing the package also removed programs that had it as a dependancy so after installing the correct version of libvpx, I had to reinstall those programs as well.</p>

<p>Here is the process in commands:</p>

<p>Firstly remove the package and install the i686 version</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum remove libvpx.x86_64
</span><span class='line'>yum install libvpx.i686</span></code></pre></td></tr></table></div></figure>


<p>Then install Skype</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> yum install ~/Downloads/skype-4.2.0.11-fedora.i586.rpm</span></code></pre></td></tr></table></div></figure>


<p>Then reinstall the 64 bit version of libvpx</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> yum install libvpx.x86_64 </span></code></pre></td></tr></table></div></figure>


<p>Then reinstall the programs that were removed when I removed libvpx</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> yum install firefox.x86_64 pidgin.x86_64 pidgin-libnotify.x86_64 php-gd.x86_64 shotwell.x86_64 gnome-shell-extension-pidgin.x86_64 </span></code></pre></td></tr></table></div></figure>


<p>That got Skype installed however testing it the audio was terrible. There is one last tweak that fixed this for me:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo gnome-open /usr/share/applications/skype.desktop</span></code></pre></td></tr></table></div></figure>


<p>Change the line that reads <strong>Exec=skype %U</strong> to the following:</p>

<p><strong>Exec=env PULSE_LATENCY_MSEC=30 skype %U</strong></p>

<p>Restart Skype and the audio issues should be resolved.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash Find Files and Echo Filename and Contents]]></title>
    <link href="http://edmondscommerce.github.io/bash/bash-find-files-and-echo-filename-and-contents.html"/>
    <updated>2014-01-13T17:18:55+00:00</updated>
    <id>http://edmondscommerce.github.io/bash/bash-find-files-and-echo-filename-and-contents</id>
    <content type="html"><![CDATA[<p>I thought this one would be easy but actually its taken a bit of messing about.</p>

<p>The goal was to find files matching a pattern, in this case a file name, and then echo out the full path to the file and also the file contents.</p>

<p>If you are interested, the reason I was doing this was to understand the <em>interesting</em> approach that the ORO Platform has taken to setting up the AppKernel bundles in Symfony2.</p>

<p>The command is here:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> find . -type f -iwholename '*bundles.yml' | xargs -I % bash -c "echo ''; echo '----------------------'; echo %; cat %; echo '';"</span></code></pre></td></tr></table></div></figure>


<p>I have added in some extra echos to make it format nicely but the main thing is that I am using xargs to handle the results from find.</p>

<p>The individual result is assigned to the % character. Then a sub shell is instantiated to manage a specific command that both echos % itself and then uses cat to echo the contents of %.</p>

<p>This gave me an output like this:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>----------------------
</span><span class='line'>./vendor/oro/platform/src/Oro/Bundle/ImportExportBundle/Resources/config/oro/bundles.yml
</span><span class='line'>bundles:
</span><span class='line'>    - Oro\Bundle\ImportExportBundle\OroImportExportBundle
</span><span class='line'>
</span><span class='line'>----------------------
</span><span class='line'>./vendor/oro/platform/src/Oro/Bundle/PlatformBundle/Resources/config/oro/bundles.yml
</span><span class='line'>bundles:
</span><span class='line'>    - { name: Symfony\Bundle\FrameworkBundle\FrameworkBundle, priority: -255 }
</span><span class='line'>    - { name: Symfony\Bundle\SecurityBundle\SecurityBundle, priority: -250 }
</span><span class='line'>    - { name: Symfony\Bundle\TwigBundle\TwigBundle, priority: -245 }
</span><span class='line'>    - { name: Symfony\Bundle\MonologBundle\MonologBundle, priority: -240 }
</span><span class='line'>    - { name: Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle, priority: -235 }
</span><span class='line'>    - { name: Symfony\Bundle\AsseticBundle\AsseticBundle, priority: -230 }
</span><span class='line'>    - { name: Doctrine\Bundle\DoctrineBundle\DoctrineBundle, priority: -225 }
</span><span class='line'>    - { name: Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle, priority: -220 }
</span><span class='line'>    - { name: Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle, priority: -215 }
</span><span class='line'>    - { name: JMS\SerializerBundle\JMSSerializerBundle, kernel: true, priority: -210 }
</span><span class='line'>    - { name: Knp\Bundle\PaginatorBundle\KnpPaginatorBundle, priority: -205 }
</span><span class='line'>    - { name: Knp\Bundle\MenuBundle\KnpMenuBundle, priority: -200 }
</span><span class='line'>    - { name: FOS\RestBundle\FOSRestBundle, priority: -195 }
</span><span class='line'>    - { name: FOS\JsRoutingBundle\FOSJsRoutingBundle, priority: -190 }
</span><span class='line'>    - { name: Nelmio\ApiDocBundle\NelmioApiDocBundle, priority: -185 }
</span><span class='line'>    - { name: BeSimple\SoapBundle\BeSimpleSoapBundle, priority: -180 }
</span><span class='line'>    - { name: Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle, priority: -175 }
</span><span class='line'>    - { name: Escape\WSSEAuthenticationBundle\EscapeWSSEAuthenticationBundle, priority: -170 }
</span><span class='line'>    - { name: Liip\ImagineBundle\LiipImagineBundle, priority: -165 }
</span><span class='line'>    - { name: Genemu\Bundle\FormBundle\GenemuFormBundle, priority: -155 }
</span><span class='line'>    - { name: A2lix\TranslationFormBundle\A2lixTranslationFormBundle, priority: -150 }
</span><span class='line'>    - { name: Lexik\Bundle\MaintenanceBundle\LexikMaintenanceBundle, priority: -145 }
</span><span class='line'>    - Oro\Bundle\PlatformBundle\OroPlatformBundle</span></code></pre></td></tr></table></div></figure>


<p>And you can see that the bundle file I was looking for is in the Platform Bundle.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrading from Fedora 19 to 20 using FedUp]]></title>
    <link href="http://edmondscommerce.github.io/Fedora/upgrading-from-fedora-19-to-20-using-fedup.html"/>
    <updated>2014-01-03T19:32:48+00:00</updated>
    <id>http://edmondscommerce.github.io/Fedora/upgrading-from-fedora-19-to-20-using-fedup</id>
    <content type="html"><![CDATA[<p>I decided to upgrade to the latest version because why not, its the first Friday of the year.</p>

<p>The first thing to do is head over to <a href="https://fedoraproject.org/wiki/FedUp">this page</a> which explains how to use the tool.</p>

<p>I spotted the note about the 19-20 upgrade not working unless you install the bleeding edge version of the tool so thats to do first:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum -y --enablerepo=updates-testing install fedup</span></code></pre></td></tr></table></div></figure>


<p>You also need to make sure that your system is fully up to date so lets do that. Once this is done you probably want to reboot to be on the safe side.</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum -y update</span></code></pre></td></tr></table></div></figure>


<p>Once that is all done then you need to run the fedup command itself:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum -y update fedup fedora-release
</span><span class='line'>sudo fedup --network 20</span></code></pre></td></tr></table></div></figure>


<p><em>I did this though and had an issue with RMPFusion. To fix that you need to run this command, then run the fedup command again:</em></p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-rpmfusion-nonfree-fedora-20
</span><span class='line'>sudo fedup --network 20</span></code></pre></td></tr></table></div></figure>


<p>Once fedup completes successfully you can reboot and will have an upgrade option as your first GRUB option when booting up. Select that to start the main upgrade.
It takes a while, make a brew or something.</p>

<p>Once you log in, you will no doubt notice some of your Gnome Shell Extensions are not working. Thankfully the process of upgrading these is pretty painless, just head over to
<a href="https://extensions.gnome.org/local/">https://extensions.gnome.org/local/</a> and you will see all your extensions. Any that are not compatible with your new version of Gnome Shell will have OUTDATED written where the on/off slider usually resides. Those with upgraded versions will have an upgrade button. Click that for each one, accepting the prompt.
When that&rsquo;s done, refresh the page and you should see all your upgraded extensions are now working.</p>

<p>For me the only one I&rsquo;m really going to miss is the <a href="https://extensions.gnome.org/extension/352/middle-click-to-close-in-overview/">Quick Close in Overview</a> which is really handy, hopefully will be updated soon.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fedora Yum Update Failing - RPMFusion + Solution]]></title>
    <link href="http://edmondscommerce.github.io/Fedora/fedora-yum-update-failing-rpmfusion-plus-solution.html"/>
    <updated>2014-01-02T10:42:59+00:00</updated>
    <id>http://edmondscommerce.github.io/Fedora/fedora-yum-update-failing-rpmfusion-plus-solution</id>
    <content type="html"><![CDATA[<p>I found that Fedora was completely failing to update with the normal GUI based software update system. A prompt would be repeatedly displayed and then the process would die.</p>

<p>To see what was really going on I ran yum update from the command line</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo yum -y update</span></code></pre></td></tr></table></div></figure>


<p>This died with the following error message:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Couldn't open file /etc/pki/rpm-gpg/RPM-GPG-KEY-rpmfusion-nonfree-fedora-19</span></code></pre></td></tr></table></div></figure>


<p>It looks like something has been corrupted. A quick google around describes some possible causes and solutions however I thought I would try the obvious one first and just reenable RPMFusion.</p>

<p>To do that you can run this simple command (again in the command line):</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>su -c 'yum localinstall --nogpgcheck http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm'</span></code></pre></td></tr></table></div></figure>


<p>I did this and then ran the yum update command again and everything is fixed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code Blocks with Liquid or Twig Tags using Octopress]]></title>
    <link href="http://edmondscommerce.github.io/octopress/code-blocks-with-liquid-or-twig-tags-using-octopress.html"/>
    <updated>2013-12-09T18:57:42+00:00</updated>
    <id>http://edmondscommerce.github.io/octopress/code-blocks-with-liquid-or-twig-tags-using-octopress</id>
    <content type="html"><![CDATA[<p>Here is a quicky I figured out when posting my previous story that included a snippet of Twig code.</p>

<p>If you put Twig code into codeblocks, it doesn&rsquo;t work, instead of regarding anything inside the code block as escaped code, it tries to parse it.</p>

<p>The solution is simply to wrap your code in a raw tag like this:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{% codeblock %}
</span><span class='line'>{% raw %}
</span><span class='line'>   // your code here
</span><span class='line'>{% end[REMOVE_THIS_BIT]raw %}
</span><span class='line'>{% endcodeblock %}</span></code></pre></td></tr></table></div></figure>


<p>In fact I had to do that to get this post to work as well</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Symfony2 Twig  'DateTime could not be converted to string']]></title>
    <link href="http://edmondscommerce.github.io/symfony2/symfony2-twig-datetime-could-not-be-converted-to-string.html"/>
    <updated>2013-12-09T18:43:03+00:00</updated>
    <id>http://edmondscommerce.github.io/symfony2/symfony2-twig-datetime-could-not-be-converted-to-string</id>
    <content type="html"><![CDATA[<p>I just hit an interesting issue with a nice and easy solution once you understand what is going on.
On a current project I making heavy use of the <a href="https://github.com/sensiolabs/SensioGeneratorBundle">SensioGeneratorBundle</a> to generate CRUD etc. So far its working really nicely.</p>

<p>However I started to see an issue with one of my entities that Twig was not handling a DateTime column properly but others were being handled fine.</p>

<p>Looking through the Twig template I noticed this:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='html+jinja'><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="cp">{%</span>- <span class="k">for</span> <span class="nv">field</span><span class="o">,</span> <span class="nv">metadata</span> <span class="k">in</span> <span class="nv">fields</span> <span class="cp">%}</span>
</span><span class='line'>            <span class="cp">{%</span>- <span class="k">if</span> <span class="nb">loop</span><span class="nv">.first</span> <span class="k">and</span> <span class="o">(</span><span class="s1">&#39;show&#39;</span> <span class="k">in</span> <span class="nv">actions</span><span class="o">)</span> <span class="cp">%}</span>
</span><span class='line'>
</span><span class='line'>                <span class="nt">&lt;td&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;</span><span class="cp">{{</span> <span class="s2">&quot;{{ path(&#39;&quot;</span> <span class="o">~</span> <span class="nv">route_name_prefix</span> <span class="o">~</span> <span class="s2">&quot;_show&#39;, { &#39;id&#39;: entity.id }) }}&quot;</span> <span class="cp">}}</span><span class="s">&quot;</span><span class="nt">&gt;</span><span class="cp">{{</span> <span class="s1">&#39;{{ entity.&#39;</span> <span class="o">~</span> <span class="nv">field</span><span class="o">|</span><span class="nf">replace</span><span class="o">({</span><span class="s1">&#39;_&#39;</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="o">})</span> <span class="o">~</span> <span class="s1">&#39; }}&#39;</span> <span class="cp">}}</span><span class="nt">&lt;/a&gt;&lt;/td&gt;</span>
</span><span class='line'>
</span><span class='line'>            <span class="cp">{%</span>- <span class="k">elseif</span> <span class="nv">metadata.type</span> <span class="k">in</span> <span class="o">[</span><span class="s1">&#39;date&#39;</span><span class="o">,</span> <span class="s1">&#39;datetime&#39;</span><span class="o">]</span> <span class="cp">%}</span>
</span><span class='line'>
</span><span class='line'>                <span class="nt">&lt;td&gt;</span><span class="cp">{{</span> <span class="s1">&#39;{% if entity.&#39;</span> <span class="o">~</span> <span class="nv">field</span><span class="o">|</span><span class="nf">replace</span><span class="o">({</span><span class="s1">&#39;_&#39;</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="o">})</span> <span class="o">~</span> <span class="s1">&#39; %}{{ entity.&#39;</span> <span class="o">~</span> <span class="nv">field</span><span class="o">|</span><span class="nf">replace</span><span class="o">({</span><span class="s1">&#39;_&#39;</span><span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="o">})</span> <span class="o">~</span> <span class="s1">&#39;|date(\&#39;Y-m-d H:i:s\&#39;) }}{% endif %}&#39;</span> <span class="cp">}}</span><span class="nt">&lt;/td&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>What this means is that the first entity will never have the DateTime handling. Of course you probably don&rsquo;t want a DateTime to be the first entity so I think this is reasonable.</p>

<p>To fix this, all you need to do is make sure that your Doctrine class does not declare the first property as a DateTime.</p>

<p>If you have a primary key or unique reference property then try to get this as the first declared property in your Doctrine entity class and then rebuild the CRUD and the problem goes away.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Browsers Currently Supported By Google]]></title>
    <link href="http://edmondscommerce.github.io/browsers/browsers-currently-supported-by-google.html"/>
    <updated>2013-12-06T18:49:19+00:00</updated>
    <id>http://edmondscommerce.github.io/browsers/browsers-currently-supported-by-google</id>
    <content type="html"><![CDATA[<p>Google Apps, such as Gmail, Calendar, Docs etc lean heavily on Javascript to create fluid web applications. Naturally this requires up to date browsers to take advantage of functionality and technologies.</p>

<p>Google&rsquo;s policy on browser support is quite strict, especially where Internet Explorer is concerned. <strong>For Chrome only the latest version is supported because of its auto-update policy. Internet Explorer, Firefox and Safari are supported in the most recent, and previous version.</strong> The third most recent browser is no longer supported as soon as a new one is released. No official support is offered for Opera.</p>

<p>This is particularly strict for Internet Explorer, since its versioning is vastly different from that of Chrome and Firefox, with the latter incrementing the version for much smaller changes, and being more frequent. Another effect is that ruling out what is currently IE9 rules out both Windows XP and Windows Vista &ndash; both OSs currently supported by Microsoft.</p>

<p>Naturally this doesn&rsquo;t mean that the products won&rsquo;t work, anjd in many cases they were developed before support was dropped for specific versions. In some cases however it does enforce a more simplistic UI, such as redirecting very old browsers to a Basic HTML view for Gmail</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wrapping a List in Quotes in PHPStorm]]></title>
    <link href="http://edmondscommerce.github.io/phpstorm/wrapping-a-list-in-quotes-in-phpstorm.html"/>
    <updated>2013-12-06T11:35:58+00:00</updated>
    <id>http://edmondscommerce.github.io/phpstorm/wrapping-a-list-in-quotes-in-phpstorm</id>
    <content type="html"><![CDATA[<p>Some times you might find your self with a list of values you want to copy and paste from somewhere into your PHP code as an array of strings.</p>

<p>For example, take this list of carrier names that I need to use:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Blue Package, USPS, UPS, UPSMI, FedEx, DHL, DHL Global Mail, Fastway, UPS Mail Innovations, Lasership, Royal Mail, FedEx SmartPost, OSM, OnTrac, Streamlite, Newgistics, Canada Post, City Link, GLS, GO!, Hermes Logistik Gruppe, Parcelforce, TNT, Target, SagawaExpress, NipponExpress, YamatoTransport, Other</span></code></pre></td></tr></table></div></figure>


<p>I really don&rsquo;t fancy wrapping each element of this list with quotes one by one, there must be a better way!</p>

<p>There is, you can use the regex replace functionality of PHPStorm to do this for you quickly and easily.</p>

<p>First of all paste the string into your PHPStorm editor and highlight it. Then hit <code>[ctrl]+[r]</code> to start your find and replace.</p>

<p>The &ldquo;In Selection&rdquo; tick box should be ticked already, you also need to tick the regex box.</p>

<p>Then in the find section, use this regex:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>( |)([^,]+),</span></code></pre></td></tr></table></div></figure>


<p>And in your replace box, put this:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\n'$2',</span></code></pre></td></tr></table></div></figure>


<p>This gets you nearly all the way there, you might just need to tidy up a bit you should now have something looking like this:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>'Blue Package',
</span><span class='line'>'USPS',
</span><span class='line'>'UPS',
</span><span class='line'>'UPSMI',
</span><span class='line'>'FedEx',
</span><span class='line'>'DHL',
</span><span class='line'>'DHL Global Mail',
</span><span class='line'>'Fastway',
</span><span class='line'>'UPS Mail Innovations',
</span><span class='line'>'Lasership',
</span><span class='line'>'Royal Mail',
</span><span class='line'>'FedEx SmartPost',
</span><span class='line'>'OSM',
</span><span class='line'>'OnTrac',
</span><span class='line'>'Streamlite',
</span><span class='line'>'Newgistics',
</span><span class='line'>'Canada Post',
</span><span class='line'>'City Link',
</span><span class='line'>'GLS',
</span><span class='line'>'GO!',
</span><span class='line'>'Hermes Logistik Gruppe',
</span><span class='line'>'Parcelforce',
</span><span class='line'>'TNT',
</span><span class='line'>'Target',
</span><span class='line'>'SagawaExpress',
</span><span class='line'>'NipponExpress',
</span><span class='line'>'YamatoTransport', Other</span></code></pre></td></tr></table></div></figure>


<p>The <code>Other</code> on the end has not been converted has it doesn&rsquo;t have a trailing comma. You could mess about with yoru regex trying to get this to also be converted, or you could say good enough and move on.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Merging Forks for Composer]]></title>
    <link href="http://edmondscommerce.github.io/composer/merging-forks-for-composer.html"/>
    <updated>2013-12-05T19:53:16+00:00</updated>
    <id>http://edmondscommerce.github.io/composer/merging-forks-for-composer</id>
    <content type="html"><![CDATA[<p>I am really enjoying using Composer with a Symfony2 project that I am currently working on.</p>

<p>Recently though I found an issue where I am using the FOSRest Bundle to provide JSON API functionality. This in turn uses the
JMS/SerializerBundle to handle the actual encoding into JSON.</p>

<p>The problem is that the JMS bundle converts camelCase to snake_case and I decided I really didn&rsquo;t want that. I want my property and entity names to be the same across formats.</p>

<p>A bit of digging and I found <a href="https://github.com/passkey1510/JMSSerializerBundle">this fork</a> which features a fix for exactly this problem, brilliant!</p>

<p>However on trying to get this to install with Composer I simply could not get it to work. Further investigation shows that the version of the JMS bundle that this fork does not meet
the minimum version requirements of the FOSRest bundle. Problem.</p>

<p>The solution in the end was to fork the JMSSerializerBundle Directly then pull this down locally. Once I had that locally I then added the fork with the fix I need as another remote:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote add passkey1510 git@github.com:passkey1510/JMSSerializerBundle.git
</span><span class='line'>git merge remote/passkey1510/master
</span><span class='line'>git push</span></code></pre></td></tr></table></div></figure>


<p>Those three commands added the other fork as another remote allowing me to pull in the commits that feature the fix I need. Finally I pushed this back up to github.</p>

<p>I can now reference my fork in my composer.json file like this:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"repositories": [
</span><span class='line'>        {
</span><span class='line'>            "url": "https://github.com/edmondscommerce/JMSSerializerBundle.git",
</span><span class='line'>            "type": "vcs"
</span><span class='line'>        },
</span><span class='line'>],</span></code></pre></td></tr></table></div></figure>


<p>Now running a <code>composer update --dev</code> and composer successfully brought in my fork of the Serializerbundle with the extra fixes to allow the property names to stay in camelCase.</p>

<p>And that is it, problem solved :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The First Thing You Should Read on SEO]]></title>
    <link href="http://edmondscommerce.github.io/SEO/the-first-thing-you-should-read-on-seo.html"/>
    <updated>2013-12-05T12:16:17+00:00</updated>
    <id>http://edmondscommerce.github.io/SEO/the-first-thing-you-should-read-on-seo</id>
    <content type="html"><![CDATA[<p>There is so much information about SEO out there and so many things that used
to be true but are no longer that it really has become a bit of a minefield.</p>

<p>For the average web master who simply wants to rank reasonably well and make sure that they are doign all of the basic things required to do so then this is the document you should read.</p>

<p>It is written by the company that are almost synonymous with the word search engine. In fact their company name has now become a verb meaning &lsquo;to use a search engine&rsquo;. It is of course Google.</p>

<p>You can read the official google SEO guidelines <a href="http://static.googleusercontent.com/media/www.google.co.uk/en/uk/webmasters/docs/search-engine-optimization-starter-guide.pdf">here</a></p>

<p>It is not a huge document and should be well within the technical understanding of the average webmaster.</p>

<p>I suggest you read it today!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress auto building the site locally for one blog post]]></title>
    <link href="http://edmondscommerce.github.io/Octoress/octopress-auto-building-the-site-locally-for-one-blog-post.html"/>
    <updated>2013-12-03T17:47:30+00:00</updated>
    <id>http://edmondscommerce.github.io/Octoress/octopress-auto-building-the-site-locally-for-one-blog-post</id>
    <content type="html"><![CDATA[<p>Setting up a blog post using Octopress involves writing up your Markdown content, building the site, and previewing it.</p>

<p>This can be time-consuming when writing posts, having to run several commands repeatedly. Here&rsquo;s a few lines you can put into a bash script and run once each time:</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nv">PATHTOLATEST</span><span class="o">=</span><span class="sb">`</span>ls -t <span class="nb">source</span>/_posts | head -1<span class="sb">`</span>;
</span><span class='line'><span class="nb">echo</span> <span class="nv">$PATHTOLATEST</span>
</span><span class='line'>bundle <span class="nb">exec </span>rake isolate<span class="o">[</span><span class="nv">$PATHTOLATEST</span><span class="o">]</span>;
</span><span class='line'>bundle <span class="nb">exec </span>rake generate;
</span><span class='line'>bundle <span class="nb">exec </span>rake preview;
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>The PATHTOLATEST variable finds the latest post</li>
<li>echo the variable for debugging purposes</li>
<li>rake isolate instructs octopress to build the site with only the latest blog post</li>
<li>rake generate builds the site</li>
<li>rake preview initialises the web server</li>
</ol>


<p>From then you can make changes to your post, and the site will be automatically regenerated. This uses a file watcher so it&rsquo;s helpful to keep the terminal open to watch for it building, or having errors</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sorting Results Arbitrarily in MySQL]]></title>
    <link href="http://edmondscommerce.github.io/mysql/sorting-results-arbitrarily-in-mysql.html"/>
    <updated>2013-12-03T12:40:04+00:00</updated>
    <id>http://edmondscommerce.github.io/mysql/sorting-results-arbitrarily-in-mysql</id>
    <content type="html"><![CDATA[<p>When you have a result set in MySQL that you need to order in a specific way you might think that it is not possible and instead you are going to have to read all
of your results into your application domain (eg PHP) and manage the sorting from there. On a large results set that could be seriously inefficient.</p>

<p>The truth is that you don&rsquo;t have to do that. You can specify any kind of sort order including sorting by string values as you see fit.</p>

<p>The way to do this is to use the magic of <a href="http://dev.mysql.com/doc/refman/5.0/en/string-functions.html#function_find-in-set">FIND_IN_SET</a> combined with ORDER BY.</p>

<p>For a full example see this query that is pulling out product images from a data repository in descending image size as described in one of the columns as a string.</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">SELECT</span>
</span><span class='line'>  <span class="n">dcl</span><span class="p">.</span><span class="n">prodID</span><span class="p">,</span>
</span><span class='line'>  <span class="n">dcl</span><span class="p">.</span><span class="n">contentGuid</span><span class="p">,</span>
</span><span class='line'>  <span class="n">dc</span><span class="p">.</span><span class="n">url</span><span class="p">,</span>
</span><span class='line'>  <span class="n">dcmv</span><span class="p">.</span><span class="n">metaValueName</span> <span class="k">AS</span> <span class="n">resolution</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">cds_DigContent</span> <span class="n">dc</span>
</span><span class='line'>  <span class="k">JOIN</span> <span class="n">cds_DigContent_Links</span> <span class="n">dcl</span>
</span><span class='line'>    <span class="k">ON</span> <span class="p">(</span><span class="n">dc</span><span class="p">.</span><span class="n">contentGuid</span> <span class="o">=</span> <span class="n">dcl</span><span class="p">.</span><span class="n">contentGuid</span><span class="p">)</span>
</span><span class='line'>  <span class="k">JOIN</span> <span class="n">cds_DigContent_Meta</span> <span class="n">dcm</span>
</span><span class='line'>    <span class="k">ON</span> <span class="p">(</span><span class="n">dcm</span><span class="p">.</span><span class="n">contentGuid</span> <span class="o">=</span> <span class="n">dc</span><span class="p">.</span><span class="n">contentGuid</span>
</span><span class='line'>        <span class="k">AND</span> <span class="n">dcm</span><span class="p">.</span><span class="n">metaAtrId</span> <span class="o">=</span> <span class="mi">6</span><span class="p">)</span>
</span><span class='line'>  <span class="k">JOIN</span> <span class="n">cds_DigContent_Meta_ValVoc</span> <span class="n">dcmv</span>
</span><span class='line'>    <span class="k">ON</span> <span class="p">(</span><span class="n">dcmv</span><span class="p">.</span><span class="n">metaValueId</span> <span class="o">=</span> <span class="n">dcm</span><span class="p">.</span><span class="n">metaValueId</span><span class="p">)</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">dc</span><span class="p">.</span><span class="n">mediaTypeId</span> <span class="o">=</span> <span class="mi">15</span>
</span><span class='line'>      <span class="k">AND</span> <span class="n">dcl</span><span class="p">.</span><span class="n">prodId</span> <span class="o">=</span> <span class="s1">&#39;{$this-&gt;getCnetProdID()}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">ORDER</span> <span class="k">BY</span>
</span><span class='line'>  <span class="nf">FIND_IN_SET</span><span class="p">(</span><span class="n">dcmv</span><span class="p">.</span><span class="n">metaValueName</span><span class="p">,</span> <span class="s1">&#39;2400 x 1800,1200 x 900,1024 x 768,800 x 600,640 x 480,400 x 300,200 x 150,75 x 75&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">LIMIT</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Faker Symfony2 Integration]]></title>
    <link href="http://edmondscommerce.github.io/symfony2/faker-symfony2-integration.html"/>
    <updated>2013-12-02T20:43:49+00:00</updated>
    <id>http://edmondscommerce.github.io/symfony2/faker-symfony2-integration</id>
    <content type="html"><![CDATA[<p>Generating test data is a crucial part of properly testing your code. If you have to hard code your test data or fixtures then you might be tempted to use only a small number of test entities.</p>

<p>To help with this you can use the brilliant <a href="https://github.com/fzaninotto/Faker">Faker</a> library to generate your test data. The Faker library is designed purely to generate test data and has a range of providers for all kinds of data.</p>

<p>As if that wasn&rsquo;t good enough, you can leverage all the power of this library in your Symfony2 development by simply installing this Symfony2 bundle, <a href="https://github.com/willdurand/BazingaFakerBundle/blob/master/Resources/doc/index.md">BazingaFakerBundle</a>.</p>

<p>Installation is a breeze with Composer and then simply reference your entities in the configuration and run the command</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>app/console faker:populate</span></code></pre></td></tr></table></div></figure>


<p>To generate your entities programmatically rather than as a command line action (perhaps as part of a unit or functional test) you can use this code:</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">//Faker load test data</span>
</span><span class='line'><span class="nv">$populator</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getContainer</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;faker.populator&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$insertedPks</span> <span class="o">=</span> <span class="nv">$populator</span><span class="o">-&gt;</span><span class="na">execute</span><span class="p">();</span>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="nv">$insertedPks</span> <span class="k">as</span> <span class="nv">$class</span> <span class="o">=&gt;</span> <span class="nv">$pks</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$reflClass</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">\ReflectionClass</span><span class="p">(</span><span class="nv">$class</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$shortClassName</span> <span class="o">=</span> <span class="nv">$reflClass</span><span class="o">-&gt;</span><span class="na">getShortName</span><span class="p">();</span>
</span><span class='line'>    <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">Faker: Inserted %s new %s objects</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="nb">count</span><span class="p">(</span><span class="nv">$pks</span><span class="p">),</span> <span class="nv">$shortClassName</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trigger Basic Auth Popup in Chrome]]></title>
    <link href="http://edmondscommerce.github.io/chrome/trigger-basic-auth-popup-in-chrome.html"/>
    <updated>2013-12-02T19:32:58+00:00</updated>
    <id>http://edmondscommerce.github.io/chrome/trigger-basic-auth-popup-in-chrome</id>
    <content type="html"><![CDATA[<p>In Chrome, if you have already authenticated with a site using Basic Authentiation (a Web Server level authentication) then you will have probably realised that once you are authenticated, Chrome does not continuously prompt you for the details, and that is a good thing.
However, in a scenario where perhaps you want to authenticate as a different user or otherwise re enter the details then it can be tricky to figure out how to do this.</p>

<p>The answer is simple enough, you can retrigger this prompt by putting your username@ the url and the pop up will be shown again.</p>

<p>To be clear:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://www.somedomain.com</span></code></pre></td></tr></table></div></figure>


<p>becomes:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://username@www.somedomain.com</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Symonfy2 PHPStorm Project Setup]]></title>
    <link href="http://edmondscommerce.github.io/Symonfy2/symonfy2-phpstorm-project-setup.html"/>
    <updated>2013-12-02T19:01:51+00:00</updated>
    <id>http://edmondscommerce.github.io/Symonfy2/symonfy2-phpstorm-project-setup</id>
    <content type="html"><![CDATA[<p>I was going to write a nice summary of how to set up PHPStorm with a Symfony2 project.
There are a few things to be aware of such as getting the right code style set up so that your code follows the Symonfy2 coding standards.</p>

<p>As it happens though a quick google found that there is already an excellent summary <a href="http://www.kevwebdev.com/blog/setting-up-a-symfony2-project-in-phpstorm.html">here</a> which I suggest you have a read of.</p>

<p>The only thing I would add to this are that you should probably install these PHPStorm plugins to get the best out of it:</p>

<p><a href="http://plugins.jetbrains.com/plugin?pr=&amp;pluginId=7219">Symfony2</a></p>

<p>and <a href="http://plugins.jetbrains.com/plugin/7320">PHP Annotations</a></p>

<p>If you do all of this then you should have a really nice PHPStorm set up for working on your Symfony2 projects, enjoy!</p>
]]></content>
  </entry>
  
</feed>
