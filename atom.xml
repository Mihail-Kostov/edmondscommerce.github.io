<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2013-12-03T12:47:48+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sorting Results Arbitrarily in MySQL]]></title>
    <link href="http://edmondscommerce.github.io/mysql/sorting-results-arbitrarily-in-mysql.html"/>
    <updated>2013-12-03T12:40:04+00:00</updated>
    <id>http://edmondscommerce.github.io/mysql/sorting-results-arbitrarily-in-mysql</id>
    <content type="html"><![CDATA[<p>When you have a result set in MySQL that you need to order in a specific way you might think that it is not possible and instead you are going to have to read all
of your results into your application domain (eg PHP) and manage the sorting from there. On a large results set that could be seriously inefficient.</p>

<p>The truth is that you don&rsquo;t have to do that. You can specify any kind of sort order including sorting by string values as you see fit.</p>

<p>The way to do this is to use the magic of <a href="http://dev.mysql.com/doc/refman/5.0/en/string-functions.html#function_find-in-set">FIND_IN_SET</a> combined with ORDER BY.</p>

<p>For a full example see this query that is pulling out product images from a data repository in descending image size as described in one of the columns as a string.</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">SELECT</span>
</span><span class='line'>  <span class="n">dcl</span><span class="p">.</span><span class="n">prodID</span><span class="p">,</span>
</span><span class='line'>  <span class="n">dcl</span><span class="p">.</span><span class="n">contentGuid</span><span class="p">,</span>
</span><span class='line'>  <span class="n">dc</span><span class="p">.</span><span class="n">url</span><span class="p">,</span>
</span><span class='line'>  <span class="n">dcmv</span><span class="p">.</span><span class="n">metaValueName</span> <span class="k">AS</span> <span class="n">resolution</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">cds_DigContent</span> <span class="n">dc</span>
</span><span class='line'>  <span class="k">JOIN</span> <span class="n">cds_DigContent_Links</span> <span class="n">dcl</span>
</span><span class='line'>    <span class="k">ON</span> <span class="p">(</span><span class="n">dc</span><span class="p">.</span><span class="n">contentGuid</span> <span class="o">=</span> <span class="n">dcl</span><span class="p">.</span><span class="n">contentGuid</span><span class="p">)</span>
</span><span class='line'>  <span class="k">JOIN</span> <span class="n">cds_DigContent_Meta</span> <span class="n">dcm</span>
</span><span class='line'>    <span class="k">ON</span> <span class="p">(</span><span class="n">dcm</span><span class="p">.</span><span class="n">contentGuid</span> <span class="o">=</span> <span class="n">dc</span><span class="p">.</span><span class="n">contentGuid</span>
</span><span class='line'>        <span class="k">AND</span> <span class="n">dcm</span><span class="p">.</span><span class="n">metaAtrId</span> <span class="o">=</span> <span class="mi">6</span><span class="p">)</span>
</span><span class='line'>  <span class="k">JOIN</span> <span class="n">cds_DigContent_Meta_ValVoc</span> <span class="n">dcmv</span>
</span><span class='line'>    <span class="k">ON</span> <span class="p">(</span><span class="n">dcmv</span><span class="p">.</span><span class="n">metaValueId</span> <span class="o">=</span> <span class="n">dcm</span><span class="p">.</span><span class="n">metaValueId</span><span class="p">)</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">dc</span><span class="p">.</span><span class="n">mediaTypeId</span> <span class="o">=</span> <span class="mi">15</span>
</span><span class='line'>      <span class="k">AND</span> <span class="n">dcl</span><span class="p">.</span><span class="n">prodId</span> <span class="o">=</span> <span class="s1">&#39;{$this-&gt;getCnetProdID()}&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">ORDER</span> <span class="k">BY</span>
</span><span class='line'>  <span class="nf">FIND_IN_SET</span><span class="p">(</span><span class="n">dcmv</span><span class="p">.</span><span class="n">metaValueName</span><span class="p">,</span> <span class="s1">&#39;2400 x 1800,1200 x 900,1024 x 768,800 x 600,640 x 480,400 x 300,200 x 150,75 x 75&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">LIMIT</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Faker Symfony2 Integration]]></title>
    <link href="http://edmondscommerce.github.io/symfony2/faker-symfony2-integration.html"/>
    <updated>2013-12-02T20:43:49+00:00</updated>
    <id>http://edmondscommerce.github.io/symfony2/faker-symfony2-integration</id>
    <content type="html"><![CDATA[<p>Generating test data is a crucial part of properly testing your code. If you have to hard code your test data or fixtures then you might be tempted to use only a small number of test entities.</p>

<p>To help with this you can use the brilliant <a href="https://github.com/fzaninotto/Faker">Faker</a> library to generate your test data. The Faker library is designed purely to generate test data and has a range of providers for all kinds of data.</p>

<p>As if that wasn&rsquo;t good enough, you can leverage all the power of this library in your Symfony2 development by simply installing this Symfony2 bundle, <a href="https://github.com/willdurand/BazingaFakerBundle/blob/master/Resources/doc/index.md">BazingaFakerBundle</a>.</p>

<p>Installation is a breeze with Composer and then simply reference your entities in the configuration and run the command</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>app/console faker:populate</span></code></pre></td></tr></table></div></figure>


<p>To generate your entities programmatically rather than as a command line action (perhaps as part of a unit or functional test) you can use this code:</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1">//Faker load test data</span>
</span><span class='line'><span class="nv">$populator</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getContainer</span><span class="p">()</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;faker.populator&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$insertedPks</span> <span class="o">=</span> <span class="nv">$populator</span><span class="o">-&gt;</span><span class="na">execute</span><span class="p">();</span>
</span><span class='line'><span class="k">foreach</span> <span class="p">(</span><span class="nv">$insertedPks</span> <span class="k">as</span> <span class="nv">$class</span> <span class="o">=&gt;</span> <span class="nv">$pks</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$reflClass</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">\ReflectionClass</span><span class="p">(</span><span class="nv">$class</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$shortClassName</span> <span class="o">=</span> <span class="nv">$reflClass</span><span class="o">-&gt;</span><span class="na">getShortName</span><span class="p">();</span>
</span><span class='line'>    <span class="nb">printf</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">Faker: Inserted %s new %s objects</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">,</span> <span class="nb">count</span><span class="p">(</span><span class="nv">$pks</span><span class="p">),</span> <span class="nv">$shortClassName</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trigger Basic Auth Popup in Chrome]]></title>
    <link href="http://edmondscommerce.github.io/chrome/trigger-basic-auth-popup-in-chrome.html"/>
    <updated>2013-12-02T19:32:58+00:00</updated>
    <id>http://edmondscommerce.github.io/chrome/trigger-basic-auth-popup-in-chrome</id>
    <content type="html"><![CDATA[<p>In Chrome, if you have already authenticated with a site using Basic Authentiation (a Web Server level authentication) then you will have probably realised that once you are authenticated, Chrome does not continuously prompt you for the details, and that is a good thing.
However, in a scenario where perhaps you want to authenticate as a different user or otherwise re enter the details then it can be tricky to figure out how to do this.</p>

<p>The answer is simple enough, you can retrigger this prompt by putting your username@ the url and the pop up will be shown again.</p>

<p>To be clear:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://www.somedomain.com</span></code></pre></td></tr></table></div></figure>


<p>becomes:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://username@www.somedomain.com</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Symonfy2 PHPStorm Project Setup]]></title>
    <link href="http://edmondscommerce.github.io/Symonfy2/symonfy2-phpstorm-project-setup.html"/>
    <updated>2013-12-02T19:01:51+00:00</updated>
    <id>http://edmondscommerce.github.io/Symonfy2/symonfy2-phpstorm-project-setup</id>
    <content type="html"><![CDATA[<p>I was going to write a nice summary of how to set up PHPStorm with a Symfony2 project.
There are a few things to be aware of such as getting the right code style set up so that your code follows the Symonfy2 coding standards.</p>

<p>As it happens though a quick google found that there is already an excellent summary <a href="http://www.kevwebdev.com/blog/setting-up-a-symfony2-project-in-phpstorm.html">here</a> which I suggest you have a read of.</p>

<p>The only thing I would add to this are that you should probably install these PHPStorm plugins to get the best out of it:</p>

<p><a href="http://plugins.jetbrains.com/plugin?pr=&amp;pluginId=7219">Symfony2</a></p>

<p>and <a href="http://plugins.jetbrains.com/plugin/7320">PHP Annotations</a></p>

<p>If you do all of this then you should have a really nice PHPStorm set up for working on your Symfony2 projects, enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Syntax Highlighting for Vim]]></title>
    <link href="http://edmondscommerce.github.io/vim/octopress-syntax-highlighting-for-vim.html"/>
    <updated>2013-11-29T13:53:12+00:00</updated>
    <id>http://edmondscommerce.github.io/vim/octopress-syntax-highlighting-for-vim</id>
    <content type="html"><![CDATA[<p>Still learning some of the various things that can be done with Octopress and
came across this Octopress syntax highlighting package that makes it even nicer
to write blog posts (such as this one) using Vim.</p>

<p>You can see the package <a href="https://github.com/tangledhelix/vim-octopress">here</a>.</p>

<p>If you have already installed the SPF13 Vim then you are already running the required bundles
and can simply run</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/.vim/bundle
</span><span class='line'>git clone https://github.com/tangledhelix/vim-octopress.git octopress
</span></code></pre></td></tr></table></div></figure>


<p>It isn&rsquo;t a groundbreaking improvement but it is worth throwing in there.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Syntax Highlighting with PHPStorm]]></title>
    <link href="http://edmondscommerce.github.io/phpstorm/ruby/ruby-syntax-highlighting-with-phpstorm.html"/>
    <updated>2013-11-28T10:30:12+00:00</updated>
    <id>http://edmondscommerce.github.io/phpstorm/ruby/ruby-syntax-highlighting-with-phpstorm</id>
    <content type="html"><![CDATA[<p>PHPStorm is my IDE of choice for PHP development of course and also as many other languages as I can get it to support. One of my favourite plugins for PHPStorm is BASH Support which makes it into a fully featured BASH IDE with function support and syntax highlighting and some code inspections.</p>

<p>As we are now moving to Octopress for blogging functionality I wanted a way to get Ruby syntax highlighting. There is a full blown IntelliJ based Ruby IDE but that is overkill for my needs. I had a look at Netbeans however it has now stopped supporting Ruby though there is a community supported plugin apparently.</p>

<p>My best IDE solution so far is simply Vim, perhaps the <a href="http://vim.spf13.com/">spf13 flavour</a>.</p>

<p>After a bit of Googling good old Stack Overflow came through for me with <a href="http://stackoverflow.com/questions/16451359/is-it-possible-to-get-ruby-syntax-highlighting-in-phpstorm">this post</a> that explains how to leverage PHPStorm&rsquo;s TextMate bundle support to get Ruby syntax highlighting. This works a treat though on my colour scheme (a slightly modified Darcula) it was unreadable. The final thing to do is to change the settings under Settings > TextMate Bundles and in the grid at the bottom next to my theme I switched the TextMate colour scheme from Mac Classic to RailsCasts and now it looks good.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a Fedora 19 based PHP Development Installation]]></title>
    <link href="http://edmondscommerce.github.io/fedora/setting-up-a-fedora-19-based-php-development-installation.html"/>
    <updated>2013-10-31T10:25:52+00:00</updated>
    <id>http://edmondscommerce.github.io/fedora/setting-up-a-fedora-19-based-php-development-installation</id>
    <content type="html"><![CDATA[<p>I have decided to switch from Debian/Ubuntu/Mint which has served me very well over the last few years and move towards more of a RedHat based distribution as it seems that servers these days are more commonly CentOS or RedHat based and I always like to keep my development environment as close as I can to the server environment for all kinds of reason.</p>

<p>Also, I have decided that I really quite like Gnome Shell and it makes sense to pick a distribution that is properly bundled with Gnome Shell rather than bolting it into a distro after installation.</p>

<h3>1. Install Apache and PHP 5.5</h3>


<p>You need to become root first, stay as root for the rest of the steps.</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>su
</span><span class='line'>rpm -Uvh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm
</span><span class='line'>rpm -Uvh http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-stable.noarch.rpm
</span><span class='line'>rpm -Uvh http://rpms.famillecollet.com/remi-release-19.rpm
</span><span class='line'>yum --enablerepo<span class="o">=</span>remi install httpd php php-common
</span><span class='line'>yum --enablerepo<span class="o">=</span>remi install php-pecl-apc php-cli php-pear php-pdo php-mysqlnd php-pgsql php-pecl-mongo php-sqlite php-pecl-memcache php-pecl-memcached php-gd php-mbstring php-mcrypt php-xml
</span></code></pre></td></tr></table></div></figure>




<h3>2. Set that to start up automatically (you are going to be developing none stop right?)</h3>




<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>service httpd start
</span><span class='line'>systemctl <span class="nb">enable </span>httpd.service
</span></code></pre></td></tr></table></div></figure>




<h3>3. Create a test PHP file to confirm thats all working</h3>


<p>Extra bit here, install <a href="http://vim.spf13.com/" target="_blank">this version of Vim</a>, its quite tasty:</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl http://j.mp/spf13-vim3 -L -o - | sh
</span></code></pre></td></tr></table></div></figure>


<p>Now create your PHP file:</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim /var/www/html/test.php
</span></code></pre></td></tr></table></div></figure>


<p>May as well just throw a phpinfo() in there</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nb">phpinfo</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>And now check it: <a href="http://localhost/test.php"><a href="http://localhost/test.php">http://localhost/test.php</a></a></p>

<h3>4. Finally lets get a MySQL version installed. Lets choose MariaDB</h3>


<p>I tried Percona but it does not have a proper Fedora version. Then I discovered that Fedora have adopted MariaDB which is fine by me, lets go with the flow:</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install mariadb mariadb-server
</span><span class='line'>systemctl start mysqld.service
</span><span class='line'>systemctl <span class="nb">enable </span>mysqld.service
</span><span class='line'>/usr/bin/mysql_secure_installation
</span></code></pre></td></tr></table></div></figure>


<p>And that&rsquo;s it, next up is getting Java and PhpStorm installed and also phpMyAdmin</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automatically convert old PHP file to camelCase ]]></title>
    <link href="http://edmondscommerce.github.io/bash/automatically-convert-old-php-file-to-camelcase.html"/>
    <updated>2013-10-17T10:53:15+01:00</updated>
    <id>http://edmondscommerce.github.io/bash/automatically-convert-old-php-file-to-camelcase</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently been working with an old project that uses a combination of different coding styles.</p>

<p>One of the more trivial annoyances with this is that the variables used through the project are a combination of $camelCase and $snake_case which throws of the coding standards tools that I use.</p>

<p>To get round this I have put a little script together that will convert $snake_case to $camelCase automatically.</p>

<p>Obviously, you will need to check the results of this to make sure that there are not variables that should not be changed, but it has saved me a lot of time doing this manually.</p>

<p>I&rsquo;ve added this to my .bash_allias file, though it could easily be turned into a standalone script if required</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#Fix legacy code</span>
</span><span class='line'> cammelCase<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>   vim -E -s <span class="nv">$@</span> <span class="s">&lt;&lt;-EOF</span>
</span><span class='line'><span class="s">   :%s#\%($\%(\k\+\)\)\@&lt;=_\(\k\)#\u\1#g</span>
</span><span class='line'><span class="s">   :update</span>
</span><span class='line'><span class="s">   :quit</span>
</span><span class='line'><span class="s">EOF</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim Locking Up, Always When you are Ready to Save? Solution]]></title>
    <link href="http://edmondscommerce.github.io/linux/vim-locking-up-always-when-you-are-ready-to-save-solution.html"/>
    <updated>2013-10-04T10:33:41+01:00</updated>
    <id>http://edmondscommerce.github.io/linux/vim-locking-up-always-when-you-are-ready-to-save-solution</id>
    <content type="html"><![CDATA[<p>If you are constantly frustated by Vim freezing up on you are editing a file on a server then this is quite possibly your problem, and your solution.</p>

<p>The issue is that most text editors and IDEs have [ctrl]+[s] mapped to save. If you do a lot of file editing then you probably bash the [ctrl]+[s] combo all the time, without even thinking about it&hellip;</p>

<p>Now back to Vim. As it is running in the terminal then it can be frozen by using the [ctrl]+[s] combination. You probably weren&rsquo;t aware of that feature.</p>

<p>To bring things back to life, just hit the [ctrl]+[q] combo. There are ways to permanently disable this which you can try.</p>

<p>For full information on this, check out this great <a href="http://unix.stackexchange.com/questions/12107/how-to-unfreeze-after-accidentally-pressing-ctrl-s-in-a-terminal" target="_blank">stack exchange page</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento 1.8 released]]></title>
    <link href="http://edmondscommerce.github.io/magento/magento-1-8-released.html"/>
    <updated>2013-09-30T10:01:28+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/magento-1-8-released</id>
    <content type="html"><![CDATA[<p>Today I got a notification through that Magento 1.8 had finally been released.</p>

<p>This has been in beta since alpha since April, and contains server fixes that a lot of people have been waiting for.</p>

<p>The most important one for UK vendors is that the rounding issue in tax calculations has been fixed.</p>

<p>There are also improvements to caching and database performance. The full release notes can be seen <a href="http://www.magentocommerce.com/knowledge-base/entry/ce-18-later-release-notes">here</a></p>

<p>These are issues that have affected merchants since that change in the VAT rate, so we would recommend upgrading for everyone at this time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Great Way to Simplify Git Merges]]></title>
    <link href="http://edmondscommerce.github.io/git/a-great-way-to-simplify-git-merges.html"/>
    <updated>2013-09-26T17:34:04+01:00</updated>
    <id>http://edmondscommerce.github.io/git/a-great-way-to-simplify-git-merges</id>
    <content type="html"><![CDATA[<p>If you are struggling with a git merge with a long list of failed merge files then this little trick might be helpful.</p>

<p>The standard approach is to go file by file and use git mergetool to open the files in a tool like Meld and then manually manage the differences. In many cases though you know exactly which version you want and this is simply a laborious process that doesn&rsquo;t really require human input.</p>

<p>The solution to this is deceptively simple. All you need to do is to check out the file from the branch you want to keep the version of. If you have an entire directory where you know that the branch (for example master) has the correct version then you can check out that entire directory.</p>

<p>You might find that sensible use of this technique can save you lots of time and really make the mergetool the one you use for the files where you really do need to merge.</p>

<p>Thanks to <a href="http://stackoverflow.com/questions/914939/simple-tool-to-accept-theirs-or-accept-mine-on-a-whole-file-using-git?answertab=active#tab-top">this StackOverflow answer</a> for simplifying this for me.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[During git pull: error: RPC failed; result=56, HTTP code = 200 [x] KiB/s       fatal: The remote end hung up unexpectedly]]></title>
    <link href="http://edmondscommerce.github.io/git/during-git-pull-error-rpc-failed-result56-http-code-200-x-kibs-fatal-the-remote-end-hung-up-unexpectedly.html"/>
    <updated>2013-09-16T15:07:54+01:00</updated>
    <id>http://edmondscommerce.github.io/git/during-git-pull-error-rpc-failed-result56-http-code-200-x-kibs-fatal-the-remote-end-hung-up-unexpectedly</id>
    <content type="html"><![CDATA[<p>If you receive this series of errors during a git pull (after the Receiving Objects stage):</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>$ git pull
</span><span class='line'>Password for 'https://xxxxxxxxxx@bitbucket.org': 
</span><span class='line'>remote: Counting objects: 1011, done.
</span><span class='line'>remote: Compressing objects: 100% (394/394), done.
</span><span class='line'>error: RPC failed; result=56, HTTP code = 200 51 KiB/s      
</span><span class='line'>fatal: The remote end hung up unexpectedly
</span><span class='line'>fatal: early EOF
</span><span class='line'>fatal: index-pack failed
</span></code></pre></td></tr></table></div></figure>


<p>a quick solution is to use ssh to pull rather than the https protocol</p>

<p>Hope this helps</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Is User Experience & Why Bother?]]></title>
    <link href="http://edmondscommerce.github.io/web%20design/what-is-user-experience-why-bother.html"/>
    <updated>2013-09-02T07:50:51+01:00</updated>
    <id>http://edmondscommerce.github.io/web%20design/what-is-user-experience-why-bother</id>
    <content type="html"><![CDATA[<p>If you are running an E-Commerce store then you&rsquo;ve probably received various offers to improve the online shopping experience, optimize conversion rate and so on. All these offers are a part of a user experience. For example &ndash; if you receive an offer to improve your online store&rsquo;s shopping experience then most likely the service provider will go thorough the sales funnel, get some valuable input by <a href="http://www.edmondscommerce.co.uk/conversion-rate-optimization/using-advanced-analytics-to-improve-conversion-rates/" title="Using Advanced Analytics to Improve Conversion Rates" target="_blank">setting up and analysing your website metrics</a>, conduct a user survey by online forms and ask directly to the customers via email or even give them a private call.
All of the above is necessary to really understand how your users (customers) interact with your site, how:</p>

<ul>
    <li>valuable</li>

    <li>findable</li>

    <li>usable</li>

    <li>desirable</li>

    <li>accessible</li>

    <li>credible</li>
</ul>


<p>they found your site or offer to be. As for those who need a definition &ndash; <a href="http://en.wikipedia.org/wiki/User_experience" title="User Experience - Wikipedia" target="_blank">here&rsquo;s what wikipedia says about user experience</a> &ndash; <em>User experience (UX) involves a person&rsquo;s emotions about using a particular product, system or service. User experience highlights the experiential, affective, meaningful and valuable aspects of human-computer interaction and product ownership. Additionally, it includes a person’s perceptions of the practical aspects such as utility, ease of use and efficiency of the system. User experience is subjective in nature because it is about individual perception and thought with respect to the system. User experience is dynamic as it is constantly modified over time due to changing circumstances and new innovations.</em></p>

<h2>So, what elements the user experience should contain?</h2>


<p><img src="http://edmondscommerce.github.io/assets/UserExperience.png"></p>

<h3>Valuable</h3>


<p>The solution must deliver measurable value for site owners or interested group. It can be conversions, leads, subscriptions, etc.</p>

<h3>Findable</h3>


<p>Make it easy to find what your target audience is looking for, not only by optimizing search engines but focusing on internal navigation</p>

<h3>Usable</h3>


<p>Ease of use is extremely important; it must be intuitive and fluid. You need to create a funnel that leads your audience to your goal effectively</p>

<h3>Desirable</h3>


<p>Your target audience must have a strong desire to use your solution whether it’s for content, experience or emotions</p>

<h3>Accessible</h3>


<p>The solution must be easily accessible for your target audience – whether it’s technological requirements or people with disabilities</p>

<h3>Credible</h3>


<p>Your solution must be credible by all means. It has to build trust in your particular target audience by including important credibility factors</p>

<h2>What’s In It For You?</h2>


<p>The benefits are pretty obvious. In this stage we help you to identify your market and learn about your target audience behavior and needs as much as possible. These real world insights are extremely valuable and perform a key role in a project life-cycle. In short – careful planning allows you to focus on most beneficial features first and drive more revenue with minimum effort.</p>

<h2>Why Plan?</h2>


<p>When embarking on a project to launch or relaunch an e-commerce web site it can seem like a daunting and overwhelming prospect. The danger is that without <a href="http://www.edmondscommerce.co.uk/web-project-management/guidelines-of-effective-web-project-workflow/" title="Guidelines of Effective Web Project Management" target="_blank">proper planning and project management</a>, the final outcome can be much less effective and efficient than if proper planning and preliminary research is used to define clear goals and then ensure these are met</p>

<h2>Why Work With Us?</h2>


<p>Edmonds Commerce is specifically focused on E-Commerce projects. We have experienced and professional team of certified Magento and Zend developers, User Experience, Design and Strategy experts. We tend to become partners and build a lasting business relationship which is proven by our long term clients of some of most promising UK’s e-commerce stores and businesses all over the Europe.</p>

<h2>What’s Next?</h2>


<p>We are happy to hear more about your upcoming or existing e-commerce project. Please get in touch with us and explain your vision, goals, requirements and deadlines. Discover how we can help you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Great Way of Cross-platform Prototyping - Invisionapp]]></title>
    <link href="http://edmondscommerce.github.io/web%20design/a-great-way-of-cross-platform-prototyping.html"/>
    <updated>2013-09-02T07:16:48+01:00</updated>
    <id>http://edmondscommerce.github.io/web%20design/a-great-way-of-cross-platform-prototyping</id>
    <content type="html"><![CDATA[<p>Here at Edmonds Commerce we are always looking for new techniques and tools that allow to speed up and ease our internal work-flow which results in faster and more<a href="http://www.edmondscommerce.co.uk/web-project-management/guidelines-of-effective-web-project-workflow/" title="Guidelines of Effective Web Project Management" target="_blank"> effective project planning</a>, management and development. We love to involve and closely collaborate with our clients as much as possible.</p>

<p>Just found this awesome c<a href=" http://www.invisionapp.com/" title="Invisionapp - cross platform prototyping tool" target="_blank">ross-platform mockup and interactive prototyping tool &ndash; Invision</a> &ndash; which has an amazing feedback feature which could replace long email conversations. It is filled with lots of  active guides and how-to&rsquo;s which makes it really understandable for clients. Actually, I find this part the most important about all the application. So far there have been a serious struggle with this particular phase &ndash; work showoff, iterations and final sign off. That is a long journey for traditional email conversations.</p>

<p><img src="http://edmondscommerce.github.io/assets/InvisionApp-Design.png"> InvisionApp interface</p>

<p>I&rsquo;ve spent just a few moments with it, but it looks like 135.004 people in 70 countries aren&rsquo;t trusting this awesome tool just for fun. (as it is stated on <a href="http://www.invisionapp.com/" title="invisionapp homepage" target="_blank">invisionapp homepage</a> when writing this post) Feels like I&rsquo;ve finally found a well designed tool which has the most of the essential features.</p>

<p>Looking forward to take our clients on the journey of designing and iterating on their projects.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating & Testing a Responsive Design Has Never Been Easier]]></title>
    <link href="http://edmondscommerce.github.io/web%20design/creating-testing-a-responsive-design-has-never-been-faster.html"/>
    <updated>2013-09-02T07:02:01+01:00</updated>
    <id>http://edmondscommerce.github.io/web%20design/creating-testing-a-responsive-design-has-never-been-faster</id>
    <content type="html"><![CDATA[<p><img src="http://edmondscommerce.github.io/assets/Reflow.png"></p>

<p>Got my hands on these two marvellous responsive design tools from Adobe &ndash; <a href="http://www.adobe.com/EdgeReflow" title="Adobe Edge Reflow Homepage" target="_blank">Edge Reflow</a> and <a href="http://www.adobe.com/EdgeInspect‎" title="Adboe Edge Inspect" target="_blank">Edge Inspect</a>.</p>

<p>Although Reflow is still in Beta, it has brilliant concept. Never the less <u>it has a potential to redefine the way of how we create and test responsive designs</u> once and for all. A much more effective way. It actually allows you to visualise everything blazing fast by adding different break points and adjusting the layout and design for each of them. Going further &ndash; you can test that right away on most of the devices with Edge Inspect. It&rsquo;s that dead easy &ndash; just install the app and connect your phone or tablet with your computer to see how the design actually works on the target device.</p>

<p>There are plenty of good resources available that will get you started in no time. The effort of learning it is definitely worth every minute you spend. The most useful resource that I&rsquo;ve found so far is the <a href="http://http://www.adobe.com/devnet/edge-reflow/articles/edge-reflow-getting-started.html" title="Edge Reflow Guide for Beginners" target="_blank">original Edge Reflow guide from Adobe itself</a> It is a beginner level guide. Once you understand the core principles everything else is dead easy.</p>

<p><img src="http://edmondscommerce.github.io/assets/reflow_inspect.png"></p>

<p>Remember, that it is still in beta. Let&rsquo;s help Adobe team to create more remarkable products and post our ideas of improvements it <a href="http://forums.adobe.com/community/edge_reflow_preview?view=idea" title="Edge Reflow Forum" target="_blank">Edge Reflow forum.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add a Backorder Message on Magento's Product Page]]></title>
    <link href="http://edmondscommerce.github.io/magento/ssssssssssssss.html"/>
    <updated>2013-08-29T15:37:37+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/ssssssssssssss</id>
    <content type="html"><![CDATA[<p>Magento&rsquo;s use of backorders does notify the customer, but only once you actually reach the basket page, which can lead to disappointment and frustration from the customer. The better answer is to display this on the product page, in place of the &ldquo;In Stock&rdquo; message.</p>

<p>To acheive this, we just need to amend (read: override) the templates at</p>

<p>app/design/frontend/base/default/template/catalog/product/view/type/simple.phtml
app/design/frontend/base/default/template/catalog/product/view/type/grouped.phtml
app/design/frontend/base/default/template/catalog/product/view/type/configurable.phtml</p>

<p>And amend it to look like this:</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span> <span class="nv">$_product</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getProduct</span><span class="p">()</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getPriceHtml</span><span class="p">(</span><span class="nv">$_product</span><span class="p">)</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="nv">$stockLevel</span> <span class="o">=</span> <span class="p">(</span><span class="nx">int</span><span class="p">)</span><span class="nx">Mage</span><span class="o">::</span><span class="na">getModel</span><span class="p">(</span><span class="s1">&#39;cataloginventory/stock_item&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">loadByProduct</span><span class="p">(</span><span class="nv">$_product</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">getQty</span><span class="p">();</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="k">if</span><span class="p">(</span><span class="nv">$_product</span><span class="o">-&gt;</span><span class="na">isSaleable</span><span class="p">()</span><span class="o">&lt;</span><span class="nx">strong</span><span class="o">&gt;</span> <span class="o">&amp;&amp;</span> <span class="nv">$stockLevel</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">&lt;/</span><span class="nx">strong</span><span class="o">&gt;</span><span class="p">)</span><span class="o">:</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;p class=&quot;availability in-stock&quot;&gt;</span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">__</span><span class="p">(</span><span class="s1">&#39;Availability:&#39;</span><span class="p">)</span> <span class="cp">?&gt;</span><span class="x"> &lt;span&gt;</span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">__</span><span class="p">(</span><span class="s1">&#39;In stock&#39;</span><span class="p">)</span> <span class="cp">?&gt;</span><span class="x">&lt;/span&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="k">elseif</span><span class="p">(</span><span class="nv">$_product</span><span class="o">-&gt;</span><span class="na">isSaleable</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="nv">$stockLevel</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;p class=&quot;availability in-stock&quot;&gt;</span>
</span><span class='line'><span class="x">        </span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">__</span><span class="p">(</span><span class="s1">&#39;Availability:&#39;</span><span class="p">)</span> <span class="cp">?&gt;</span><span class="x"> &lt;span&gt;</span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">__</span><span class="p">(</span><span class="s1">&#39;Available for Backorder&#39;</span><span class="p">)</span> <span class="cp">?&gt;</span><span class="x">&lt;/span&gt;&lt;br /&gt;</span>
</span><span class='line'><span class="x">        </span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">__</span><span class="p">(</span><span class="s1">&#39;Please allow up to two weeks for delivery&#39;</span><span class="p">)</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;/p&gt;</span>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="k">else</span><span class="o">:</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    &lt;p class=&quot;availability out-of-stock&quot;&gt;</span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">__</span><span class="p">(</span><span class="s1">&#39;Availability:&#39;</span><span class="p">)</span> <span class="cp">?&gt;</span><span class="x"> &lt;span&gt;</span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">__</span><span class="p">(</span><span class="s1">&#39;Out of stock&#39;</span><span class="p">)</span> <span class="cp">?&gt;</span><span class="x">&lt;/span&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="cp">&lt;?php</span> <span class="k">endif</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disable JavaScript alerts for a page]]></title>
    <link href="http://edmondscommerce.github.io/javascript/disable-javascript-alerts-for-a-page.html"/>
    <updated>2013-08-28T09:21:30+01:00</updated>
    <id>http://edmondscommerce.github.io/javascript/disable-javascript-alerts-for-a-page</id>
    <content type="html"><![CDATA[<p>If you encounter a webpage that is generating a lot of alerts, the following bookmark will prevent them from stealing focus but still allow you to see what is being said.</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">javascript</span><span class="o">:</span><span class="nx">alert</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span> <span class="nx">text</span> <span class="p">)</span> <span class="p">{</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span> <span class="nx">text</span> <span class="p">);</span> <span class="k">return</span> <span class="kc">true</span><span class="p">;</span> <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHPStorm Regex Convert Array to Object Syntax]]></title>
    <link href="http://edmondscommerce.github.io/php/phpstorm-regex-convert-array-to-object-syntax.html"/>
    <updated>2013-08-27T14:40:35+01:00</updated>
    <id>http://edmondscommerce.github.io/php/phpstorm-regex-convert-array-to-object-syntax</id>
    <content type="html"><![CDATA[<p>If you are converting some code from using array syntax to object property syntax then you might like this little snippet of regex.</p>

<p>This is design to paste straight into the find/replace dialogue in PHPStorm</p>

<p>Find:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>\$(\w+)\['([^']+)'\]
</span></code></pre></td></tr></table></div></figure>


<p>Replace:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>\\\$$1-&gt;$2
</span></code></pre></td></tr></table></div></figure>


<p>And that is it</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL Substring not Returning Anything + Solution]]></title>
    <link href="http://edmondscommerce.github.io/mysql/mysql-substring-not-returning-anything-solution.html"/>
    <updated>2013-08-20T10:54:20+01:00</updated>
    <id>http://edmondscommerce.github.io/mysql/mysql-substring-not-returning-anything-solution</id>
    <content type="html"><![CDATA[<p>If you are puzzled why your simple usage of the MySQL SUBSTRING() function is not returning anything this could be your solution.</p>

<p>The substring function allows you to specify a string (eg a column), the start character and the length. If you are used to languages like PHP then you are probably used to this kind of function regarding 0 as the starting character. In fact this function regards 1 as the starting character. If you specify 0 then you simply won&rsquo;t get any results.</p>

<p>This does not work:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>SELECT SUBSTRING(column, 0, 10) as tenchars
</span></code></pre></td></tr></table></div></figure>


<p>This does work:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>SELECT SUBSTRING(column, 1, 10) as tenchars
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compiling Twitter Bootstrap's less files on Ubuntu 12.04/Mint 13]]></title>
    <link href="http://edmondscommerce.github.io/less%20css/compiling-twitter-bootstraps-less-files-on-ubuntu-12-04mint-13.html"/>
    <updated>2013-07-30T15:57:06+01:00</updated>
    <id>http://edmondscommerce.github.io/less%20css/compiling-twitter-bootstraps-less-files-on-ubuntu-12-04mint-13</id>
    <content type="html"><![CDATA[<p>The version of lessc available in Ubuntu 12.04&rsquo;s repositories is now out of date, stuck on version 1.2. When attempting to compile the bootstrap.less file to a proper CSS file, you&rsquo;ll find it complaining with the following error:</p>

<figure class='code panel panel-default'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>NameError: #grid &gt; .core is undefined in /path/to/folder/less/bootstrap.less
</span></code></pre></td></tr></table></div></figure>


<p>This is due to your lessc version being outdated, but with Ubuntu 12.04/Mint 13, lessc 1.3+ isn&rsquo;t available in the repositories. You&rsquo;ll also have issues because nodejs itself is outdated too.</p>

<p>To update both issue the following commands:</p>

<figure class='code panel panel-default'><figcaption class='panel-heading'><h3 class='panel-title'></h3></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install python-software-properties python g++ make
</span><span class='line'>sudo add-apt-repository ppa:chris-lea/node.js
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install nodejs
</span><span class='line'>
</span><span class='line'>sudo apt-get autoremove node-less
</span><span class='line'>sudo npm install -g less
</span></code></pre></td></tr></table></div></figure>


<p>(Source: <a href="http://askubuntu.com/questions/272780/ubuntu-12-10-lessc-1-3-3-installation" target="_blank">Ask Ubuntu</a>)</p>
]]></content>
  </entry>
  
</feed>
