<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tip on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/tags/tip/</link>
    <description>Recent content in Tip on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Mar 2014 11:34:50 +0000</lastBuildDate>
    <atom:link href="http://example.com/tags/tip/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Compare Text Chunks Quickly in PHPStorm</title>
      <link>http://example.com/phpstorm/compare-text-chunks-quickly-in-phpstorm.html</link>
      <pubDate>Wed, 26 Mar 2014 11:34:50 +0000</pubDate>
      
      <guid>http://example.com/phpstorm/compare-text-chunks-quickly-in-phpstorm.html</guid>
      <description>&lt;p&gt;Some times you just need to compare a few lines from one file to a few lines from somewhere else. Full blown file diffing will give you all kinds of false positive information, actually you just want to compare a few lines.&lt;/p&gt;

&lt;p&gt;I had a look around and couldn&amp;rsquo;t see an obvious way to do it but then I saw the &amp;ldquo;Compare with Clipboard&amp;rdquo; option in the right click menu.&lt;/p&gt;

&lt;p&gt;To use this is really easy and super handy.&lt;/p&gt;

&lt;p&gt;First of all, highlight one of the chunks of text and get it into your clipboard &lt;code&gt;[ctrl]+[c]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now highlight your second chunk of text and simply select the &amp;ldquo;Compare with Clipboard&amp;rdquo; option.&lt;/p&gt;

&lt;p&gt;You will now get a standard PHPStorm diff viewer allowing you to compare the text chunks side by side.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automatically convert old PHP file to camelCase </title>
      <link>http://example.com/bash/automatically-convert-old-php-file-to-camelcase.html</link>
      <pubDate>Thu, 17 Oct 2013 10:53:15 +0000</pubDate>
      
      <guid>http://example.com/bash/automatically-convert-old-php-file-to-camelcase.html</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently been working with an old project that uses a combination of different coding styles.&lt;/p&gt;

&lt;p&gt;One of the more trivial annoyances with this is that the variables used through the project are a combination of $camelCase and $snake_case which throws of the coding standards tools that I use.&lt;/p&gt;

&lt;p&gt;To get round this I have put a little script together that will convert $snake_case to $camelCase automatically.&lt;/p&gt;

&lt;p&gt;Obviously, you will need to check the results of this to make sure that there are not variables that should not be changed, but it has saved me a lot of time doing this manually.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve added this to my .bash_allias file, though it could easily be turned into a standalone script if required&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#Fix legacy code&lt;/span&gt;
 cammelCase&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   vim -E -s &lt;span class=&#34;nv&#34;&gt;$@&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;-EOF&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :%s#\%($\%(\k\+\)\)\@&amp;lt;=_\(\k\)#\u\1#g&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :update&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :quit&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
 
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Disable JavaScript alerts for a page</title>
      <link>http://example.com/javascript/disable-javascript-alerts-for-a-page.html</link>
      <pubDate>Wed, 28 Aug 2013 09:21:30 +0000</pubDate>
      
      <guid>http://example.com/javascript/disable-javascript-alerts-for-a-page.html</guid>
      <description>&lt;p&gt;If you encounter a webpage that is generating a lot of alerts, the following bookmark will prevent them from stealing focus but still allow you to see what is being said.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;javascript&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tab Complete for SSH and SCP</title>
      <link>http://example.com/magento/bash/tab-complete-for-ssh-and-scp.html</link>
      <pubDate>Fri, 26 Jul 2013 10:31:41 +0000</pubDate>
      
      <guid>http://example.com/magento/bash/tab-complete-for-ssh-and-scp.html</guid>
      <description>&lt;p&gt;If you are required to connect to different servers, then remembering and typing in all of the details can become tiresome.&lt;/p&gt;

&lt;p&gt;Thankfully there is simple solution to this, using the SSH config file.&lt;/p&gt;

&lt;p&gt;To make use of this, create the following file ~/.ssh/config&lt;/p&gt;

&lt;p&gt;In there add the following details&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Host easyToRememberName
    HostName 127.0.0.1
    Port 2020
    User ross
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will then can tab completion on ssh and scp commands. You can see more of the options that can be set in the file &lt;a href=&#34;http://linux.die.net/man/5/ssh_config&#34; title=&#34;ssh config man page&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Side by Side diff on the command line</title>
      <link>http://example.com/bash/side-by-side-diff-on-the-command-line.html</link>
      <pubDate>Tue, 09 Jul 2013 17:25:18 +0000</pubDate>
      
      <guid>http://example.com/bash/side-by-side-diff-on-the-command-line.html</guid>
      <description>&lt;p&gt;I have recently discovered a handy trick when comparing files on the command line.&lt;/p&gt;

&lt;p&gt;Adding the -y command line options to diff will display the files side by side.&lt;/p&gt;

&lt;p&gt;Using this with the &lt;a href=&#34;http://www.colordiff.org/&#34; title=&#34;Color Diff&#34; target=&#34;_blank&#34;&gt;Color Diff&lt;/a&gt; tool will help you transform this&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://example.com/images/normal-diff.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To this&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://example.com/images/color-diff-600x200.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Payment has failed... Magento and SagePay CE Error &#43; Solution</title>
      <link>http://example.com/magento/payment-has-failed-magento-and-sagepay-ce-error-solution.html</link>
      <pubDate>Wed, 22 May 2013 14:58:25 +0000</pubDate>
      
      <guid>http://example.com/magento/payment-has-failed-magento-and-sagepay-ce-error-solution.html</guid>
      <description>&lt;p&gt;I recently upgraded a magento store and installed the Sage Pay Suite CE module from EbizMarks.&lt;/p&gt;

&lt;p&gt;The following error came up twice during the testing of the module, once in the frontend and once in the admin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Payment has failed, please reload checkout page and try again. Your card has not been charged&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The error itself is triggered from the saveAfter method in the Ebizmarts_SagePaySuite_Model_Observer_Sales class and is called every time an order is saved.&lt;/p&gt;

&lt;p&gt;The error on the frontend was caused by a javascript error. Adding the following to the top of the sagePaySuite_Checkout.js file corrected it&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sagePayIsMobile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sagePayIsMobile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/BlackBerry/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/webOS/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/Android/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/iPhone/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/iPod/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/iPad/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The error in the admin was caused by a different extension being called when the order was saved. Normally the extension ensures that the method is not called when it is not needed and this is done by checking the route and the registry. If an extension saves the order these checks are not triggered so you will need to add in your own. To do that you will need add the following code to the action that is saving the error&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;Mage::register(&amp;#39;skipSagePay&amp;#39;, TRUE);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then change the following line in the Ebizmarts/SagePaySuite/Model/Observer/Sales.php file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;if( (Mage::app()-&amp;gt;getRequest()-&amp;gt;getControllerModule() == &amp;#39;Mage_Api&amp;#39;) || Mage::registry(&amp;#39;current_shipment&amp;#39;) || Mage::registry(&amp;#39;sales_order&amp;#39;) || Mage::registry(&amp;#39;current_creditmemo&amp;#39;) || Mage::registry(&amp;#39;current_invoice&amp;#39;) || ($order-&amp;gt;getPayment()-&amp;gt;getMethod() == &amp;#39;sagepayrepeat&amp;#39;) ){&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;if( (Mage::app()-&amp;gt;getRequest()-&amp;gt;getControllerModule() == &amp;#39;Mage_Api&amp;#39;) || Mage::registry(&amp;#39;current_shipment&amp;#39;) || Mage::registry(&amp;#39;sales_order&amp;#39;) || Mage::registry(&amp;#39;current_creditmemo&amp;#39;) || Mage::registry(&amp;#39;current_invoice&amp;#39;) || ($order-&amp;gt;getPayment()-&amp;gt;getMethod() == &amp;#39;sagepayrepeat&amp;#39;) || Mage::registry(&amp;#39;skipSagePay&amp;#39;)){&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>PrestaShop - Session handling</title>
      <link>http://example.com/prestashop/prestashop-session-handling.html</link>
      <pubDate>Thu, 28 Mar 2013 17:13:28 +0000</pubDate>
      
      <guid>http://example.com/prestashop/prestashop-session-handling.html</guid>
      <description>&lt;p&gt;Like most frameworks and software packages PrestaShop has it&amp;rsquo;s own way of handling session variables.&lt;/p&gt;

&lt;p&gt;PrestaShop uses the Cookie class to manage session variables. While this isn&amp;rsquo;t strictly a singleton you can get a pre initialised instance using Context::getContected-&amp;gt;cookie if the FrontController-&amp;gt;init() method has been called already.&lt;/p&gt;

&lt;p&gt;The Cookie class uses the magic __get __isset __set __unset magic methods to handle parameters. Parameters set in the cookie are actually given to the client in an encrypted blob. This is good because it means sessions are not really stored on the server. This does mean, however, that only scalar values can be stored in the session. To store non-scalar values you can usually get away with serialising them but there are some restrictions even then. If you do struggle to store serialised values you can base64 encode them to fix any remaining issues.&lt;/p&gt;

&lt;p&gt;Once you have set your variables you need to call the write method to save your variables to the cookie.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PrestaShop - Developer Notes</title>
      <link>http://example.com/prestashop/prestashop-developer-notes.html</link>
      <pubDate>Tue, 19 Mar 2013 17:47:26 +0000</pubDate>
      
      <guid>http://example.com/prestashop/prestashop-developer-notes.html</guid>
      <description>&lt;p&gt;PrestaShop is a fully featured shopping platform and offers much of the functionality that other eCommerce shopping platforms do. Compared to, for example, Magento PrestaShop is significantly simpler to develop for.&lt;/p&gt;

&lt;p&gt;Here is the run down of the key aspects that any one building a web site on PrestaShop should be aware of.&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;Modules&lt;/h2&gt;
PrestaShop is based around a modular design which is quite similar to Joomlas module system.
A modules presence and position on the front end is defined by hooking the module into a particular section on the frontend. There are loads of hooks that can be used. Most modules will add them selves to the hook they think is most appropriate on install. The ordering of modules also defines the order they appear in a given hook.
A key point of managing modules that can easily be over looked is that you can grab and drag modules in a given hook by clicking and holding the position change buttons.&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;Themes&lt;/h2&gt;
Off the shelf themes are usually not simply a new set of templates and CSS but also modules as well. Quite allot of themes are built around specific modules being in specific hooks some times in a specific order.&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;Creating your own module&lt;/h2&gt;
Defining your own module is really straight forward:
Create a folder in modules called my_module.
Create a file called my_module.php, in this file create a class called My_module which extends Module.
Create a config.xml with the following template:
&amp;lt;?xml version=&amp;ldquo;1.0&amp;rdquo; encoding=&amp;ldquo;UTF-8&amp;rdquo; ?&amp;gt;
&lt;module&gt;
    &lt;name&gt;my_module&lt;/name&gt;
    &lt;displayName&gt;My Module&lt;/displayName&gt;
    &lt;version&gt;1&lt;/version&gt;
    &lt;description&gt;A test module, it does nothing&lt;/description&gt;
    &lt;author&gt;My self&lt;/author&gt;
    &lt;tab&gt;front_office_features&lt;/tab&gt;
    &lt;is_configurable&gt;0&lt;/is_configurable&gt;
    &lt;need_instance&gt;1&lt;/need_instance&gt;
&lt;/module&gt;
Done, the module will appear in the module list but do nothing. You can look at the base module class to see all the function available that get called by PrestaShop are different times to do what you need to do.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apache Log File Analysis Script</title>
      <link>http://example.com/bash/apache-log-file-analysis-script.html</link>
      <pubDate>Thu, 14 Mar 2013 14:17:48 +0000</pubDate>
      
      <guid>http://example.com/bash/apache-log-file-analysis-script.html</guid>
      <description>&lt;p&gt;Here is a little bash script we knocked together to track down some malicious activity on a clients server.&lt;/p&gt;

&lt;p&gt;Using a bit of awk etc to parse the log files we could quickly track down an IP address that was overloading the server and then take steps to block that person.&lt;/p&gt;

&lt;p&gt;Here is the script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;###### SETUP ############&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;LOG_FOLDER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/var/www/vhosts/domain.co.uk/statistics/logs
&lt;span class=&#34;nv&#34;&gt;ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$LOG_FOLDER&lt;/span&gt;/access_log

&lt;span class=&#34;nv&#34;&gt;HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;20000



&lt;span class=&#34;c1&#34;&gt;######### FUNCTIONS ##############&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; title&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;---------------------------------&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$@&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;---------------------------------&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; urls_by_ip&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;IP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
    tail -5000 &lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk -v &lt;span class=&#34;nv&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$IP&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; $1 ~ ip {freq[$7]++} END {for (x in freq) {print freq[x], x}}&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort -rn &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -20
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; ip_addresses_by_user_agent&lt;span class=&#34;o&#34;&gt;(){&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;USERAGENT_STRING&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;TOP_20_IPS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`tail  -&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | grep &amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;USERAGENT_STRING&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;  | awk &amp;#39;{freq[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;]++} END {for (x in freq) {print freq[x], x}}&amp;#39; | sort -rn | head -20`&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_IPS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;####### RUN REPORTS #############&lt;/span&gt;


title &lt;span class=&#34;s2&#34;&gt;&amp;quot;top 20 URLs&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;TOP_20_URLS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`tail -&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | awk &amp;#39;{freq[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$7&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;]++} END {for (x in freq) {print freq[x], x}}&amp;#39; | sort -rn | head -20`&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_URLS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;


title &lt;span class=&#34;s2&#34;&gt;&amp;quot;top 20 URLS excluding POST data&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;TOP_20_URLS_WITHOUT_POST&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`tail  -&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | awk -F&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ?&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot; &amp;#39;{freq[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$7&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;]++} END {for (x in freq) {print freq[x], x}}&amp;#39; | sort -rn | head -20`&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_URLS_WITHOUT_POST&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;


title &lt;span class=&#34;s2&#34;&gt;&amp;quot;top 20 IPs&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;TOP_20_IPS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`tail  -&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | awk &amp;#39;{freq[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;]++} END {for (x in freq) {print freq[x], x}}&amp;#39; | sort -rn | head -20`&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_IPS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;

title &lt;span class=&#34;s2&#34;&gt;&amp;quot;top 20 user agents&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;TOP_20_USER_AGENTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`tail  -&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | cut -d\  -f12- | sort | uniq -c | sort -rn | head -20`&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_USER_AGENTS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;


title &lt;span class=&#34;s2&#34;&gt;&amp;quot;IP Addresses for Top 3 User Agents&amp;quot;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; I&amp;lt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; I++&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;UA&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`echo &amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_USER_AGENTS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot; | head -n &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$I&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | tail -n 1 | awk &amp;#39;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;=&amp;quot;&amp;quot;; print &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;}&amp;#39;`&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$UA&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;~~~~~~~~~~~~~~~~~~&amp;quot;&lt;/span&gt;
    ip_addresses_by_user_agent &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$UA&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;    &amp;quot;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Restrict Access Using .htaccess File Rules in PHP</title>
      <link>http://example.com/php/restrict-access-using-htaccess-file-rules-in-php.html</link>
      <pubDate>Mon, 11 Mar 2013 15:29:34 +0000</pubDate>
      
      <guid>http://example.com/php/restrict-access-using-htaccess-file-rules-in-php.html</guid>
      <description>&lt;p&gt;The function below is one that we have used a few times to allow certain &amp;ldquo;admin only&amp;rdquo; assets to be accessed or visible on the front end of a website.&lt;/p&gt;

&lt;p&gt;The theory is that the htaccess file in the admin folder will be kept up to date and can therefore be used as the authoritative list of IP addresses that are allowed to access admin assets.&lt;/p&gt;

&lt;p&gt;This function is simple enough and should be useful anywhere that you use htaccess to protect a certain folder and would like to implement the same white list rules in other places without having to maintain a duplicate list of authorised IP addresses.&lt;/p&gt;

&lt;p&gt;The function also uses &lt;a href=&#34;http://www.php.net/manual/en/language.variables.scope.php#language.variables.scope.static&#34; title=&#34;PHP.net Static Variables&#34; target=&#34;_blank&#34;&gt;static variables&lt;/a&gt; - a lesser known bit of PHP functionality which can be a nice easy performance optimisation when working with procedural PHP code. If a function will be called many times and will always return the same result in a single request, you can actually cache that result to a static variable and serve that on any subsequent requests.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function isAllowedIp() {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    static $pass = null;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if ($pass !== null) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        return $pass;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $pass=false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $customer_ip = $_SERVER[&amp;#39;REMOTE_ADDR&amp;#39;];    &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $htaccess = file_get_contents(&amp;#39;admin/.htaccess&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    preg_match_all(&amp;#39;%allow from ([0-9.]+)%&amp;#39;, $htaccess, $matches);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    foreach ($matches[1] as $ip) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if ($ip == $customer_ip) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $pass = true; //this is stored statically for perfomance reasons&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            return true;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    return false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Simple Bash Single Process Enforcement</title>
      <link>http://example.com/bash/simple-bash-single-process-enforcement.html</link>
      <pubDate>Thu, 21 Feb 2013 15:06:39 +0000</pubDate>
      
      <guid>http://example.com/bash/simple-bash-single-process-enforcement.html</guid>
      <description>&lt;p&gt;If you have a bash script that you want to make sure there is only ever one instance of, for example something triggered by cron that might not have finished the next time cron tries to trigger it then you might like this little snippet:&lt;/p&gt;

&lt;p&gt;This is built for running Magento shell scripts (if you don&amp;rsquo;t know about these, check them out) that are run on cron.&lt;/p&gt;

&lt;p&gt;Also note the logging that keeps log files&lt;/p&gt;

&lt;p&gt;Note the use of a character class in grep means it wont match itself - nice eh :)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;HOUR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;date +&lt;span class=&#34;s1&#34;&gt;&amp;#39;%H:%M&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;RUNNING&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;ps waux &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;s2&#34;&gt;&amp;quot;longrunner[.]php&amp;quot;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$RUNNING&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Its not running, we can now run it&amp;quot;&lt;/span&gt;
    php -f /home/my/public_html/shell/longrunner.php -- import &amp;gt; /home/my/public_html/var/log/mylog.txt 2&amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;1
    cp -f  /home/my/public_html/var/log/my.txt /home/my/public_html/var/log/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;HOUR&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.my.txt
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;COMPLETED&amp;quot;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;It is running, aborting running this time&amp;quot;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Sticky page scrolling in JavaScript with JQuery</title>
      <link>http://example.com/jquery/sticky-page-scrolling-in-javascript-with-jquery.html</link>
      <pubDate>Wed, 20 Feb 2013 17:35:30 +0000</pubDate>
      
      <guid>http://example.com/jquery/sticky-page-scrolling-in-javascript-with-jquery.html</guid>
      <description>&lt;p&gt;If you have a page that keeps getting longer because new items appear on it at the bottom and what&amp;rsquo;s at the bottom of the page is most important it can be a paint to have to keep scrolling done to see it.&lt;/p&gt;

&lt;p&gt;You can make it auto scroll continuously with JQuery but that&amp;rsquo;s potentially really awkward if at any point you need to scroll up (it basically means you can&amp;rsquo;t).&lt;/p&gt;

&lt;p&gt;The best solution is to make the page auto scroll in a sticky fashion. So when the page is already scrolled all the way to the bottom it auto scrolls, when it&amp;rsquo;s not at the bottom it does not scroll.&lt;/p&gt;

&lt;p&gt;This can be achieved quite easily with the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastDocumentHeight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;scrollTop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;html, body&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;animate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;scrollTop&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;slow&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;lastDocumentHeight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In this example lastDocumentHeight is a global. It works by determining if the current position is the same as it was previously and this position equates to being at the bottom of the page then scroll. This needs to run after your page length has increased.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQLSTATE[28000]: Invalid authorization specification: 1045 Access denied for user &#43; Solution</title>
      <link>http://example.com/mysql/sqlstate28000-invalid-authorization-specification-1045-access-denied-for-user-solution.html</link>
      <pubDate>Tue, 12 Feb 2013 18:03:29 +0000</pubDate>
      
      <guid>http://example.com/mysql/sqlstate28000-invalid-authorization-specification-1045-access-denied-for-user-solution.html</guid>
      <description>&lt;p&gt;I have recently been running some MySql scripts that wrote to a file.&lt;/p&gt;

&lt;p&gt;These worked fine locally, but as soon as I deployed them I started to get the error above.&lt;/p&gt;

&lt;p&gt;After much looking around I came across this solution.&lt;/p&gt;

&lt;p&gt;When I was developing locally, I was connecting with a user that had global privileges. When I was running the code on the server I was connecting with a user that only had privileges for the database I was using.&lt;/p&gt;

&lt;p&gt;The issue is that then FILE privilege is a Global setting, so the user did not have access to it, hence the access denied message.&lt;/p&gt;

&lt;p&gt;Grant FILE privileges and you can connect as expected&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reading JSON without Reading JSON!</title>
      <link>http://example.com/programming/reading-json-without-reading-json.html</link>
      <pubDate>Fri, 08 Feb 2013 16:16:19 +0000</pubDate>
      
      <guid>http://example.com/programming/reading-json-without-reading-json.html</guid>
      <description>&lt;p&gt;JSON is a well structure interoperable way of passing data between systems. It&amp;rsquo;s a good way of passing large amount of data into a web page for JavaScript to process and between system on the internet regardless of there architecture or programming language.&lt;/p&gt;

&lt;p&gt;JSON is one of the hardest data structure to read directly as a human in it&amp;rsquo;s RAW format compared to other formal grammars such as XML, YAML or ini.&lt;/p&gt;

&lt;p&gt;Fortunately there is an easy trick that you can do with Chrome, Firefox with Firebug and even Opera and IE9!&lt;/p&gt;

&lt;p&gt;Take the JSON you have, wrap it in &amp;ldquo;eval()&amp;rdquo; the same as you would if you where writing a web page (because it is just JavaScript after all) run it and every modern browser this was tested with should allow you to inspect the resulting data structure.&lt;/p&gt;

&lt;p&gt;Example JSON:
&lt;code&gt;
{&amp;ldquo;glossary&amp;rdquo;:{&amp;ldquo;title&amp;rdquo;:&amp;ldquo;example glossary&amp;rdquo;,&amp;ldquo;GlossDiv&amp;rdquo;:{&amp;ldquo;title&amp;rdquo;:&amp;ldquo;S&amp;rdquo;,&amp;ldquo;GlossList&amp;rdquo;:{&amp;ldquo;GlossEntry&amp;rdquo;:{&amp;ldquo;ID&amp;rdquo;:&amp;ldquo;SGML&amp;rdquo;,&amp;ldquo;SortAs&amp;rdquo;:&amp;ldquo;SGML&amp;rdquo;,&amp;ldquo;GlossTerm&amp;rdquo;:&amp;ldquo;Standard Generalized Markup Language&amp;rdquo;,&amp;ldquo;Acronym&amp;rdquo;:&amp;ldquo;SGML&amp;rdquo;,&amp;ldquo;Abbrev&amp;rdquo;:&amp;ldquo;ISO 8879:1986&amp;rdquo;,&amp;ldquo;GlossDef&amp;rdquo;:{&amp;ldquo;para&amp;rdquo;:&amp;ldquo;A meta-markup language, used to create markup languages such as DocBook.&amp;rdquo;,&amp;ldquo;GlossSeeAlso&amp;rdquo;:[&amp;ldquo;GML&amp;rdquo;,&amp;ldquo;XML&amp;rdquo;]},&amp;ldquo;GlossSee&amp;rdquo;:&amp;ldquo;markup&amp;rdquo;}}}}}
&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
Firefox with Firebug:
![Image](/images/firefoxjson-600x328.png)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
Chrome:
![Image](/images/chromejson-600x313.png)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
Opera:
![Image](/images/bhtAjti.png)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
Internet Explorer 9:
Note: To see this structure you need to click the &#34;Add watcher&#34; link displayed upon running the code.
![Image](/images/ie9json.png)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Git and Sub Module Tips</title>
      <link>http://example.com/git/git-and-sub-module-tips.html</link>
      <pubDate>Thu, 24 Jan 2013 17:40:20 +0000</pubDate>
      
      <guid>http://example.com/git/git-and-sub-module-tips.html</guid>
      <description>&lt;p&gt;Using sub modules in git is incredibly useful and allows for easier and more flexible working when working on component based large projects. In a nut shell the use of sub modules (as the name suggests) allows you to include a git repository as a part of another git repository in order to allow you to use the sub modules code without having to duplicate it&amp;rsquo;s content in to your repository.&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;Important commands you will need when working with sub modules&lt;/h4&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;b&gt;git submodule init&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;This tells git to read the modules file and make your local repository aware of any sub modules. When you checkout a repository that uses sub modules nothing is done with them until you do this. You will need to run this at least after cloning a repo but possibly after pulling if new sub modules are added.&lt;/dd&gt;
&lt;dt&gt;&lt;b&gt;git submodule update&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;This makes git to update the sub modules to match what the config says it should be. You will probably need this after cloning a repository for the first time or when you pull changes from a remote as some one may have updated the position of the sub module. When running this you should make sure that you don&amp;rsquo;t have any uncommitted changes in any submodules other wise you will lose them and find it hard to retrieve them.&lt;/dd&gt;
&lt;dt&gt;&lt;b&gt;git submodule add absolute_path/url_to_repo location_of_repo_in_project&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;This command tells git to add the repository at the specified URL/path to the repository. Git will add it to the modules file. After adding it you need to commit. The path to the repo either needs to be the absolute path if you are working locally or the URL that is accessible via the Internet/LAN depending on your environment. It has to be like this so that it doesn&amp;rsquo;t matter where the repository that will be cloning the sub module is located&lt;/dd&gt;
&lt;dt&gt;&lt;b&gt;git help submodule&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;Gives you the man page for the submodule command, an invaluable resource&lt;/dd&gt;
&lt;/dl&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;Key facts when working with sub modules&lt;/h4&gt;
&lt;h5&gt;Working in sub modules&lt;/h5&gt;
If you want to modify contents of the sub module, that is make changes and commit them back to the sub modules repository, you can work just as normal. The only thing to watch out off is that when you first do &lt;em&gt;git submodule init; git submodule update;&lt;/em&gt; it will checkout what ever commit was specified. This means that the sub module might not be on an actual branch but instead only have a particular commit checkout. Make sure to checkout the relevant branch on the sub module before commencing work.&lt;/p&gt;

&lt;p&gt;&lt;h5&gt;Updating a sub modules position on a remote repo&lt;/h5&gt;
When &lt;em&gt;git submodule update&lt;/em&gt; runs it checkouts out the specified commit by the main repository. If there is no commit specified it will checkout the default branch (usually master). If you want it to checkout a specific branch this cannot be done in a literal sense. Instead what you have to do is checkout the top commit of that branch, then commit the changes to the sub module in main repository. This will ensure that the sub module is now at that position when &lt;em&gt;git submodule update&lt;/em&gt; is run. You will have to do this every time you want to update it&amp;rsquo;s position.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>