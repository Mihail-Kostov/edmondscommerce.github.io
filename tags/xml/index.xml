<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xml on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/xml/</link>
    <description>Recent content in Xml on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Jan 2017 15:05:32 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/xml/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introducing UI Components</title>
      <link>https://edmondscommerce.github.io/introducing-ui-components/</link>
      <pubDate>Mon, 09 Jan 2017 15:05:32 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/introducing-ui-components/</guid>
      <description>

&lt;h1 id=&#34;contents&#34;&gt;Contents&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#intro&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_ui_comp&#34;&gt;What is a UI Component&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#structure&#34;&gt;Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#important_to_note&#34;&gt;Important to Note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tech_to_understand&#34;&gt;Technologies You Need to Understand&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#xml&#34;&gt;XML, XHTML and XSD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#knockoutjs&#34;&gt;KnockoutJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#requirejs&#34;&gt;RequireJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pestle&#34;&gt;Pestle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#much_components&#34;&gt;Javascript, KnockoutJS + Magento and UI Components&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_js_component&#34;&gt;What is a Javascript (JS) Component?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_ko_mage_component&#34;&gt;What is a KnockoutJS + Magento component?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_the_diff&#34;&gt;What&amp;rsquo;s the difference between the three?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ui_comp_flow&#34;&gt;UI Component Process Flow&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#the_players&#34;&gt;The Players&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#process_flow_chart&#34;&gt;Process Flow Chart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#video&#34;&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mage_core_comps&#34;&gt;Magento Core UI Component Examples&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#form&#34;&gt;Form&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#listing&#34;&gt;Listing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&#34;intro&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Over the course of this article I will give you a whistle stop tour of UI Components.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;what_is_ui_comp&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;what-is-a-ui-component&#34;&gt;What is a UI Component?&lt;/h1&gt;

&lt;p&gt;In a nutshell a UI Component is an easily reusable collection of PHP, Javascript and HTML code that
provides one user interface functionality. A UI component can easily be used anywhere within your
layout files using only this small snippet.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;ui–°omponent&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;some_ui_component_instance_name&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will make more sense &lt;a href=&#34;#knockoutjs&#34;&gt;later&lt;/a&gt;, but it also looks like UI Components add the M (model)
to KnockoutJS&amp;rsquo;s &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/hh848246.aspx&#34; target=&#34;_blank&#34;&gt;MVVM&lt;/a&gt;
(or really VVM) architecture. This architecture is used to build all of Magento 2&amp;rsquo;s front end.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;structure&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;structure&#34;&gt;Structure&lt;/h2&gt;

&lt;p&gt;UI Components are made up of &amp;lsquo;Basic Components&amp;rsquo; and &amp;lsquo;Secondary components&amp;rsquo;. The Basic Components are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/components/ui-listing-grid.html&#34; target=&#34;_blank&#34;&gt;Listing Component&lt;/a&gt; - Visualising and filtering data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/components/ui-form.html&#34; target=&#34;_blank&#34;&gt;Form Component&lt;/a&gt; - CRUD&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Secondary Components can be used to extend the functionality of the Basic Components. Each Basic
Component has it&amp;rsquo;s own set of Secondary Components. The latest devdocs (2.1) have a partial list of
all components &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/ui_comp_list_concept.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.
You can also find all the available UI Components listed in
this &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml#L8&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;definition.xml&lt;/code&gt;&lt;/a&gt;
(more on that later).&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;important_to_note&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;important-to-note&#34;&gt;Important to Note&lt;/h2&gt;

&lt;h3 id=&#34;you-can-t-create-custom-ui-components&#34;&gt;You Can&amp;rsquo;t Create Custom UI Components&lt;/h3&gt;

&lt;p&gt;According to the official &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/bk-ui_comps.html&#34; target=&#34;_blank&#34;&gt;devdocs&lt;/a&gt;,
extension developers &lt;em&gt;cannot&lt;/em&gt; create custom UI Components. You can only customise existing ones. However,
Alan Storm does have a &lt;a href=&#34;http://alanstorm.com/magento_2_simplest_xsd_valid_ui_component/&#34; target=&#34;_blank&#34;&gt;solution&lt;/a&gt; (hack) for getting around this.&lt;/p&gt;

&lt;h3 id=&#34;ui-components-are-only-really-for-the-admin&#34;&gt;UI Components Are Only Really for the Admin&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/bk-ui_comps.html&#34; target=&#34;_blank&#34;&gt;devdocs&lt;/a&gt;
state that UI Components can be used on the storefront as well as within the admin. However,
you will need to provide all your own styling and the Magento core team have not themselves used any
UI Components on the storefront.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;tech_to_understand&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;technologies-you-need-to-understand&#34;&gt;Technologies You Need to Understand&lt;/h1&gt;

&lt;p&gt;Before I dive into any UI Component details there are a number of technologies you &lt;em&gt;must&lt;/em&gt; understand
first.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;xml&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;xml-xhtml-and-xsd&#34;&gt;XML, XHTML and XSD&lt;/h2&gt;

&lt;h3 id=&#34;what-are-these&#34;&gt;What Are These?&lt;/h3&gt;

&lt;p&gt;If you&amp;rsquo;ve already worked with Magento 1 then you&amp;rsquo;ll already be (very) familiar with XML. If not,
then here&amp;rsquo;s a short description from &lt;a href=&#34;https://en.wikipedia.org/wiki/XML&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Extensible Markup Language (XML) is a markup language that defines a set of rules for
encoding documents in a format that is both human-readable and machine-readable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;XML is used for configuration files as well as the XHTML templates used by UI Components.&lt;/p&gt;

&lt;p&gt;So what&amp;rsquo;s XHTML? From &lt;a href=&#34;https://en.wikipedia.org/wiki/XHTML&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Extensible Hypertext Markup Language (XHTML) is part of the family of XML markup languages.
It mirrors or extends versions of the widely used Hypertext Markup Language (HTML)
&amp;hellip;
XHTML documents are well-formed and may therefore be parsed using standard XML parsers, unlike
HTML, which requires a lenient HTML-specific parser.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The TL;DR here is that unlike standard HTML, XHTML is strict. You can&amp;rsquo;t use anything that isn&amp;rsquo;t
defined within it&amp;rsquo;s XSD schema. &lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Ui/view/base/ui_component/templates/form/default.xhtml&#34; target=&#34;_blank&#34;&gt;UI Component templates&lt;/a&gt;
are all defined using XHTML.&lt;/p&gt;

&lt;p&gt;So what&amp;rsquo;s an XSD schema? From &lt;a href=&#34;https://en.wikipedia.org/wiki/XML_Schema_(W3C)&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;XSD (XML Schema Definition), a recommendation of the World Wide Web Consortium (W3C), specifies
how to formally describe the elements in an Extensible Markup Language (XML) document.
It can be used by programmers to verify each piece of item content in a document.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So the &lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Ui/etc/ui_components.xsd&#34; target=&#34;_blank&#34;&gt;XSD file&lt;/a&gt;
defines the valid XML nodes and their structure within a given document. This is used to
validate the XHTML templates and XML configuration files within Magento 2 as well as create a DSL
(&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain-specific_language&#34; target=&#34;_blank&#34;&gt;Domain Specific Language&lt;/a&gt;)
for &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Customer/view/base/ui_component/customer_form.xml&#34; target=&#34;_blank&#34;&gt;defining UI Components&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/XML&#34; target=&#34;_blank&#34;&gt;Wikipedia - XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/XHTML&#34; target=&#34;_blank&#34;&gt;Wikipedia - XHTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/XML_Schema_(W3C)&#34; target=&#34;_blank&#34;&gt;Wikipedia - XSD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;knockoutjs&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;knockoutjs&#34;&gt;KnockoutJS&lt;/h2&gt;

&lt;p&gt;From the KnockoutJS site:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Knockout is a JavaScript library that helps you to create rich, responsive display and editor user
interfaces with a clean underlying data model.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;what-is-knockoutjs&#34;&gt;What is KnockoutJS?&lt;/h3&gt;

&lt;p&gt;KnockoutJS uses an MVVM (&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/hh848246.aspx&#34; target=&#34;_blank&#34;&gt;model&amp;ndash;view&amp;ndash;view-Model&lt;/a&gt;)
architecture to create interfaces that update when an underlying data model is changed.&lt;/p&gt;

&lt;p&gt;Knockout&amp;rsquo;s MVVM looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://edmondscommerce.github.io/images/MVVM.svg&#34; alt=&#34;KnockoutJS MVVM&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The Javascript view-model is bound to the HTML view using Knockouts custom &lt;code&gt;data-bind&lt;/code&gt; attribute.
An example of this can be seen &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/form/collapsible.xhtml#L14&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.
Now, when the Javascript
data model within the view-model changes any HTML elements which are observing this view-model will
be updated. The view-model itself is triggered to update by the same HTML elements. The view-model will
update it&amp;rsquo;s temporary data model and pull data from / trigger updates within the Magento Model as required.&lt;/p&gt;

&lt;h3 id=&#34;what-s-it-used-for&#34;&gt;What&amp;rsquo;s It Used For?&lt;/h3&gt;

&lt;p&gt;KnockoutJS is used to power the UI Component interfaces (and all other Magento 2 interfaces).
It handles templating as well as user interface updates.&lt;/p&gt;

&lt;h3 id=&#34;knockoutjs-customisations-made-for-magento-2&#34;&gt;KnockoutJS Customisations made for Magento 2&lt;/h3&gt;

&lt;h4 id=&#34;custom-templating-engine&#34;&gt;Custom Templating Engine&lt;/h4&gt;

&lt;p&gt;The standard KnockoutJS templating engine expects the HTML templates to be present within the current page
like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;text/html&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;template_id&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The Magento core team have &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/template/engine.js&#34; target=&#34;_blank&#34;&gt;customised the KnockoutJS templating engine&lt;/a&gt;
so that it can now load templates from a remote source.&lt;/p&gt;

&lt;p&gt;This feature makes it easier to reuse templates as they are no longer embedded within &lt;code&gt;.phtml&lt;/code&gt; files.&lt;/p&gt;

&lt;h4 id=&#34;scope&#34;&gt;Scope&lt;/h4&gt;

&lt;p&gt;The Magento core team have also added a &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bindings/scope.js&#34; target=&#34;_blank&#34;&gt;custom &lt;code&gt;scope&lt;/code&gt;&lt;/a&gt;
binding. This binding allows you to easily
bind a view-model to a template (HTML) element on a per template basis. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;data-bind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;scope: &amp;#39;some_view_model.some_view_model&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This knockout view-model (listed under the &lt;code&gt;&amp;quot;components&amp;quot;&lt;/code&gt; key within the JSON configuration) is
instantiated using the &lt;code&gt;Magento_Ui/js/core/app&lt;/code&gt; Javascript component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
{
    &amp;quot;*&amp;quot;: {
        &amp;quot;Magento_Ui/js/core/app&amp;quot;: {
            &amp;quot;components&amp;quot;: {
                &amp;quot;some_view_model&amp;quot;: {
                    &amp;quot;component&amp;quot;: &amp;quot;&amp;lt;Namespace&amp;gt;_&amp;lt;Module&amp;gt;/js/view/someViewModel&amp;quot;
                }
            }
        }
    }
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;further-reading-1&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/knockoutjs_primer_for_magento_developers/&#34; target=&#34;_blank&#34;&gt;Alan Storm - KnockoutJS Primer for Magento Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_knockoutjs_integration/&#34; target=&#34;_blank&#34;&gt;Alan Storm - KnockoutJS Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&#34; target=&#34;_blank&#34;&gt;KnockoutJS - benefits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://knockoutjs.com/documentation/observables.html&#34; target=&#34;_blank&#34;&gt;KnockoutJS - MVVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel&#34; target=&#34;_blank&#34;&gt;Wikipedia - MVVM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;requirejs&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;requirejs&#34;&gt;RequireJS&lt;/h2&gt;

&lt;p&gt;From the RequireJS site:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;RequireJS is a JavaScript file and module loader. It is optimized for in-browser use, but it can be
used in other JavaScript environments, like Rhino and Node. Using a modular script loader like
RequireJS will improve the speed and quality of your code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;what-is-requirejs&#34;&gt;What is RequireJS?&lt;/h3&gt;

&lt;p&gt;RequireJS uses the AMD (&lt;a href=&#34;https://github.com/amdjs/amdjs-api/blob/master/AMD.md&#34; target=&#34;_blank&#34;&gt;Asynchronous Module Definition&lt;/a&gt;)
standard to provide dependency management and modules. RequireJS uses lazy loading to only load a module
when it&amp;rsquo;s required, this can speed up page load times. By implementing the AMD standard it can also load
dependencies asynchronously and provides no guarantees about the order in which a modules dependencies
will be fetched.&lt;/p&gt;

&lt;p&gt;The asynchronous nature of RequireJS can be an issue for non AMD compliant modules. For example, JQuery
plugins that depend on JQuery itself. In these cases RequireJS can be configured to load one (or more)
of a modules dependencies after a subset of the other dependencies have loaded using the
&lt;a href=&#34;http://requirejs.org/docs/api.html#config-shim&#34; target=&#34;_blank&#34;&gt;shim&lt;/a&gt; configuration value.&lt;/p&gt;

&lt;h3 id=&#34;what-s-it-used-for-1&#34;&gt;What&amp;rsquo;s It Used For?&lt;/h3&gt;

&lt;p&gt;All Magento 2 Javascript code (modules) make use of RequireJS to load their dependencies.&lt;/p&gt;

&lt;h3 id=&#34;further-reading-2&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/amdjs/amdjs-api/blob/master/AMD.md&#34; target=&#34;_blank&#34;&gt;AMD specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://requirejs.org/docs/whyamd.html&#34; target=&#34;_blank&#34;&gt;RequireJS - AMD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://requirejs.org/docs/api.html#config-shim&#34; target=&#34;_blank&#34;&gt;RequireJS - Shim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_and_requirejs/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Magento 2 and RequireJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/javascript-dev-guide/javascript/js-resources.html&#34; target=&#34;_blank&#34;&gt;Magento 2 devdocs - RequireJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;pestle&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;pestle&#34;&gt;Pestle&lt;/h2&gt;

&lt;p&gt;If you don&amp;rsquo;t want to spend your time creating module boiler plate code / configuration then you&amp;rsquo;ll want
to check out Pestle. Pestle is a static code generator which provides a number of
templates / helpful functions for Magento 2.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;$ php pestle list
  ...
  magento2:generate:acl
  magento2:generate:command
  magento2:generate:config_helper
  magento2:generate:crud_model
  magento2:generate:di
  magento2:generate:install
  magento2:generate:menu
  magento2:generate:module
  magento2:generate:observer
  magento2:generate:plugin_xml
  magento2:generate:preference
  magento2:generate:psr_log_level
  magento2:generate:registration
  magento2:generate:route
  magento2:generate:theme
  magento2:generate:ui:add-column-actions
  magento2:generate:ui:add-column-sections
  magento2:generate:ui:grid
  magento2:generate:view
  ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;further-reading-3&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/astorm/pestle&#34; target=&#34;_blank&#34;&gt;GitHub Pestle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento2_pestle_code_generation/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Code Generation with Pestle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;much_components&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;javascript-knockoutjs-magento-and-ui-components&#34;&gt;Javascript, KnockoutJS + Magento and UI Components&lt;/h1&gt;

&lt;p&gt;Did you know there are three types of component used within the Magento 2 front end?&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;what_is_js_component&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-is-a-javascript-js-component&#34;&gt;What is a Javascript (JS) Component?&lt;/h2&gt;

&lt;p&gt;A JS Component is a subtype of RequireJS module. It&amp;rsquo;s a RequireJS module that is loaded using a
&lt;code&gt;text/x-magento-init&lt;/code&gt; script tag and that always returns a function.
This function is then called by core Magento code which passes any configuration values you set
within the &lt;code&gt;text/x-magento-init&lt;/code&gt; script tag as arguments. &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/core/app.js&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento_UI/js/core/app&lt;/code&gt;&lt;/a&gt;
that we saw above is a good example of this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
{
    &amp;quot;*&amp;quot;: {
        &amp;quot;Magento_Ui/js/core/app&amp;quot;: { &amp;lt;---- Module to be instantiate
            &amp;quot;components&amp;quot;: {       ^------ Object with all values to be passed as function arguments
                &amp;quot;some_view_model&amp;quot;: {
                    &amp;quot;component&amp;quot;: &amp;quot;&amp;lt;Namespace&amp;gt;_&amp;lt;Module&amp;gt;/js/view/someViewModel&amp;quot;
                }
            }
        }
    }
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;further-reading-4&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_javascript_init_scripts/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Javascript Init Scripts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;what_is_ko_mage_component&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-is-a-knockoutjs-magento-component&#34;&gt;What is a KnockoutJS + Magento component?&lt;/h2&gt;

&lt;p&gt;A plain KnockoutJS component is the grouping of a KnockoutJS template (HTML) and view-model (JS). This
component is then registered with KnockoutJS and provided a unique key. This key can then be used within
your standard HTML markup to instantiate the component.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;data-bind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;component:&amp;#39;some-component-key&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Due to the KnockoutJS customisations listed &lt;a href=&#34;#knockoutjs&#34;&gt;above&lt;/a&gt; this process is not quite the same
in Magento. Within Magento the template is loaded via a URL and the view-model is pulled from the
registered view-models using the scope binding. These are then linked together and registered as
a component.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;what_is_the_diff&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-s-the-difference-between-the-three&#34;&gt;What&amp;rsquo;s the difference between the three?&lt;/h2&gt;

&lt;p&gt;The naming is unfortunate here but to keep this straight in your head it&amp;rsquo;s probably best to remember:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JS Components - provide additional &lt;em&gt;behavioural&lt;/em&gt; functionality.&lt;/li&gt;
&lt;li&gt;KnockoutJS + Magento Components - provide additional &lt;em&gt;user interface&lt;/em&gt; functionality.&lt;/li&gt;
&lt;li&gt;UI Components - provide &lt;em&gt;building blocks&lt;/em&gt; for creating Admin interfaces (and utilise the above two component types).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;further-reading-5&#34;&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_javascript_init_scripts/&#34; target=&#34;_blank&#34;&gt;Alan Storm - JS Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/knockoutjs_primer_for_magento_developers/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Knockout Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/javascript-dev-guide/javascript/js_init.html&#34; target=&#34;_blank&#34;&gt;Magneto 2 devdocs - JS Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;ui_comp_flow&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;ui-component-process-flow&#34;&gt;UI Component Process Flow&lt;/h1&gt;

&lt;p&gt;&lt;a name=&#34;the_players&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-players&#34;&gt;The Players&lt;/h2&gt;

&lt;h3 id=&#34;layout&#34;&gt;Layout&lt;/h3&gt;

&lt;p&gt;This is your standard &lt;code&gt;&amp;lt;handle&amp;gt;.xml&lt;/code&gt; layout file. You add the UI Component to the layout using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;ui–°omponent&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;some_ui_component_instance_name&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;module-agnostic-configuration&#34;&gt;Module Agnostic Configuration&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;definition.xml&lt;/code&gt;&lt;/a&gt;
file contains all default configuration for all the UI Components available in Magento 2. It
also defines the PHP classes used to generate any JSON configuration which eventually gets passed
to KnockoutJS. Any configuration set within the &lt;code&gt;definition.xml&lt;/code&gt; are global and effect all modules.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;...
&lt;span class=&#34;nt&#34;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Magento\Ui\Component\Form&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;argument&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;js_config&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;component&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Magento_Ui/js/form/form&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;template&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;templates/form/default&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The XML above basically says; instantiate the &lt;code&gt;Magento\Ui\Component\Form&lt;/code&gt; class by passing
the array of arguments contained within &lt;code&gt;&amp;lt;argument&amp;gt;&lt;/code&gt; to it&amp;rsquo;s constructor.&lt;/p&gt;

&lt;p&gt;The first argument:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;...
&lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;component&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Magento_Ui/js/form/form&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Says use &lt;code&gt;magento/module-ui/view/base/web/js/form/form.js&lt;/code&gt; as the KnockoutJS view-model for this
component.&lt;/p&gt;

&lt;p&gt;The second argument:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;template&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;templates/form/default&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Means use &lt;code&gt;magento/module-ui/view/base/templates/form/default.phtml&lt;/code&gt; as the default template for
this UI Component.&lt;/p&gt;

&lt;h3 id=&#34;top-level-configuration&#34;&gt;Top Level Configuration&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Customer/view/base/ui_component/customer_form.xml#L8&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;&amp;lt;component_name&amp;gt;.xml&lt;/code&gt;&lt;/a&gt;
file contains any configuration you wish to set on a UI Component at the module level.&lt;/p&gt;

&lt;p&gt;This will usually include the arguments to be passed to the UI Components PHP constructor
&lt;code&gt;&amp;lt;arguments&amp;gt;&lt;/code&gt;, the data source to be used by the UI Component &lt;code&gt;&amp;lt;dataSource&amp;gt;&lt;/code&gt; and any
Secondary Components to be included.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:noNamespaceSchemaLocation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;argument&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        ...
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dataSource&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;customer_form_data_source&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Covered in more detail below --&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dataSource&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;fieldset&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;customer&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Secondary Component --&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;fieldset&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;address&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        ...
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Any nodes added within the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; node here which are not either
&lt;code&gt;&amp;lt;argument&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;dataSource&amp;gt;&lt;/code&gt; are considered to be a new Secondary Component instance.
These can be recursively nested so a Secondary Component can contain another etc.&lt;/p&gt;

&lt;p&gt;Any arguments set here will override the default values set within &lt;code&gt;definition.xml&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;abstractcomponent&#34;&gt;AbstractComponent&lt;/h3&gt;

&lt;p&gt;Each UI Component is backed by a
&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/Form.php&#34; target=&#34;_blank&#34;&gt;PHP class&lt;/a&gt;
extending from
&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/AbstractComponent.php&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento\Ui\Component\AbstractComponent&lt;/code&gt;&lt;/a&gt;.
This class processes both the top level and module agnostic &lt;code&gt;&amp;lt;argument&amp;gt;&lt;/code&gt; values and generates the
JSON configuration later used to instantiate a KnockoutJS view-model and assign a template.&lt;/p&gt;

&lt;h3 id=&#34;view-model-constructor&#34;&gt;View-Model Constructor&lt;/h3&gt;

&lt;p&gt;In the module agnostic configuration above we configured a view-model. This view-model is a RequireJS
module that extends from &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/core/element/element.js&#34; target=&#34;_blank&#34;&gt;uiElement&lt;/a&gt;.
This extended uiElement is then returned from the module to be used as a view-model constructor.&lt;/p&gt;

&lt;p&gt;Default values can be set within this constructor; top level and module agnostic configuration values
take precedence over these.&lt;/p&gt;

&lt;p&gt;If you require KnockoutJS you can also start adding state for your templates to observe and functions
to update / manage that state.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;uiElement&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;ko&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ko&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;extend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;quot;defaults&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;Namespace&amp;gt;_&amp;lt;ModuleName&amp;gt;/path/to/template&amp;#39;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;quot;some_value&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ko&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;observable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;template&#34;&gt;Template&lt;/h3&gt;

&lt;p&gt;UI Component templates like &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/form/collapsible.xhtml&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;collapsible.xhtml&lt;/code&gt;&lt;/a&gt;
are set within either the view-model constructor or the module agnostic or top level configurations.&lt;/p&gt;

&lt;p&gt;For the template to be rendered correctly it also needs to include the following comment:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;!-- ko template: getTemplate() --&amp;gt;&amp;lt;!-- /ko --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This calls the getTemplate() function on our view-model. This is inherited from
&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/core/element/element.js#L262&#34; target=&#34;_blank&#34;&gt;uiElement&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;uiregistry&#34;&gt;uiRegistry&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/registry/registry.js&#34; target=&#34;_blank&#34;&gt;uiRegistry&lt;/a&gt;
is a Magento 2 RequireJS module that&amp;rsquo;s used (as global state) to store all the currently
instantiated view-models. These models are stored as key value pairs. The key here maps to a
KnockoutJS scope binding value.&lt;/p&gt;

&lt;h3 id=&#34;engine-js-magento-ui-js-lib-knockout-template-engine&#34;&gt;engine.js (Magento_UI/js/lib/knockout/template/engine)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/template/engine.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
implements Magento 2&amp;rsquo;s custom KnockoutJS templating engine.&lt;/p&gt;

&lt;h3 id=&#34;bootstrap-js-magento-ui-js-lib-knockout-bootstrap&#34;&gt;bootstrap.js (Magento_UI/js/lib/knockout/bootstrap)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bootstrap.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
requires Magento 2&amp;rsquo;s custom templating engine and sets it as KnockoutJS&amp;rsquo;s
current templating engine.&lt;/p&gt;

&lt;h3 id=&#34;layout-js-magento-ui-js-core-renderer-layout&#34;&gt;layout.js (Magento_UI/js/core/renderer/layout)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/core/renderer/layout.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
is required by the the app module (see below) and handles the
instantiation of view-model objects. It adds these view-models to the
uiRegistry.&lt;/p&gt;

&lt;h3 id=&#34;app-js-magento-ui-js-core-app&#34;&gt;app.js (Magento_UI/js/core/app)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/core/app.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
requires the bootstrap module as well as the layout module. It calls the
function returned by the layout module starting the instantiation
of view-models.&lt;/p&gt;

&lt;h3 id=&#34;scope-js-magento-ui-js-lib-knockout-bindings-scope&#34;&gt;scope.js (Magento_UI/js/lib/knockout/bindings/scope)&lt;/h3&gt;

&lt;p&gt;This final &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bindings/scope.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
implements Magento 2&amp;rsquo;s custom scope binding. This module handles the linking
of view-models and views using it&amp;rsquo;s &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bindings/scope.js#L21&#34; target=&#34;_blank&#34;&gt;applyComponents()&lt;/a&gt;
function.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;process_flow_chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;process-flow-chart&#34;&gt;Process Flow Chart&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;
&lt;img src=&#34;https://edmondscommerce.github.io/images/UI Component Flow.svg&#34; alt=&#34;UI Component Process Flow&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;video&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;video&#34;&gt;Video&lt;/h2&gt;

&lt;p&gt;Here&amp;rsquo;s a video of me stepping through the above flow in PHPStorm and Chrome.&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/oN67ZdLat7Q&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;I&amp;rsquo;ve extracted the PHPStorm breakpoints and added them to &lt;a href=&#34;https://github.com/edmondscommerce/UI_Components_Breakpoints&#34; target=&#34;_blank&#34;&gt;this&lt;/a&gt;
GitHub repo (just in case you want to have a go yourself).&lt;/p&gt;

&lt;h3 id=&#34;further-reading-6&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;See all Alan Storm links above&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/concepts/ui_comp_config_flow_concept.html&#34; target=&#34;_blank&#34;&gt;Magento 2 devdocs - UI Component Configuration Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/bk-ui_comps.html&#34; target=&#34;_blank&#34;&gt;Magento 2 devdocs - Overview of UI Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;mage_core_comps&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;magento-core-ui-component-examples&#34;&gt;Magento Core UI Component Examples&lt;/h1&gt;

&lt;p&gt;Here are some links to the Magento 2 GitHub repo for you to investigate further.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;form&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;form&#34;&gt;Form&lt;/h2&gt;

&lt;p&gt;This is a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; used in the &lt;a href=&#34;https://github.com/magento/magento2/tree/develop/app/code/Magento/Theme&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento_Theme&lt;/code&gt;&lt;/a&gt;
module.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Theme/view/adminhtml/layout/theme_design_config_edit.xml#L18&#34; target=&#34;_blank&#34;&gt;Layout XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml&#34; target=&#34;_blank&#34;&gt;Module Agnostic Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Theme/view/adminhtml/ui_component/design_config_form.xml&#34; target=&#34;_blank&#34;&gt;Top Level Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/Form.php&#34; target=&#34;_blank&#34;&gt;AbstractComponent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/form/form.js&#34; target=&#34;_blank&#34;&gt;View-Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/form/collapsible.xhtml&#34; target=&#34;_blank&#34;&gt;Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;listing&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;listing&#34;&gt;Listing&lt;/h2&gt;

&lt;p&gt;This is a &lt;code&gt;&amp;lt;listing&amp;gt;&lt;/code&gt; used in the &lt;a href=&#34;https://github.com/magento/magento2/tree/develop/app/code/Magento/Customer&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento_Customer&lt;/code&gt;&lt;/a&gt;
module.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Customer/view/adminhtml/layout/customer_index_index.xml#L12&#34; target=&#34;_blank&#34;&gt;Layout XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml&#34; target=&#34;_blank&#34;&gt;Module Agnostic Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Customer/view/adminhtml/ui_component/customer_listing.xml&#34; target=&#34;_blank&#34;&gt;Top Level Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/Listing.php&#34; target=&#34;_blank&#34;&gt;AbstractComponent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/core/collection.js&#34; target=&#34;_blank&#34;&gt;View-Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/listing/default.xhtml&#34; target=&#34;_blank&#34;&gt;Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>PHP Base64 Decode if Encoded Otherwise Leave Intact</title>
      <link>https://edmondscommerce.github.io/php/php-base64-decode-if-encoded-otherwise-leave-intact.html</link>
      <pubDate>Thu, 25 Jul 2013 15:05:08 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/php-base64-decode-if-encoded-otherwise-leave-intact.html</guid>
      <description>&lt;p&gt;I had a scenario where an API I was working with would sometimes base64 encode data (instead of using CDATA which is the more usual approach).&lt;/p&gt;

&lt;p&gt;However to really make things interesting, they didn&amp;rsquo;t always do this so you couldn&amp;rsquo;t just go and decode everything.&lt;/p&gt;

&lt;p&gt;Here is the solution I came up with:&lt;/p&gt;

&lt;p&gt;First of all, take the raw response and run preg_replace_callback on it to grab all of the XML contents:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;preg_replace_callback(&amp;#39;%&amp;gt;([^&amp;lt;]+?)&amp;lt;%&amp;#39;, array($this, &amp;#39;_decode&amp;#39;), $response)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then the callback function is a method on the same object hence the use of array($this, &amp;lsquo;_decode&amp;rsquo;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;    /**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * Decode from bas64 if it actually is base64 encoded in the first place&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * If not return the raw string&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param $matches&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @return string&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    protected function _decode($matches)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $raw=$matches[1];&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $decoded = base64_decode($raw, true);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $return=$decoded;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if(false === $decoded){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $return=$raw;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }elseif(base64_encode($decoded) != $raw){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $return=$raw;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        return &amp;#39;&amp;gt;&amp;lt;![CDATA[&amp;#39; . $return . &amp;#39;]]&amp;gt;&amp;lt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What this method does is first of all try calling decode with the optional strict flag. This makes the function return false if it thinks it isn&amp;rsquo;t base64 encoded. It would be great if this was enough but unfortunately you need to do more.&lt;/p&gt;

&lt;p&gt;If it doesn&amp;rsquo;t return false at that stage, we do the real test which is to try encoding it back to base64 and make sure that the rencoded string matches the raw (before original decoding) string. If it was base64 encoded in the first place then this should match.&lt;/p&gt;

&lt;p&gt;By doing this we can handle any kind of mixture of base64 encoded and plain text xml string and get it ready for simpleXMl.&lt;/p&gt;

&lt;p&gt;Notice I am also wrapping the data in CDATA tags to help avoid XML issues when creating the simpleXml object.&lt;/p&gt;

&lt;p&gt;However - one last trick. The reason they were using base64 encoding is because there was some dodgy non XML friendly characters in there. The solution here (if you don&amp;rsquo;t mind compromising the data a little which I didn&amp;rsquo;t for my purposes) then you can do the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;//have to utf8 encode it to fix the fact its not properly encoded at their end&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$xml = simplexml_load_string(utf8_encode($response));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that&amp;rsquo;s it, another crazy API defeated and bent to my will!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP API Development Logging and Debugging</title>
      <link>https://edmondscommerce.github.io/php/4145.html</link>
      <pubDate>Thu, 14 Mar 2013 14:53:48 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/4145.html</guid>
      <description>&lt;p&gt;If you are ever working with API integrations, either in or out bound, then it might be useful to set up a simple dumb logging system to assist you with developing and debugging things.&lt;/p&gt;

&lt;p&gt;Here is a really simple snippet to help you along with that.&lt;/p&gt;

&lt;p&gt;It literally takes exactly what it has received and logs it with no messing about. Brilliant!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;raw_input&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;file_get_contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;php://input&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_POST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;file_put_contents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;inboundXML.log&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;var_export&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tip: Parse XML Values in bash e.g. Magento local.xml</title>
      <link>https://edmondscommerce.github.io/bash/tip-parse-xml-values-in-bash-e-g-magento-local-xml.html</link>
      <pubDate>Thu, 23 Aug 2012 11:37:58 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash/tip-parse-xml-values-in-bash-e-g-magento-local-xml.html</guid>
      <description>&lt;p&gt;Not the most elegant way to do this, and probably could do with some extra tweaks but it works for our purposes, so presented here in case it fits yours :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# xml_value path/to/file node_key&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; xml_value&lt;span class=&#34;o&#34;&gt;(){&lt;/span&gt;
    grep &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;.*&amp;lt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;s/&amp;lt;\!\[CDATA\[//&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;s/\]\]&amp;gt;//&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;s/^.*&amp;lt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&amp;lt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -f2 -d&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -f1 -d&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;lt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It also strips out the CDATA tags, which we needed to pull the database details from Magento&amp;rsquo;s local.xml&lt;/p&gt;

&lt;p&gt;To use this to get, for example, the database host, you would use the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;DB_HOST&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;xml_value app/etc/local.xml host&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To use this&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS &#43; Sun Java &#43; Amazon AMTU 2</title>
      <link>https://edmondscommerce.github.io/amazon/centos-sun-java-amazon-amtu-2.html</link>
      <pubDate>Tue, 14 Aug 2012 17:33:31 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/amazon/centos-sun-java-amazon-amtu-2.html</guid>
      <description>&lt;p&gt;In a follow up to our popular blog post describing the process of getting AMTU 1 set up on a Centos server, this post describes how to get the latest version 2 of AMTU running.&lt;/p&gt;

&lt;p&gt;Things have moved on and thankfully it is a lot easier than it was.&lt;/p&gt;

&lt;p&gt;Firstly get Sun Java installed. You will need to get the URL for downloading the RPM from here:
&lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/downloads/jre7-downloads-1637588.html&#34; target=&#34;_blank&#34;&gt;http://www.oracle.com/technetwork/java/javase/downloads/jre7-downloads-1637588.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Accept the agreement, download the correct RPM version and then pause it. Copy the download URL and paste it into this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /tmp
wget &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;paste-url&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;-here&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
rpm - jre &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;hit tab to complete&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now check the correct java version is being used:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;java -version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should get something looking like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
[root@94 tmp]# java -version
java version &amp;amp;quot;1.7.0_05&amp;amp;quot;
Java(TM) SE Runtime Environment (build 1.7.0_05-b06)
Java HotSpot(TM) 64-Bit Server VM (build 23.1-b03, mixed mode)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can install AMTU&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;wget https://d28hcfptedr5ia.cloudfront.net/install/AMTU_unix.sh
chmod +x AMTU_unix.sh
./AMTU_unix.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Keep hitting enter to get to the bottom of the terms and then agree, agree to all the other options. That is AMTU installed.&lt;/p&gt;

&lt;p&gt;The final step is to configure this using the CLI configure utitlity.&lt;/p&gt;

&lt;p&gt;You need to create an xml file for the AMTU configuration. You can see a sample file in /opt/amtu/xml/sample.xml.&lt;/p&gt;

&lt;p&gt;Lets copy that file and then edit it accordingly.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /opt/amtu/xml
cp sample.xml configuration.xml
vim configuration.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You do need to be signed up for MWS to get some of the keys etc that are required. If not already, go to this page and hit the sign up button.
&lt;a href=&#34;https://developer.amazonservices.co.uk/index.html&#34; target=&#34;_blank&#34;&gt;https://developer.amazonservices.co.uk/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have updated the XML configuration you run this command to apply it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;/opt/amtu/Utilities/configure SETUP /opt/amtu/xml/configuration.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you get some error messages at this point, edit the configuration and try again. Once you have the configuration set you can start the daemon.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;/opt/AMTU/Utilities/amtu_daemon start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Extending Mage Core Encryption Model to handle Legacy Passwords</title>
      <link>https://edmondscommerce.github.io/magento/extending-mage-core-encryption-model-to-handle-legacy-passwords.html</link>
      <pubDate>Thu, 26 Apr 2012 12:35:29 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/extending-mage-core-encryption-model-to-handle-legacy-passwords.html</guid>
      <description>&lt;p&gt;If you are migrating from an old ecommerce package into Magento, you may well want to extend Magento&amp;rsquo;s password hashing system so that it can understand the passwords that are hashed by the previous system and customers can log in using their old passwords without any hassle.&lt;/p&gt;

&lt;p&gt;You would start off by overriding the Mage_Core_Model_Encryption class like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;class EdmondsCommerce_LegacyPassword_Model_Encryption extends Mage_Core_Model_Encryption {&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    /**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * Validate hash against hashing method (with or without salt)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * Extended to support the legacy password hashing of the previous system&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param string $password&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param string $hash&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @return bool&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @throws Exception&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public function validateHash($password, $hash) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (/*password matches legacy pattern (as stored hash in DB)*/) {            &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            // create a hash of the plain text password and compare to the stored hash&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            return $hashed_pass == $hashval;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        //default magento hashing from here&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        return parent::validateHash($password, $hash);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, you will find that the standard model override does not work and you may start vigorous hair pulling at this point.&lt;/p&gt;

&lt;p&gt;The answer though is that your override XML is actually fine, but it isn&amp;rsquo;t being used. This is because of the getEncryptor model in Mage_Core_Helper_Data creates the model using &amp;lsquo;new&amp;rsquo; rather than getModel.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @return Mage_Core_Model_Encryption&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public function getEncryptor()&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if ($this-&amp;gt;_encryptor === null) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $encryptionModel = (string)Mage::getConfig()-&amp;gt;getNode(self::XML_PATH_ENCRYPTION_MODEL);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if ($encryptionModel) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                $this-&amp;gt;_encryptor = new $encryptionModel;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            } else {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                $this-&amp;gt;_encryptor = Mage::getModel(&amp;#39;core/encryption&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;            $this-&amp;gt;_encryptor-&amp;gt;setHelper($this);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        return $this-&amp;gt;_encryptor;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The class name to use for the encryptor is stored in the config.xml for Mage_Core.&lt;/p&gt;

&lt;p&gt;The solution here is to replicate this XML in your config.xml and also make your legacy module depend on Mage_Core so that it get loaded afterwards and can override the XML.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;config&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;modules&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;EdmondsCommerce_LegacyPassword&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.1.1&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;depends&amp;gt;&lt;/span&gt;Mage_Core&lt;span class=&#34;nt&#34;&gt;&amp;lt;/depends&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/EdmondsCommerce_LegacyPassword&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/modules&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;global&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;models&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;core&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;rewrite&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;encryption&amp;gt;&lt;/span&gt;EdmondsCommerce_LegacyPassword_Model_Encryption&lt;span class=&#34;nt&#34;&gt;&amp;lt;/encryption&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/rewrite&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/core&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/models&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;helpers&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;core&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;encryption_model&amp;gt;&lt;/span&gt;EdmondsCommerce_LegacyPassword_Model_Encryption&lt;span class=&#34;nt&#34;&gt;&amp;lt;/encryption_model&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/core&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/helpers&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/global&amp;gt;&lt;/span&gt;    
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Easy once you understand. Another gotcha you have to look out for though!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Layout ignore=&#34;1&#34;</title>
      <link>https://edmondscommerce.github.io/magento/magento-layout-ignore1.html</link>
      <pubDate>Wed, 29 Feb 2012 17:17:15 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-layout-ignore1.html</guid>
      <description>&lt;p&gt;If you are looking at your Layout XML when trying to debug missing blocks for example, you may see the attribute ignore=&amp;ldquo;1&amp;rdquo; being assigned to chunks of XML.&lt;/p&gt;

&lt;p&gt;These are set when some module or other is using the remove syntax to remove a block.&lt;/p&gt;

&lt;p&gt;For example I have just had some issues with Fontis Recaptcha and TBT Sweetooth extensions not playing nice together.&lt;/p&gt;

&lt;p&gt;The reason is that the Fontis extension is removing the entire customer_form_register handle and replacing it with a custom one however the Sweettooth module is still referring to the core Magento handle which then means its layout updates are not having any effect.&lt;/p&gt;

&lt;p&gt;The way to see this is find the layout sections with ignore=&amp;ldquo;1&amp;rdquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;block&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;core/text_list&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;left&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;as=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;left&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;ignore=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and search your files for a corresponding&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;remove&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;left&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The name attribute is the one you need to look for the correlation on.&lt;/p&gt;

&lt;p&gt;For the sweettooth issue, the solutions was to simply add in the sweet tooth XML to the Fontis XML like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;lt;customer_account_create&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;remove&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;customer_form_register&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class=&#34;nt&#34;&gt;&amp;lt;reference&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;block&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;customer/form_register&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;recaptcha_form_register&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;template=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;fontis/recaptcha/register.phtml&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;block&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;core/template&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;recaptcha.box&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;as=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;recaptcha_box&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;template=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;fontis/recaptcha/recaptcha.phtml&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;block&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;rewardsref/field_register&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;rewards_referral&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;template=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;rewardsref/customer/register/fieldset.phtml&amp;quot;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/block&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/customer_account_create&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Inspiration from this &lt;a href=&#34;http://stackoverflow.com/questions/1087733/magento-my-account-layout-xml-problem&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Custom Product Type as Configurable Product</title>
      <link>https://edmondscommerce.github.io/magento/magento-custom-product-type-as-configurable-product.html</link>
      <pubDate>Fri, 20 Jan 2012 15:36:02 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-custom-product-type-as-configurable-product.html</guid>
      <description>&lt;p&gt;If you have created a new product type and need to enable it to be included with configurable products you need to let Magento know that it should allow your product type to work with configurable products. To do this open your config xml and add the following xml.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;config&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;global&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;catalog&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;product&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;configurable&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;translate=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;label&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;module=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;lt;allow_product_types&amp;gt;&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;lt;custom_type_name/&amp;gt;&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/allow_product_types&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/configurable&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/product&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/catalog&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/global&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This tells Magento to include your product type for use with configurable products.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Crawl an xml sitemap quality check 301 and 404</title>
      <link>https://edmondscommerce.github.io/php/crawl-an-xml-sitemap-quality-check-301-and-404.html</link>
      <pubDate>Tue, 03 Jan 2012 17:54:30 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/crawl-an-xml-sitemap-quality-check-301-and-404.html</guid>
      <description>&lt;p&gt;On occasion, google and other tools will tell you there&amp;rsquo;s errors with your sitemap.xml file and not give you the information of what exactly is wrong, so we wrote this little tool to crawl the sitemap and check for 301 redirections and 404 errors.&lt;/p&gt;

&lt;p&gt;It is a noddy file and should have much more error handling etc but here&amp;rsquo;s the basic flow :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$screenwidth&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;trimstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$maxlength&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$middle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;...&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$screenwidth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$maxlength&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nv&#34;&gt;$maxlength&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$screenwidth&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$maxlength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nv&#34;&gt;$partlength&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$maxlength&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$middle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;nv&#34;&gt;$leftpart&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$partlength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;nv&#34;&gt;$rightpart&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;substr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$partlength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$leftpart&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$middle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$rightpart&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;// First we load the sitemap xml&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$xml&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;simplexml_load_file&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$counter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$threadcount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$multihandle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;curl_multi_init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$fourohfours&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$threeohones&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$twohundreds&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$xml&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;urlset&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;die&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Doesn&amp;#39;t look like a valid sitemap!&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$total_urls&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$xml&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;children&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;// Then we iterate over it&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$xml&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;children&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$child&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$child&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$child&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;children&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$subchild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$subchild&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;loc&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
				&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Fetching : &amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;trimstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$subchild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$screenwidth&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
				&lt;span class=&#34;nv&#34;&gt;$counter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
				&lt;span class=&#34;nx&#34;&gt;addurltostack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$subchild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
				&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$counter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$threadcount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$counter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$total_urls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
					&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
						&lt;span class=&#34;nb&#34;&gt;curl_multi_exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$multihandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$running&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
					&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$running&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
					&lt;span class=&#34;nx&#34;&gt;processresults&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
					&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$counter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$total_urls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; urls checked - &amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$twohundreds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; 200s; &amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$threeohones&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; 301s; &amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$fourohfours&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; 404s.&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
				&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
			&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$fourohfours&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;The following urls were 404 returns :- &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$fourohfoururls&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$threeohones&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;The following urls were 301 returns :- &lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$threeohoneurls&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;addurltostack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$curls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$multihandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;curl_init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;nv&#34;&gt;$curls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;c1&#34;&gt;// Set the url path we want to call&lt;/span&gt;
	&lt;span class=&#34;nb&#34;&gt;curl_setopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CURLOPT_URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;c1&#34;&gt;// Make it so the data coming back is put into a string&lt;/span&gt;
	&lt;span class=&#34;nb&#34;&gt;curl_setopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CURLOPT_RETURNTRANSFER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; 
	&lt;span class=&#34;nb&#34;&gt;curl_setopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CURLOPT_HEADER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; 
	&lt;span class=&#34;nb&#34;&gt;curl_setopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CURLOPT_NOBODY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// remove body &lt;/span&gt;
	&lt;span class=&#34;nb&#34;&gt;curl_multi_add_handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$multihandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;processresults&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$curls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$multihandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$fourohfours&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$fourohfoururls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$threeohones&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$threeohoneurls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$twohundreds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$multihandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$curls&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nv&#34;&gt;$httpCode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;curl_getinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CURLINFO_HTTP_CODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; 
		&lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;curl_getinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CURLINFO_EFFECTIVE_URL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; 
		&lt;span class=&#34;c1&#34;&gt;// Free up the resources $ch is using&lt;/span&gt;
		&lt;span class=&#34;nb&#34;&gt;curl_multi_remove_handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$multihandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;nb&#34;&gt;curl_close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$httpCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;400&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; 
				&lt;span class=&#34;nv&#34;&gt;$fourohfours&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
				&lt;span class=&#34;nv&#34;&gt;$fourohfoururls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;301&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; 
				&lt;span class=&#34;nv&#34;&gt;$threeohones&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
				&lt;span class=&#34;nv&#34;&gt;$threeohoneurls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$twohundreds&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nb&#34;&gt;curl_multi_close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$multihandle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;nv&#34;&gt;$multihandle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;curl_multi_init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;nv&#34;&gt;$curls&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above takes about &amp;frac34; hour for an approximately 3000 link sitemap.  This script utilises curl_multi so it runs 5 requests at a time to the server.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP SimpleXML CData not loading &#43; solution</title>
      <link>https://edmondscommerce.github.io/php/php-simplexml-cdata-not-loading-solution.html</link>
      <pubDate>Mon, 12 Dec 2011 17:29:28 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/php-simplexml-cdata-not-loading-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
The php simpleXML object is my preferred way of working with XML, but it has some unusual quirks that can drive you up the wall. One of these is that, by default, it will not read CDATA within an XML file, and will just leave the node blank.&lt;/p&gt;

&lt;p&gt;If you need to access this data then create your xml object like this&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$xmlFile = &amp;ldquo;/path/to/xml/file.xml&amp;rdquo;;
if (file_exists($xmlFile)) {
$xml = simplexml_load_file($xmlFile,&amp;lsquo;SimpleXMLElement&amp;rsquo;, LIBXML_NOCDATA);
echo $xml-&amp;gt;cDataNode;
}
&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Generic XML to CSV Converter</title>
      <link>https://edmondscommerce.github.io/php/generic-xml-to-csv-converter.html</link>
      <pubDate>Wed, 12 Oct 2011 11:02:59 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/generic-xml-to-csv-converter.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Some times you might have a legacy system that is built around csv or similar and you need to import an XML data source into this system.&lt;/p&gt;

&lt;p&gt;Of course one possibility is to build full XML handling capabilities into the system. Perhaps a more sane solution is to simply convert the XML to CSV so that the legacy system does not have to be touched.&lt;/p&gt;

&lt;p&gt;This little snippet will generally take an XML file and create a CSV file that should be useable. Of course its impossible to guarantee this for every XML file as its such a widely varied format, however in general this should work.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$xml = simplexml_load_file(&amp;#39;feed.xml&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$outstream = fopen(&amp;#39;feed.csv&amp;#39;,&amp;#39;w&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$header=false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($xml as $k=&amp;gt;$details){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if(!$header){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        fputcsv($outstream,array_keys(get_object_vars($details)));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $header=true;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    fputcsv($outstream,get_object_vars($details));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;fclose($outstream);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Add Stylesheet to Head for Specific Category</title>
      <link>https://edmondscommerce.github.io/magento/magento-add-stylesheet-to-head-for-specific-category.html</link>
      <pubDate>Wed, 05 Oct 2011 12:12:05 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-add-stylesheet-to-head-for-specific-category.html</guid>
      <description>&lt;p&gt;If you want to include a custom stylesheet for a particular category you can do this very cleanly by specifying custom layout xml in the category admin.&lt;/p&gt;

&lt;p&gt;Simply find the category you want to apply this to and then hit the ```display settings
 tab&lt;/p&gt;

&lt;p&gt;Then in the custom layout update  box, paste something like this:&lt;/p&gt;

&lt;p&gt;[xml]
&lt;reference name=&#34;head&#34;&gt;
&lt;action method=&#34;addCss&#34;&gt;&lt;stylesheet&gt;css/extra_styles.css&lt;/stylesheet&gt;&lt;/action&gt;
&lt;/reference&gt;&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;clear your cache and this stylesheet should be included in the head section for this category.&lt;/p&gt;

&lt;p&gt;You could of course do this in the layout XML files, however if you need somethign that the admin of the site can easily apply to any other new categories that needs the same treatment then this is a great solution.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento &#34;Products per Page on Grid Allowed Values&#34; Configuration Not Working &#43; Solution</title>
      <link>https://edmondscommerce.github.io/magento/magento-products-per-page-on-grid-allowed-values-configuration-not-working-solution.html</link>
      <pubDate>Thu, 01 Sep 2011 13:53:31 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-products-per-page-on-grid-allowed-values-configuration-not-working-solution.html</guid>
      <description>&lt;p&gt;If you are getting a &lt;i&gt;little bit frustrated&lt;/i&gt; trying to figure out why the admin configuration for the number of products to display on a page and the options in the products per page drop down are not working then this is quite possibly your soluiton.&lt;/p&gt;

&lt;p&gt;The template file in question is in catalog/product/list/toolbar.phtml&lt;/p&gt;

&lt;p&gt;You will see it refererences the block Mage_Catalog_Block_Product_List_Toolbar&lt;/p&gt;

&lt;p&gt;So far so good, it all looks like it should be working but it just isn&amp;rsquo;t.&lt;/p&gt;

&lt;p&gt;The issue can be that in your theme&amp;rsquo;s layout XML file, some values are being set for this with some XML that looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;setDefaultListPerPage&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;limit&amp;gt;&lt;/span&gt;10&lt;span class=&#34;nt&#34;&gt;&amp;lt;/limit&amp;gt;&amp;lt;/action&amp;gt;&lt;/span&gt; 
&lt;span class=&#34;nt&#34;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;setDefaultGridPerPage&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;limit&amp;gt;&lt;/span&gt;8&lt;span class=&#34;nt&#34;&gt;&amp;lt;/limit&amp;gt;&amp;lt;/action&amp;gt;&lt;/span&gt; 
&lt;span class=&#34;nt&#34;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;addPagerLimit&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;mode&amp;gt;&lt;/span&gt;list&lt;span class=&#34;nt&#34;&gt;&amp;lt;/mode&amp;gt;&amp;lt;limit&amp;gt;&lt;/span&gt;10&lt;span class=&#34;nt&#34;&gt;&amp;lt;/limit&amp;gt;&amp;lt;/action&amp;gt;&lt;/span&gt; 
&lt;span class=&#34;nt&#34;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;addPagerLimit&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;mode&amp;gt;&lt;/span&gt;list&lt;span class=&#34;nt&#34;&gt;&amp;lt;/mode&amp;gt;&amp;lt;limit&amp;gt;&lt;/span&gt;20&lt;span class=&#34;nt&#34;&gt;&amp;lt;/limit&amp;gt;&amp;lt;/action&amp;gt;&lt;/span&gt; 
&lt;span class=&#34;nt&#34;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;addPagerLimit&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&amp;lt;mode&amp;gt;&lt;/span&gt;list&lt;span class=&#34;nt&#34;&gt;&amp;lt;/mode&amp;gt;&amp;lt;limit&amp;gt;&lt;/span&gt;30&lt;span class=&#34;nt&#34;&gt;&amp;lt;/limit&amp;gt;&amp;lt;/action&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If that XML is there, then these actions are being called against your block object with these parameters, effectively overwriting your admin values.&lt;/p&gt;

&lt;p&gt;To get the admin values to be respected, you need to comment out or totally remove this XML from your layout, clear your cache and you are in business.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Accessing Raw XML Posted to a Script</title>
      <link>https://edmondscommerce.github.io/php/accessing-raw-xml-posted-to-a-script.html</link>
      <pubDate>Mon, 21 Dec 2009 15:20:56 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/accessing-raw-xml-posted-to-a-script.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you have a script that is receiving posted XML for whatever reason and are trying to access this XML without any filtering, escaping etc then this is the solution you are looking for.&lt;/p&gt;

&lt;p&gt;Instead of trying to access via $_POST etc, you can simply call the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$xml = file_get_contents(&amp;#39;php://input&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will then allow you to load it into Simple XML for example for further processing&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$sx = simplexml_load_string($xml);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;if($sx){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;   ....&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Overiding XML Case Inconsistency Continues</title>
      <link>https://edmondscommerce.github.io/magento/magento-overiding-xml-case-inconsistency-continues.html</link>
      <pubDate>Tue, 23 Jun 2009 14:57:16 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-overiding-xml-case-inconsistency-continues.html</guid>
      <description>&lt;p&gt;Had another tearing hair out moment when trying to figure out why my helper override was working fine,  but my block override wasn&amp;rsquo;t working. Here is the result:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;helper working, block not working:&lt;/b&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;config&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;modules&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;EC_CatalogSearch&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.1.0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/EC_CatalogSearch&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/modules&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;global&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;helpers&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;catalogSearch&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;rewrite&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;data&amp;gt;&lt;/span&gt;EC_CatalogSearch_Helper_Data&lt;span class=&#34;nt&#34;&gt;&amp;lt;/data&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/rewrite&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/catalogSearch&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/helpers&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;blocks&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;catalogSearch&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;rewrite&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;result&amp;gt;&lt;/span&gt;EC_CatalogSearch_Block_Result&lt;span class=&#34;nt&#34;&gt;&amp;lt;/result&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/rewrite&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/catalogSearch&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/blocks&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/global&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then after a load of messing about, this one does work:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;helper and block both working&lt;/b&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;config&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;modules&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;EC_CatalogSearch&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.1.0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/EC_CatalogSearch&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/modules&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;global&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;helpers&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;catalogSearch&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;rewrite&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;data&amp;gt;&lt;/span&gt;EC_CatalogSearch_Helper_Data&lt;span class=&#34;nt&#34;&gt;&amp;lt;/data&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/rewrite&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/catalogSearch&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/helpers&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;blocks&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;catalogsearch&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;rewrite&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;result&amp;gt;&lt;/span&gt;EC_CatalogSearch_Block_Result&lt;span class=&#34;nt&#34;&gt;&amp;lt;/result&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/rewrite&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/catalogsearch&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/blocks&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/global&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;yeah exactly :S&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>