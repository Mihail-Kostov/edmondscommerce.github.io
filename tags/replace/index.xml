<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Replace on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/replace/</link>
    <description>Recent content in Replace on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Dec 2016 18:13:32 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/replace/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Replacing Failed Drive in Zfs Zpool (on Proxmox)</title>
      <link>https://edmondscommerce.github.io/replacing-failed-drive-in-zfs-zpool-on-proxmox/</link>
      <pubDate>Mon, 12 Dec 2016 18:13:32 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/replacing-failed-drive-in-zfs-zpool-on-proxmox/</guid>
      <description>

&lt;p&gt;Recently we had one of our Proxmox machines suffer a failed disk drive.&lt;/p&gt;

&lt;p&gt;Thankfully, replacing a failed disk in a ZFS zpool is remarkably simple if you know how.&lt;/p&gt;

&lt;p&gt;In this example, we are using the ZFS configuration as per the Proxmox installer which also creates a boot partition which is not part of the zpool. Seems like a pretty sensible idea to me.&lt;/p&gt;

&lt;p&gt;Here is how we can look at the status of our zpool and see that it has a failed disk:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@cluster1 zpool status -v
  pool: rpool
 state: DEGRADED
status: One or more devices could not be used because the label is missing or
    invalid.  Sufficient replicas exist for the pool to continue
    functioning in a degraded state.
action: Replace the device using &#39;zpool replace&#39;.
   see: http://zfsonlinux.org/msg/ZFS-8000-4J
  scan: none requested
config:

    NAME                      STATE     READ WRITE CKSUM
    rpool                     DEGRADED     0     0     0
      raidz1-0                DEGRADED     0     0     0
        sdb2                  ONLINE       0     0     0
        sdc2                  ONLINE       0     0     0
        sdd2                  ONLINE       0     0     0
        14456048953908038050  FAULTED      0     0     0  was /dev/sdd2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So you can see that &lt;code&gt;/dev/sdd2&lt;/code&gt; has died and is no longer available. The numeric ID that is in place of sdd2 is important so make sure you have note of it.&lt;/p&gt;

&lt;p&gt;Now lets assume that you have figured out which drive the failed one is, whipped it out and slotted in a shiny new replacement drive that is at least as big as the one it is replacing. The next step is to actually add in the new drive.&lt;/p&gt;

&lt;h1 id=&#34;step-one-know-your-drive-ids&#34;&gt;Step one: Know your Drive IDs&lt;/h1&gt;

&lt;p&gt;To avoid misery, you need to make absolutely sure you know which drives are which. If you replace a drive then the IDs (sda etc) can get shuffled around, so you need to double check.&lt;/p&gt;

&lt;p&gt;The easiest way I think is to look in &lt;code&gt;/dev/disk/by-id&lt;/code&gt; and in there you should notice one disk that has no partitions - that is your new one.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@cluster1 cd /dev/disk/by-id/
/dev/disk/by-id
root@cluster1 ll
total 0
drwxr-xr-x 2 root root 560 Dec 12 12:08 .
drwxr-xr-x 6 root root 120 Dec 12 12:08 ..
lrwxrwxrwx 1 root root   9 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRREL -&amp;gt; ../../sdd
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRREL-part1 -&amp;gt; ../../sdd1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRREL-part2 -&amp;gt; ../../sdd2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRREL-part9 -&amp;gt; ../../sdd9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRS0J -&amp;gt; ../../sdc
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRS0J-part1 -&amp;gt; ../../sdc1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRS0J-part2 -&amp;gt; ../../sdc2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRS0J-part9 -&amp;gt; ../../sdc9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRV9T -&amp;gt; ../../sdb
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRV9T-part1 -&amp;gt; ../../sdb1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRV9T-part2 -&amp;gt; ../../sdb2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRV9T-part9 -&amp;gt; ../../sdb9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YE995W -&amp;gt; ../../sda
lrwxrwxrwx 1 root root   9 Dec 12 12:08 wwn-0x5000c50090cca172 -&amp;gt; ../../sdc
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cca172-part1 -&amp;gt; ../../sdc1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cca172-part2 -&amp;gt; ../../sdc2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cca172-part9 -&amp;gt; ../../sdc9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 wwn-0x5000c50090cd24c4 -&amp;gt; ../../sdb
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd24c4-part1 -&amp;gt; ../../sdb1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd24c4-part2 -&amp;gt; ../../sdb2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd24c4-part9 -&amp;gt; ../../sdb9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 wwn-0x5000c50090cd2ff2 -&amp;gt; ../../sdd
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd2ff2-part1 -&amp;gt; ../../sdd1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd2ff2-part2 -&amp;gt; ../../sdd2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd2ff2-part9 -&amp;gt; ../../sdd9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 wwn-0x5000c50092c1f5b2 -&amp;gt; ../../sda
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So in our example, the new disk is &lt;code&gt;sda&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;step-two-partitions&#34;&gt;Step two: Partitions&lt;/h1&gt;

&lt;p&gt;We need to get our drive set up with the right partition table. Thankfully this is easy enough because we can just copy this from a healthy drive.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Warning - make sure you have the next command right before running it&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;# Use these variables to make sure you have this the right way around

newDisk=&#39;/dev/sda&#39;

healthyDisk=&#39;/dev/sdb&#39;

sgdisk -R &amp;quot;$newDisk&amp;quot; &amp;quot;$healthyDisk&amp;quot;
sgdisk -G &amp;quot;$newDisk
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;step-three-boot-partition&#34;&gt;Step three: Boot partition&lt;/h1&gt;

&lt;p&gt;In our example, partition one is boot and can be just copied directly from a healthy disk (we will sort out ZFS partition later)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Use these variables to make sure you have this the right way around

newDiskBootPartition=&#39;/dev/sda1&#39;

healthyDiskBootPartition=&#39;/dev/sdb1&#39;

dd if=&amp;quot;$healthyDiskBootPartition&amp;quot; of=&amp;quot;$newDiskBootPartition&amp;quot; bs=512
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;step-four-add-to-zpool&#34;&gt;Step four: Add to zpool&lt;/h1&gt;

&lt;p&gt;Now we are going to add the new disk to the zpool and replace the failed one.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;newDiskZFSPartition=&#39;/dev/sda2`
#Put your failed disk ID here - as reported in `zpool status -v` - eg 14456048953908038050
failedDiskPartitionID=&#39;&#39;

zpool replace rpool &amp;quot;$failedDiskPartitionID&amp;quot; &amp;quot;$newDiskZFSPartition&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That should give you the warning:
&lt;em&gt;Make sure to wait until resilver is done before rebooting.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can keep track of the reslivering process by running &lt;code&gt;zpool status -v&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;eg&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@cluster1 zpool status -v
  pool: rpool
 state: DEGRADED
status: One or more devices is currently being resilvered.  The pool will
    continue to function, possibly in a degraded state.
action: Wait for the resilver to complete.
  scan: resilver in progress since Mon Dec 12 12:14:43 2016
    91.9M scanned out of 1.87T at 7.66M/s, 71h0m to go
    22.6M resilvered, 0.00% done
config:

    NAME                        STATE     READ WRITE CKSUM
    rpool                       DEGRADED     0     0     0
      raidz1-0                  DEGRADED     0     0     0
        sdb2                    ONLINE       0     0     0
        sdc2                    ONLINE       0     0     0
        sdd2                    ONLINE       0     0     0
        replacing-3             UNAVAIL      0     0     0
          14456048953908038050  FAULTED      0     0     0  was /dev/sdd2
          sda2                  ONLINE       0     0     0  (resilvering)

errors: No known data errors

&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note on this, the time to go (eg 71h0m) was wildly pessimistic - actually took around 4 hours&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;step-five-reboot&#34;&gt;Step five: Reboot&lt;/h1&gt;

&lt;p&gt;Once the reslivering process has finished, you can reboot the machine to make sure that everything is back to normal health&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@cluster1 zpool status -v
  pool: rpool
 state: ONLINE
  scan: resilvered 456G in 4h42m with 0 errors on Mon Dec 12 16:57:37 2016
config:

    NAME        STATE     READ WRITE CKSUM
    rpool       ONLINE       0     0     0
      raidz1-0  ONLINE       0     0     0
        sdc2    ONLINE       0     0     0
        sdd2    ONLINE       0     0     0
        sde2    ONLINE       0     0     0
        sdb2    ONLINE       0     0     0

errors: No known data errors
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Wrapping a List in Quotes in PHPStorm</title>
      <link>https://edmondscommerce.github.io/phpstorm/wrapping-a-list-in-quotes-in-phpstorm.html</link>
      <pubDate>Fri, 06 Dec 2013 11:35:58 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm/wrapping-a-list-in-quotes-in-phpstorm.html</guid>
      <description>&lt;p&gt;Some times you might find your self with a list of values you want to copy and paste from somewhere into your PHP code as an array of strings.&lt;/p&gt;

&lt;p&gt;For example, take this list of carrier names that I need to use:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Blue Package, USPS, UPS, UPSMI, FedEx, DHL, DHL Global Mail, Fastway, UPS Mail Innovations, Lasership, Royal Mail, FedEx SmartPost, OSM, OnTrac, Streamlite, Newgistics, Canada Post, City Link, GLS, GO!, Hermes Logistik Gruppe, Parcelforce, TNT, Target, SagawaExpress, NipponExpress, YamatoTransport, Other
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I really don&amp;rsquo;t fancy wrapping each element of this list with quotes one by one, there must be a better way!&lt;/p&gt;

&lt;p&gt;There is, you can use the regex replace functionality of PHPStorm to do this for you quickly and easily.&lt;/p&gt;

&lt;p&gt;First of all paste the string into your PHPStorm editor and highlight it. Then hit &lt;code&gt;[ctrl]+[r]&lt;/code&gt; to start your find and replace.&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;In Selection&amp;rdquo; tick box should be ticked already, you also need to tick the regex box.&lt;/p&gt;

&lt;p&gt;Then in the find section, use this regex:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;( |)([^,]+),
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And in your replace box, put this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\n&#39;$2&#39;,
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This gets you nearly all the way there, you might just need to tidy up a bit you should now have something looking like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;Blue Package&#39;,
&#39;USPS&#39;,
&#39;UPS&#39;,
&#39;UPSMI&#39;,
&#39;FedEx&#39;,
&#39;DHL&#39;,
&#39;DHL Global Mail&#39;,
&#39;Fastway&#39;,
&#39;UPS Mail Innovations&#39;,
&#39;Lasership&#39;,
&#39;Royal Mail&#39;,
&#39;FedEx SmartPost&#39;,
&#39;OSM&#39;,
&#39;OnTrac&#39;,
&#39;Streamlite&#39;,
&#39;Newgistics&#39;,
&#39;Canada Post&#39;,
&#39;City Link&#39;,
&#39;GLS&#39;,
&#39;GO!&#39;,
&#39;Hermes Logistik Gruppe&#39;,
&#39;Parcelforce&#39;,
&#39;TNT&#39;,
&#39;Target&#39;,
&#39;SagawaExpress&#39;,
&#39;NipponExpress&#39;,
&#39;YamatoTransport&#39;, Other
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;Other&lt;/code&gt; on the end has not been converted has it doesn&amp;rsquo;t have a trailing comma. You could mess about with yoru regex trying to get this to also be converted, or you could say good enough and move on.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHPStorm Regex Convert Array to Object Syntax</title>
      <link>https://edmondscommerce.github.io/php/phpstorm-regex-convert-array-to-object-syntax.html</link>
      <pubDate>Tue, 27 Aug 2013 14:40:35 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/phpstorm-regex-convert-array-to-object-syntax.html</guid>
      <description>&lt;p&gt;If you are converting some code from using array syntax to object property syntax then you might like this little snippet of regex.&lt;/p&gt;

&lt;p&gt;This is design to paste straight into the find/replace dialogue in PHPStorm&lt;/p&gt;

&lt;p&gt;Find:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
\$(\w+)\[&#39;([^&#39;]+)&#39;\]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Replace:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
\\\$$1-&amp;gt;$2

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that is it&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHPStorm Regex Replace &#34;Malformed Replacement String&#34;</title>
      <link>https://edmondscommerce.github.io/phpstorm/phpstorm-regex-replace-malformed-replacement-string.html</link>
      <pubDate>Thu, 24 Jan 2013 17:39:08 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm/phpstorm-regex-replace-malformed-replacement-string.html</guid>
      <description>&lt;p&gt;If you are struggling using PHPStorm to find and replace code with Regex rules then this is your solution.&lt;/p&gt;

&lt;p&gt;The problem is that when using the $ sign in your replacement string it confuses it because PHP Storm uses the $ sign to represent sub pattern replacements.&lt;/p&gt;

&lt;p&gt;Take the following example code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$data = array();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$form=$page-&amp;gt;find(&amp;#39;form.edit_product&amp;#39;, 0);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//standard inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;text&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$input-&amp;gt;name]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//radio inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;radio&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$input-&amp;gt;name]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//checkbox inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;checkbox&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$input-&amp;gt;name]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//textareas&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$textareas = $form-&amp;gt;find(&amp;#39;textarea&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($textareas as $textarea){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$textarea-&amp;gt;name]=$textarea-&amp;gt;innertext;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And trying to replace the key being used in the data array with a processed one calling a method $this-&amp;gt;dataName($key) to generate the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$data = array();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$form=$page-&amp;gt;find(&amp;#39;form.edit_product&amp;#39;, 0);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//standard inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;text&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$this-&amp;gt;dataName($input-&amp;gt;name)]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//radio inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;radio&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$this-&amp;gt;dataName($input-&amp;gt;name)]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//checkbox inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;checkbox&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$this-&amp;gt;dataName($input-&amp;gt;name)]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//textareas&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$textareas = $form-&amp;gt;find(&amp;#39;textarea&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($textareas as $textarea){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$this-&amp;gt;dataName($textarea-&amp;gt;name)]=$textarea-&amp;gt;innertext;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You might try the find pattern:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
\$data\[\$([^-]+)-&amp;gt;name\]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the replace pattern:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
\$data\[\$this-&amp;gt;dataName(\$$1-&amp;gt;name)\]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However this will give you the dreaded &lt;b&gt;&amp;ldquo;malformed replacement string&amp;rdquo;&lt;/b&gt; Error&lt;/p&gt;

&lt;p&gt;The solution is simply to triple escape your dollar signs, so the replacement pattern becomes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
\\\$data\[\\\$this-&amp;gt;dataName(\\\$$1-&amp;gt;name\)\]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And it works, woot!&lt;/p&gt;

&lt;p&gt;Also when it does work, PHP Storms replacement preview feature is really quite nice&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Geany Text Editor Remove Hash Comments</title>
      <link>https://edmondscommerce.github.io/geany/geany-text-editor-remove-hash-comments.html</link>
      <pubDate>Mon, 12 Nov 2012 11:25:16 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/geany/geany-text-editor-remove-hash-comments.html</guid>
      <description>&lt;p&gt;I recently needed to quickly remove some commented lines from a .htaccess file using Geany (a really nice lightweight IDE or feature rich text editor depending on your point of view).&lt;/p&gt;

&lt;p&gt;Geany has some powerful regex replace functionality in there but I found that it was overly aggressive so removed lines that had more than one hash and were in fact title sections that needed to stay intact.&lt;/p&gt;

&lt;p&gt;The working formula was:&lt;/p&gt;

&lt;p&gt;Search for:
&lt;code&gt;
&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:-&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:-&#34;&gt;0&lt;/a&gt;&lt;/sup&gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And replace with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And of course tick the regex box.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://edmondscommerce.github.io/images/geany.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Remove Double Slashes from URL without Breaking It</title>
      <link>https://edmondscommerce.github.io/php/remove-double-slashes-from-url-without-breaking-it.html</link>
      <pubDate>Fri, 24 Feb 2012 16:58:38 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/remove-double-slashes-from-url-without-breaking-it.html</guid>
      <description>&lt;p&gt;If you need to clean up a URL and remove any double (or more) slashes that might have crept in, but need to keep the :// bit intact you might like this little function&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;    protected function removeDoubleSlash($in) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        return preg_replace(&amp;#39;%([^:])(&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Handy :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu Bulk Find And Replace GUI - Regexxer</title>
      <link>https://edmondscommerce.github.io/ubuntu/ubuntu-bulk-find-and-replace-gui-regexxer.html</link>
      <pubDate>Fri, 29 Jan 2010 13:21:27 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/ubuntu/ubuntu-bulk-find-and-replace-gui-regexxer.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you need to do a bulk find and replace operation on a load of files within a particular folder structure, for example when refactoring some of your code, then instead of trying to use your IDE you could give this little app a try.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s called Regexxer:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://regexxer.sourceforge.net/&#34;&gt;http://regexxer.sourceforge.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And is in the Ubuntu repositories (Software Centre) so is only a couple of clicks away from being installed.&lt;/p&gt;

&lt;p&gt;(Note previously I have recommended Search Monkey and I still think that&amp;rsquo;s a great tool, but it doesn&amp;rsquo;t seem to do replace, only find).&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>