<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Parse on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/parse/</link>
    <description>Recent content in Parse on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Apr 2014 12:40:27 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/parse/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>GoAccess - Nice CLI Access Log Parsing Tool (and how to install on CentOS)</title>
      <link>https://edmondscommerce.github.io/sysadmin/goaccess-nice-cli-access-log-parsing-tool-and-how-to-install-on-centos.html</link>
      <pubDate>Thu, 24 Apr 2014 12:40:27 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/sysadmin/goaccess-nice-cli-access-log-parsing-tool-and-how-to-install-on-centos.html</guid>
      <description>&lt;p&gt;Log files are probably the single most useful item on a web server when it comes to debugging. They are packed full of all the information you need to understand what is
happening on the server and detect any potential issues.&lt;/p&gt;

&lt;p&gt;Reading log files by hand is basically imposssible for any meaningful overall monitoring. You can of course do some grepping and other bash tools to gain more insights but some times it&amp;rsquo;s nice to just have a simple tool.&lt;/p&gt;

&lt;p&gt;I am a big fan of tools like top, mytop, apachetop and ngxtop. GoAccess is a little bit different though, mainly it just seems a lot more fully featured.&lt;/p&gt;

&lt;p&gt;Best thing to do is to try it. Here is how to install it on CentoOS&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;yum install ncurses-devel glib2-devel geoip-devel
mkdir -p ~/goaccess
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/goaccess
wget http://downloads.sourceforge.net/project/goaccess/0.7.1/goaccess-0.7.1.tar.gz
tar -xzvf goaccess-0.7.1.tar.gz
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; goaccess-0.7.1/
./configure --enable-geoip --enable-utf8
make
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can read more about GoAccess here:
&lt;a href=&#34;http://goaccess.prosoftcorp.com/&#34; target=&#34;_blank&#34;&gt;http://goaccess.prosoftcorp.com/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tip: Parse XML Values in bash e.g. Magento local.xml</title>
      <link>https://edmondscommerce.github.io/bash/tip-parse-xml-values-in-bash-e-g-magento-local-xml.html</link>
      <pubDate>Thu, 23 Aug 2012 11:37:58 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash/tip-parse-xml-values-in-bash-e-g-magento-local-xml.html</guid>
      <description>&lt;p&gt;Not the most elegant way to do this, and probably could do with some extra tweaks but it works for our purposes, so presented here in case it fits yours :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# xml_value path/to/file node_key&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; xml_value&lt;span class=&#34;o&#34;&gt;(){&lt;/span&gt;
    grep &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;.*&amp;lt;.&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;s/&amp;lt;\!\[CDATA\[//&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;s/\]\]&amp;gt;//&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;s/^.*&amp;lt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&amp;lt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -f2 -d&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -f1 -d&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;lt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It also strips out the CDATA tags, which we needed to pull the database details from Magento&amp;rsquo;s local.xml&lt;/p&gt;

&lt;p&gt;To use this to get, for example, the database host, you would use the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;DB_HOST&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;xml_value app/etc/local.xml host&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To use this&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simple PHP Scraping with jQuery Like Selectors using Simple HTML Dom</title>
      <link>https://edmondscommerce.github.io/scraping/simple-php-scraping-with-jquery-like-selectors-using-simpledom.html</link>
      <pubDate>Tue, 21 Aug 2012 18:29:43 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/scraping/simple-php-scraping-with-jquery-like-selectors-using-simpledom.html</guid>
      <description>&lt;p&gt;If you need to do some HTML parsing, scraping etc then you generally have the choice of using the DOM approach to parse the HTML or using regex to pull bits out. I quite like both approaches, there are pros and cons to both so having both options available is the best to ensure you use the right tool for the job on a case by case basis.&lt;/p&gt;

&lt;p&gt;Recently though I discovered Simple HTML Dom. This makes the DOM based approach almost ridiculously easy, especially if you are comfortable with jQuery like selectors for pulling out specific DOM nodes.&lt;/p&gt;

&lt;p&gt;You can read all about it here:
&lt;a href=&#34;http://simplehtmldom.sourceforge.net/manual.htm&#34; title=&#34;Simple HTML Dom&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://simplehtmldom.sourceforge.net/manual.htm&#34; target=&#34;_blank&#34;&gt;http://simplehtmldom.sourceforge.net/manual.htm&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First impressions are really good, its very easy and the lead in time from installation to using is really fast. I like that, never been much of a fan of having to RTFM for everything!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>