<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rounding on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/rounding/</link>
    <description>Recent content in Rounding on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Jul 2012 11:02:21 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/rounding/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Magento Rounding Errors (1.6.0&#43;)</title>
      <link>http://edmondscommerce.github.io/magento/magento-rounding-errors-1-6-0.html</link>
      <pubDate>Tue, 17 Jul 2012 11:02:21 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/magento-rounding-errors-1-6-0.html</guid>
      <description>&lt;p&gt;The latest version of Magento has a fairly major issue that mostly affects UK and EU businesses, in the way it calculates taxes.&lt;/p&gt;

&lt;p&gt;One of the most obvious situations is if you sell something worth £24.99 (inc. tax) and enter that as the price in Magento.  The thread on the Magento forum is &lt;a href=&#34;http://www.magentocommerce.com/boards/viewthread/247201/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On the front end (if you have left the standard price templates alone) you will in 1.6.2+ see a price of £24.98.&lt;/p&gt;

&lt;p&gt;This is because Magento first takes off the tax, then adds it back on, unfortunately a rounding error creeps in at one or the other side of the process.&lt;/p&gt;

&lt;p&gt;Magento claims this is fixed in 1.7.0.1 but from reports we have seen this is not the case.  There are two current fixes but they both have issues.&lt;/p&gt;

&lt;p&gt;The first (listed &lt;a href=&#34;http://www.magentocommerce.com/boards/viewreply/353791/&#34;&gt;here&lt;/a&gt;) is to override the store rounding system and have Magento work to 4 decimal places instead of 2.  That&amp;rsquo;s fine and works but if you have a payment gateway that gets fed the line items (such as Paypal Express Checkout for instance), the total does not match the line items (probably because it is passed a 4dp number and it doesn&amp;rsquo;t match the totals of the 2dp items).&lt;/p&gt;

&lt;p&gt;Another option (as mentioned &lt;a href=&#34;http://www.magentocommerce.com/boards/viewreply/361474/&#34;&gt;here&lt;/a&gt;) is to assume no rounding where it is not specified rather than assuming rounding.  This won&amp;rsquo;t cause problems with gateways but then you do need to fiddle with your templates to make sure your prices are displayed with tax.&lt;/p&gt;

&lt;p&gt;As mentioned, we haven&amp;rsquo;t actually seen a solution that works across the board and is right with stats, payment gateways, frontend and backend.  It&amp;rsquo;s a major bug and hopefully the next release of Magento will fix this.&lt;/p&gt;

&lt;p&gt;This appears to be most prevalent when using the &amp;ldquo;Prices include tax in backend&amp;rdquo; setting as the tax calculation only gets done once if you enter pre-tax prices and have the tax only added on.  That isn&amp;rsquo;t to say that it will always calculate the tax correctly that way round either, just that this particular rounding issue is not as visible.&lt;/p&gt;

&lt;p&gt;Also, the fixes listed on that thread involve modifying core files - &lt;strong&gt;don&amp;rsquo;t do this!&lt;/strong&gt; copy the files to /app/code/local/Mage from /app/code/core/Mage and modify them in there.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>