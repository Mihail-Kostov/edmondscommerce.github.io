<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mod_rewrite on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/mod_rewrite/</link>
    <description>Recent content in Mod_rewrite on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Apr 2013 11:05:20 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/mod_rewrite/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Apache Mod Rewrite Escaped Slashes Problem &#43; Solution</title>
      <link>https://edmondscommerce.github.io/apache/apache-mod-rewrite-escaped-slashes-problem-solution.html</link>
      <pubDate>Thu, 11 Apr 2013 11:05:20 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/apache/apache-mod-rewrite-escaped-slashes-problem-solution.html</guid>
      <description>&lt;p&gt;As part of our Magento SEO service, the first thing we do is to make sure there are no issues with the crawlability and general health of the clients web site.&lt;/p&gt;

&lt;p&gt;Whilst working on the Google Webmaster Tools crawl errors for a client I noticed one specific and intruiging problem for which I couldn&amp;rsquo;t immediately see the reason, everything looked to be set up perfectly.&lt;/p&gt;

&lt;p&gt;Certain URLs were getting 404 responses. The URL was being parsed by mod_rewrite but everything looked fine so why was apache giving a 404?&lt;/p&gt;

&lt;p&gt;The problem turns out to be that the URLs contain escaped slashes (eg search/KTA-mb667k2%2F2g),&lt;/p&gt;

&lt;p&gt;The problem is that Apache actually handles the escaped slash and helpfully converts it to a real slash. That then means that it is trying to look in a sub folder that does not exist and hence the 404.&lt;/p&gt;

&lt;p&gt;Chances are you don&amp;rsquo;t want escaped slashes to really be thought of as real directory separating slashes, especially if you are using mod_rewrite.&lt;/p&gt;

&lt;p&gt;The answer is a simple one liner to be added to your vhost.conf or httpd.conf.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
AllowEncodedSlashes On

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Magento URL Request Routing</title>
      <link>https://edmondscommerce.github.io/magento/magento-url-request-routing.html</link>
      <pubDate>Tue, 17 Jan 2012 16:13:03 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-url-request-routing.html</guid>
      <description>&lt;p&gt;Magento is a typical PHP Model View Architecture (MVC) system which routes its URLs in ways not particularly different from other PHP MVC Frameworks like codeigniter, symphony etc. But the difference it has with other MVC architecture is that most of its routing directives or configurations are XML based i.e. found in one XML file or the other.&lt;/p&gt;

&lt;p&gt;For example, www.yourstore.co.uk/index.php/checkout/cart/index, tells Magento to use the checkout module found in app/code/Mage/,  use the cart controller (i.e. CartController.php) in app/code/Mage/Checkout/controller/ and run the index action method in the CartController.php, when the last &amp;ldquo;index&amp;rdquo; is omitted Magento still defaults to run the index action method, and every other value in the url after the first three url steps, Magento treats them as PHP GET parameters i.e. www.yourstore.co.uk/index.php/checkout/cart/index/store/1 would make $_GET[&amp;lsquo;store&amp;rsquo;]=1&lt;/p&gt;

&lt;p&gt;It is this action method that searches through the magneto xml configuration file using x-path to obtain information regarding this request e.g. the indexAction method found in app/code/Mage/Checkout/controller/CartController.php uses  Mage::getStoreConfig(&amp;lsquo;sales/minimum_order/description&amp;rsquo;) to get the value of the description node  in sales module, the minimum_order node and description child node, which can be found in system.xml in the Sales/etc/ folder.&lt;/p&gt;

&lt;p&gt;Its is worthwhile also knowing that Magento uses Apache&amp;rsquo;s URL rewrite engine (mod_rewrite) to make its URLs SEO friendly i.e. www.yourstore.co.uk/index.php/catalog/product/view/id/1 could be routed to www.yourstore.co.uk/index.php/product1.html which can be regarded as an alias for  www.yourstore.co.uk/index.php/catalog/product/view/id/1 to make Google happy and improve the sites SEO.&lt;/p&gt;

&lt;p&gt;This basically describes how Magento decides what to do when accessed by a particular URL.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>