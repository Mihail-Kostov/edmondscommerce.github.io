<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Files on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/files/</link>
    <description>Recent content in Files on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Mar 2014 16:10:19 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/files/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Finding out the biggest folders in a Magento or other website root</title>
      <link>http://edmondscommerce.github.io/bash/finding-out-the-biggest-folders-in-a-magento-or-other-website-root.html</link>
      <pubDate>Tue, 04 Mar 2014 16:10:19 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/bash/finding-out-the-biggest-folders-in-a-magento-or-other-website-root.html</guid>
      <description>&lt;p&gt;Often pulling down a Magento or other site you&amp;rsquo;ll find a load of files that have been dumped in the web root. Downloading these is often pointless and takes extra time, so you&amp;rsquo;ll want to exclude them from an rsync (using the &lt;code&gt;--exclude &#39;path&#39;&lt;/code&gt; paramter).&lt;/p&gt;

&lt;p&gt;A simple bash command for this is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;du -m --max-depth&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; --exclude media &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort -n
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This invokes &lt;code&gt;du&lt;/code&gt; to show each direct subfolder&amp;rsquo;s contents&amp;rsquo; size, and pipes it through to &lt;code&gt;sort&lt;/code&gt; to rank them in increasing size. The sizes are in MB. See &lt;a href=&#34;http://explainshell.com/explain?cmd=du+-m+--max-depth%3D1+--exclude+media+|+sort+-n&#34; target=&#34;_blank&#34;&gt;a more broken down explanation here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Restore lessc -w functionality, extendable to anything that needs to watch a file.</title>
      <link>http://edmondscommerce.github.io/linux/restore-lessc-w-functionality-extendable-to-anything-that-needs-to-watch-a-file.html</link>
      <pubDate>Fri, 02 Mar 2012 12:25:46 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/restore-lessc-w-functionality-extendable-to-anything-that-needs-to-watch-a-file.html</guid>
      <description>&lt;p&gt;The latest version of the less compiler in ruby has reduced the functionality of watching a file, so we wrote this little script (which we put in ~/bin/lessc-w) to restore the old functionality :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
#!/bin/bash

LESSFILE=$1
CSSFILE=`basename $1 .less`.css

if [ &amp;quot;$2&amp;quot; != &amp;quot;-f&amp;quot; ]; then
    if [ &amp;quot;`file -b $LESSFILE`&amp;quot; != &amp;quot;ASCII text&amp;quot; ]; then
        echo &amp;quot;file $1 doesn&#39;t look like a less file...., looks like a `file -b $LESSFILE`&amp;quot;;
        echo &amp;quot;usage: lessc-w lessfile.less [-f]&amp;quot;;
        exit
    fi
fi

while true; do
    inotifywait -e modify $LESSFILE &amp;amp;&amp;amp; \
    echo &amp;quot;Rebuilding styles&amp;quot; &amp;amp;&amp;amp; \
    lessc $LESSFILE &amp;gt; $CSSFILE
done

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see it&amp;rsquo;s very simple to tweak this to any program that needs to be run when a file is changed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How To Extract Files from Plesk Backups</title>
      <link>http://edmondscommerce.github.io/plesk/how-to-extract-files-from-plesk-backups.html</link>
      <pubDate>Mon, 30 Jan 2012 17:25:16 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/plesk/how-to-extract-files-from-plesk-backups.html</guid>
      <description>&lt;p&gt;So you have a plesk backup file and you want to extract and open the files from it? No problem. This blog will show you how.&lt;/p&gt;

&lt;p&gt;The file is a mime file. The &amp;ldquo;mpack&amp;rdquo; package will let you unpack it.&lt;/p&gt;

&lt;p&gt;First we install the &amp;ldquo;mpack&amp;rdquo; package&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install mpack
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s imagine your file is called &amp;ldquo;pleskDump.gz&amp;rdquo;. If it doesn&amp;rsquo;t have a &amp;ldquo;.gz&amp;rdquo; at the end it might not be bad to add it as some environments will complain if it&amp;rsquo;s absent.&lt;/p&gt;

&lt;p&gt;Next we unzip the file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gunzip pleskDump.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let&amp;rsquo;s un-mime the file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir pleskDumpOutput
cd pleskDumpOutput
cat ../pleskDump | munpack
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we have a bunch of regular tar files, but be careful, if we just extract them, the root folders will not be recreated. In order to keep things together, it&amp;rsquo;s best now to look at the output you have. Let&amp;rsquo;s take a made up example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;example-domain.com.httpdocs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that the format is essentially domain.rootfolder or in another way, the tar files have your domain name they are archiving, then a dot, then the name of the root folder they made up. We take that root folder and create it like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir rootfolder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let&amp;rsquo;s apply that idea to our previoud example; &amp;ldquo;example-domain.com&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir httpdocs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s time to untar into the folder you just created, let&amp;rsquo;s assume you just created &amp;ldquo;httpdocs&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar -xvf example-domain.com.httpdocs -C httpdocs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There you go! You can now output any of the folders you wanted.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quickly Get a List of Files in PHP with glob()</title>
      <link>http://edmondscommerce.github.io/php/quickly-get-a-list-of-files-in-php-with-glob.html</link>
      <pubDate>Tue, 25 Oct 2011 11:24:37 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/php/quickly-get-a-list-of-files-in-php-with-glob.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Perhaps not as well known as it should be, PHP&amp;rsquo;s glob() function is really quite powerful and exceptionally handy.&lt;/p&gt;

&lt;p&gt;Need to get a list of files in a directory - try this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$tools = glob(&amp;#39;includes/tools/*&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;var_dump($tools);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Want to delete all files matching a specific pattern, try this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;array_map(&amp;#39;unlink&amp;#39;, glob(&amp;#39;export_feeds/my_feed_*&amp;#39;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Theres lots more tricks you can do.&lt;/p&gt;

&lt;p&gt;One word of warning though - with great power comes great responsibility!&lt;/p&gt;

&lt;p&gt;I would advise against using any kind of user input with this function.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://php.net/manual/en/function.glob.php&#34;&gt;Read more&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Find Files Modified in the last X Days</title>
      <link>http://edmondscommerce.github.io/linux/find-files-modified-in-the-last-x-days.html</link>
      <pubDate>Mon, 04 Jan 2010 14:29:01 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/find-files-modified-in-the-last-x-days.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you need to check which files (eg PHP files for example) have been modified within the last few days, you can run this quick command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
find . -mtime -36 -iname &amp;quot;*.php&amp;quot; -fprint modded.txt

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will generate a list and save it to a file called modded.txt.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cron Creating Lots of Files in Home Directory</title>
      <link>http://edmondscommerce.github.io/linux/cron-creating-lots-of-files-in-home-directory.html</link>
      <pubDate>Tue, 22 Sep 2009 15:55:14 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/cron-creating-lots-of-files-in-home-directory.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you have some cron jobs set up and you are finding large amounts of files saved in your home directory (or root) then perhaps you have the same issue I had.&lt;/p&gt;

&lt;p&gt;I was using wget to call on some PHP scripts to run periodically. wget will do what it says on the tin and save the files. If you don&amp;rsquo;t want it to do that, you need to add the following in front of your wget command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
-O /dev/null 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;eg&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
wget -O /dev/null http://script.com/script.php

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>