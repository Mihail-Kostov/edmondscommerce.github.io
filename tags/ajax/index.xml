<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ajax on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/ajax/</link>
    <description>Recent content in Ajax on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Feb 2012 14:15:01 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/ajax/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Magento Controller Action Return Json (for AJAX, API etc)</title>
      <link>https://edmondscommerce.github.io/magento/magento-controller-action-return-json-for-ajax-api-etc.html</link>
      <pubDate>Wed, 15 Feb 2012 14:15:01 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-controller-action-return-json-for-ajax-api-etc.html</guid>
      <description>&lt;p&gt;If you have a controller action that is designed to be accessed by AJAX requests or perhaps as part of a custom API system then you might like this snippet.&lt;/p&gt;

&lt;p&gt;If you are working with the above scenario you likely would like to return pure JSON without any HTML etc. Also serving up the correct content type headers is going to be helpful, its not HTML, its JSON.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;    public function searchAction(){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $query = $this-&amp;gt;getRequest()-&amp;gt;getParam(&amp;#39;query&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $json = Mage::getModel(&amp;#39;mymodule/mymodel&amp;#39;)-&amp;gt;getSearchJson($query);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;getResponse()-&amp;gt;setHeader(&amp;#39;Content-type&amp;#39;, &amp;#39;application/json&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;getResponse()-&amp;gt;setBody($json);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>BBC Release Their Javascript Library - Glow - Open Source</title>
      <link>https://edmondscommerce.github.io/javascript/bbc-release-their-javascript-library-open-source.html</link>
      <pubDate>Fri, 10 Jul 2009 09:46:32 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/javascript/bbc-release-their-javascript-library-open-source.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
I read on &lt;a href=&#34;http://ajaxian.com/archives/ouh-shiny-bbcs-glow-is-finally-out&#34; rel=&#34;nofollow&#34;&gt;Ajaxian&lt;/a&gt; today that the BBC have released their own javascript library, Glow,  as open source. This is a nice move on the part of the BBC and great news for anyone looking to develop a site with some nice AJAX features but with a priority on accessibility and broad browser support.&lt;/p&gt;

&lt;p&gt;The core reason that the BBC use their own library instead of one of the existing javascript libraries is one of browser support. As stated on the &lt;a href=&#34;http://www.bbc.co.uk/glow/docs/articles/what_is_glow.shtml&#34; rel=&#34;nofollow&#34;&gt;Glow site&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;However, on reviewing the major libraries we found that none met our standards and guidelines, with browser support in particular being a major issue.&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>