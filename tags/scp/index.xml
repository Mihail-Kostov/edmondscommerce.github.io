<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scp on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/scp/</link>
    <description>Recent content in Scp on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Apr 2009 13:50:57 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/scp/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Basic Server Migration Using SSH &#43; SCP</title>
      <link>https://edmondscommerce.github.io/hosting/basic-server-migration-using-ssh-scp.html</link>
      <pubDate>Thu, 23 Apr 2009 13:50:57 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/hosting/basic-server-migration-using-ssh-scp.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
The scenario here is that you have access to two servers - old and new - and you want to copy a site + database from old server to new server directly.&lt;/p&gt;

&lt;p&gt;You have root SSH access to both servers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Create  a TAR archive of the document root for the site on the old server.&lt;/strong&gt;
Log into SSH on the old server.&lt;/p&gt;

&lt;p&gt;Navigate to your vhost root (the folder just above httpdocs) then use the following command to make a tar archive of your entire httpdocs folder:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
tar -cvvf httpdocs.tar httpdocs/

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;2. Gzip the TAR archive&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; gzip httpdocs.tar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;3. Transer the File to the New Server&lt;/strong&gt;
Log into SSH on the new server&lt;/p&gt;

&lt;p&gt;This bit may change according to your specific server setups. The way I approached this was to log into the new server  at the vhost root where I want to import the old httpdocs folder. I then use the following SCP command to log into the old server, find my archive and copy it to the current location.&lt;/p&gt;

&lt;p&gt;I am using a custom port (not the real one in the example of course) for SSH so that must be specified. Unlike SSH, you must use a capital P to specify a custom port&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note the space and full stop at the end - they are very important!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
scp -P 1111 old_server_username@123.123.123.123:/path/to/file/on/old/server/archive.tar.gz .

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;4. Dump all DB&amp;rsquo;s and Transfer&lt;/strong&gt;
To dump all of the databases into one single file we can use the following mysqldump syntax. Note you can simply use the &amp;ndash;all-databases switch but this will backup database that you probably don&amp;rsquo;t want to include. Better to declare a list of all the DB&amp;rsquo;s that you do want.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
mysqldump -u SomeUser -p --databases mydb1 mydb2 mydb3 &amp;gt; myDbs.sql

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you have this dump file you can Gzip it and transfer it via SCP using the same kind of commands as above.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>