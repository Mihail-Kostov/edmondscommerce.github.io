<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Innodb on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/innodb/</link>
    <description>Recent content in Innodb on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Oct 2010 16:32:25 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/innodb/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Failing to Create Foreign Keys (errno 150) &#43; Solution</title>
      <link>http://edmondscommerce.github.io/mysql/failing-to-create-foreign-keys-errno-150-solution.html</link>
      <pubDate>Tue, 19 Oct 2010 16:32:25 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/mysql/failing-to-create-foreign-keys-errno-150-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are struggling to get some foreign keys set up on your MySQL InnoDB database then perhaps this is your problem and a pretty simple solution.&lt;/p&gt;

&lt;p&gt;If you are getting errno 150 then take a look at the data types for the two fields that you are trying to relate to each other.&lt;/p&gt;

&lt;p&gt;I had issues in Magento creating foreign keys against the customer_entity and sales_flat_order tables (entity_id columns). Turns out the issue was that these columns were set to UNSIGNED on the Magento tables, yet my tables columns did not have this attribute.&lt;/p&gt;

&lt;p&gt;Set your columns to UNSIGNED (and otherwise double check the datatypes are the same) and I bet it will all work for you.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slow Truncating InnoDB Tables that have Foreign Keys set on them</title>
      <link>http://edmondscommerce.github.io/mysql/slow-truncating-innodb-tables-that-have-foreign-keys-set-on-them.html</link>
      <pubDate>Tue, 10 Aug 2010 17:12:34 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/mysql/slow-truncating-innodb-tables-that-have-foreign-keys-set-on-them.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
One of the advantages of using InnoDB as your storage engine in MySQL is that you can create a database structure that will automatically keep itself clean and tidy, by having deletes cascade through your tables as soon as you delete the main entity.&lt;/p&gt;

&lt;p&gt;However, if you need to empty a large table, you will find that this process is really slow.&lt;/p&gt;

&lt;p&gt;The solution is to first of all truncate all of the tables that have foreign key relations set on the main table and then only empty the main table once those child tables are emptied.&lt;/p&gt;

&lt;p&gt;Yes this defeats the object a bit, but if you want speed, this is the solution. It is incredibly fast in comparison, and the end result is the same.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>