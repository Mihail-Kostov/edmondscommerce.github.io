<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Model on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/model/</link>
    <description>Recent content in Model on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Feb 2012 14:15:01 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/model/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Magento Controller Action Return Json (for AJAX, API etc)</title>
      <link>http://edmondscommerce.github.io/magento/magento-controller-action-return-json-for-ajax-api-etc.html</link>
      <pubDate>Wed, 15 Feb 2012 14:15:01 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/magento-controller-action-return-json-for-ajax-api-etc.html</guid>
      <description>&lt;p&gt;If you have a controller action that is designed to be accessed by AJAX requests or perhaps as part of a custom API system then you might like this snippet.&lt;/p&gt;

&lt;p&gt;If you are working with the above scenario you likely would like to return pure JSON without any HTML etc. Also serving up the correct content type headers is going to be helpful, its not HTML, its JSON.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;    public function searchAction(){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $query = $this-&amp;gt;getRequest()-&amp;gt;getParam(&amp;#39;query&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $json = Mage::getModel(&amp;#39;mymodule/mymodel&amp;#39;)-&amp;gt;getSearchJson($query);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;getResponse()-&amp;gt;setHeader(&amp;#39;Content-type&amp;#39;, &amp;#39;application/json&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;getResponse()-&amp;gt;setBody($json);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Custom Model via Mage::getSingleton()</title>
      <link>http://edmondscommerce.github.io/magento/magento-custom-model-via-magegetsingleton.html</link>
      <pubDate>Mon, 02 Nov 2009 16:44:05 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/magento-custom-model-via-magegetsingleton.html</guid>
      <description>&lt;p&gt;If you are trying to load a custom model using the build in Mage::getSingleton() method and are struggling because it keeps looking in the Mage/ directory for your model instead of your custom model, the best solution I found was simply to put the entire class name of the model.&lt;/p&gt;

&lt;p&gt;eg doesn&amp;rsquo;t work:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;//trying to load EC/Custom/Model/Blah.php&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;Mage::getSingleton(&amp;#39;EC_custom/blah&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;does work&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;//trying to load EC/Custom/Model/Blah.php&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;Mage::getSingleton(&amp;#39;EC_Custom_Model_Blah&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>