<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bdd on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/bdd/</link>
    <description>Recent content in Bdd on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Apr 2015 12:04:12 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/bdd/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Behat</title>
      <link>https://edmondscommerce.github.io/behat/behat.html</link>
      <pubDate>Wed, 01 Apr 2015 12:04:12 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/behat/behat.html</guid>
      <description>&lt;p&gt;I love Behat. One of the great things about it is that it has been built to be very extensible, so if it doesn&amp;rsquo;t do exactly what you need then it&amp;rsquo;s really quite easy to to customise the way it works without having to do any hacking on the core code. This is because it makes extensive use of an Observer Pattern like Hooks system.&lt;/p&gt;

&lt;p&gt;If you want to have your Behat tests fail as soon as a scenario fails - ideal when you are running a large suite of tests and trying to fix issues - then simply add in this method into a Context class.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;   &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    /** @AfterScenario */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public function dieOnFailedScenario(Behat\Behat\Hook\Scope\AfterScenarioScope $scope)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (99 === $scope-&amp;gt;getTestResult()-&amp;gt;getResultCode()) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if (isset($_SERVER[&amp;#39;BEHAT_DIE_ON_FAILURE&amp;#39;])) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                die(&amp;quot;\n\nBEHAT_DIE_ON_FAILURE is defined\n\nKilling Full Process\n\n\n\n&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            } else {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                echo &amp;quot;\n\nTo die on failure, please run:\nexport BEHAT_DIE_ON_FAILURE=true;\n\n&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then in your terminal, simply export BEHAT_DIE_ON_FAILURE=true and then the next time you run your tests, the process will die and you can go and fix the problems.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>