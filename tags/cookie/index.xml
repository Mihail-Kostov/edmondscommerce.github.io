<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cookie on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/cookie/</link>
    <description>Recent content in Cookie on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Mar 2013 17:13:28 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/cookie/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PrestaShop - Session handling</title>
      <link>https://edmondscommerce.github.io/prestashop/prestashop-session-handling.html</link>
      <pubDate>Thu, 28 Mar 2013 17:13:28 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/prestashop/prestashop-session-handling.html</guid>
      <description>&lt;p&gt;Like most frameworks and software packages PrestaShop has it&amp;rsquo;s own way of handling session variables.&lt;/p&gt;

&lt;p&gt;PrestaShop uses the Cookie class to manage session variables. While this isn&amp;rsquo;t strictly a singleton you can get a pre initialised instance using Context::getContected-&amp;gt;cookie if the FrontController-&amp;gt;init() method has been called already.&lt;/p&gt;

&lt;p&gt;The Cookie class uses the magic __get __isset __set __unset magic methods to handle parameters. Parameters set in the cookie are actually given to the client in an encrypted blob. This is good because it means sessions are not really stored on the server. This does mean, however, that only scalar values can be stored in the session. To store non-scalar values you can usually get away with serialising them but there are some restrictions even then. If you do struggle to store serialised values you can base64 encode them to fix any remaining issues.&lt;/p&gt;

&lt;p&gt;Once you have set your variables you need to call the write method to save your variables to the cookie.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Apps and Two Factor Authentication</title>
      <link>https://edmondscommerce.github.io/security/google-apps-and-two-factor-authentication.html</link>
      <pubDate>Wed, 07 Nov 2012 10:22:34 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/security/google-apps-and-two-factor-authentication.html</guid>
      <description>&lt;p&gt;If you are using Google apps and have two factor authentication turned on then you are probably using the convenient &amp;ldquo;Remember this PC for 30 days&amp;rdquo; feature.&lt;/p&gt;

&lt;p&gt;If you like your browser to forget every thing except a very select set of data (bookmarks, etc.) but keep the convenience of the 30 day authentication then you only need to keep the cookie called &amp;ldquo;SMSV&amp;rdquo; for the domain &amp;ldquo;www.google.com&amp;rdquo; with path &amp;ldquo;/a&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;There is a variety of ways you can keep this cookie. You could, for example, export it then import it when ever (and where ever) you need it.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>