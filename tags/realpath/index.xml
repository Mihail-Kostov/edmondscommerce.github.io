<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Realpath on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/tags/realpath/</link>
    <description>Recent content in Realpath on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Aug 2012 13:43:30 +0000</lastBuildDate>
    <atom:link href="http://example.com/tags/realpath/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PHP Realpath for None Existant Paths</title>
      <link>http://example.com/php/php-realpath-for-none-existant-paths.html</link>
      <pubDate>Wed, 08 Aug 2012 13:43:30 +0000</pubDate>
      
      <guid>http://example.com/php/php-realpath-for-none-existant-paths.html</guid>
      <description>&lt;p&gt;If you want the functionality of realpath, to take a path containing relative elements such as /../ then this little function is exactly what you are looking for.&lt;/p&gt;

&lt;p&gt;PHP&amp;rsquo;s built in realpath function will return false if the file or folder does not exist. Unfortunately when using complex paths then this can make debugging things a little complicated.&lt;/p&gt;

&lt;p&gt;To resolve this simply use this function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function normalizePath($path) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    return array_reduce(explode(&amp;#39;/&amp;#39;, $path), create_function(&amp;#39;$a, $b&amp;#39;, &amp;#39;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;			if($a === 0)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;				$a = &amp;quot;/&amp;quot;;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;			if($b === &amp;quot;&amp;quot; || $b === &amp;quot;.&amp;quot;)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;				return $a;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;			if($b === &amp;quot;..&amp;quot;)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;				return dirname($a);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;			return preg_replace(&amp;quot;/\/+/&amp;quot;, &amp;quot;/&amp;quot;, &amp;quot;$a/$b&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;		&amp;#39;), 0);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$path = dirname(__FILE__) . &amp;#39;/../../../folder/&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$path = normalizePath($path);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;echo $path; // /var/www/vhosts/domain.com/folder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>