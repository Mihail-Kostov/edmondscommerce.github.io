<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pdo on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/pdo/</link>
    <description>Recent content in Pdo on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 May 2013 17:39:35 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/pdo/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PHP PDO Fetch Object and Columns with Spaces</title>
      <link>https://edmondscommerce.github.io/php/php-pdo-fetch-object-and-columns-with-spaces.html</link>
      <pubDate>Fri, 24 May 2013 17:39:35 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/php-pdo-fetch-object-and-columns-with-spaces.html</guid>
      <description>&lt;p&gt;If you use PDO and Fetch Object, it might not be clear exactly to access row properties that are based on columns that have spaces.&lt;/p&gt;

&lt;p&gt;I know I searched for things like:&lt;/p&gt;

&lt;p&gt;PDO Columns with spaces
PDO::fetchObject spaces
and PDO spaces in column names&lt;/p&gt;

&lt;p&gt;I eventually found what I was looking for in the depths of the PHP.net comments however hopefully this post will be a little bit easier to find thanks to a bit of primitive SEO up there.&lt;/p&gt;

&lt;p&gt;The solution to using columns with spaces is simply this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$sql=&amp;quot;select * from table_with_spaces_in_column_names &amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$statement = $myPDOObject-&amp;gt;prepare($sql);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$statement-&amp;gt;execute();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$row = $statement-&amp;gt;fetchObject();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$ColumnWithSpaces = $row-&amp;gt;{&amp;#39;Column With Spaces&amp;#39;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>PHPUnit and PDOException &#43; Solution</title>
      <link>https://edmondscommerce.github.io/php/phpunit-and-pdoexception-solution.html</link>
      <pubDate>Thu, 01 Nov 2012 12:30:21 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/phpunit-and-pdoexception-solution.html</guid>
      <description>&lt;p&gt;I recently needed to run a test suite against a couple of classes that were making use of PDO.&lt;/p&gt;

&lt;p&gt;When I tried to run the I got the following errors in the output for every test&lt;/p&gt;

&lt;p&gt;PDOException: You cannot serialize or unserialize PDO instances&lt;/p&gt;

&lt;p&gt;There is a quick way around this you just need to add the following lines to the class level doc block&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * @backupGlobals disabled&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * @backupStaticAttributes disabled&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A full explanation of these, and other annotations can be found &lt;a title=&#34;PHP Unit Appendix B. Annotations&#34; href=&#34;http://www.phpunit.de/manual/current/en/appendixes.annotations.html&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>