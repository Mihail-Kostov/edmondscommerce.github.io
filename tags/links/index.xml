<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Links on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/links/</link>
    <description>Recent content in Links on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Jan 2012 19:43:24 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/links/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Unable to do string comparisions on Magento Urls [Solution]</title>
      <link>https://edmondscommerce.github.io/magento/unable-to-do-string-comparisions-on-magento-urls-solution.html</link>
      <pubDate>Tue, 17 Jan 2012 19:43:24 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/unable-to-do-string-comparisions-on-magento-urls-solution.html</guid>
      <description>&lt;p&gt;I have been making a mwnu system for magento that would allow a client to add extra links to CMS page to top menu through a static block. One of the requirements was when you clicked the link the menu should display as active.&lt;/p&gt;

&lt;p&gt;To do this I extended the Category_Navigation Block so it would get the content of the static block and then check each href against the current url. If they matched then it would add the active class to the menu structure. This worked perfectly when running locally, so I pushed it to our staging site where it broke.&lt;/p&gt;

&lt;p&gt;Assuming that there was a difference with the url structure on the stagin site that I hadn&amp;rsquo;t anticipated, I echoed out the link variables and compared them, but they looked identical. Thinking there may be spacing that had snuck past trim, I var_dumped them and again they looked identical, apart for the fact that the character count was different.&lt;/p&gt;

&lt;p&gt;After much messing around I came to two conclusions. Firstly Magento will append a session id to urls if you&amp;rsquo;re using multi-store, and far more importantly, this extra information is not displayed if you var_dump the variable. I finally found this by turning the string into an array and echoing each character onto a new line, like so&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$link = $this-&amp;gt;getUrl();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;// outputs http://www.example.com/index.php&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;var_dump($link);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$array = preg_split(&amp;#39;//&amp;#39;, $link, -1);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($array as $char) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;// simplified replace with print($char.&amp;quot;\n&amp;quot;) to get each character on a new line&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;print($char);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;// outputs http://www.example.com/index.php?___SID=U&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To solve this replace your link with the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$link = preg_replace(&amp;#39;%\?.*%&amp;#39;, &amp;#39;&amp;#39;, $this-&amp;gt;getLink());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and it will work the way that you expect.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL Performance Tuning</title>
      <link>https://edmondscommerce.github.io/mysql/mysql-performance-tuning.html</link>
      <pubDate>Mon, 16 Jan 2012 10:44:36 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/mysql/mysql-performance-tuning.html</guid>
      <description>&lt;p&gt;Just came across &lt;a href=&#34;http://forums.mysql.com/read.php?24,92131,92131&#34;&gt;this forum post&lt;/a&gt; of MySQL that looks to be a gold mine of information related to performance tuning MySQL.&lt;/p&gt;

&lt;p&gt;For reference I am copying and pasting the full thing here though all credit goes to the above.&lt;/p&gt;

&lt;p&gt;Book: High Performance MySQL (2nd Edition)
&lt;a href=&#34;http://www.highperfmysql.com/&#34;&gt;http://www.highperfmysql.com/&lt;/a&gt;
MySQL Performance Tuning - Best Practices:
&lt;a href=&#34;http://jpipes.com/presentations/perf_tuning_best_practices.pdf&#34;&gt;http://jpipes.com/presentations/perf_tuning_best_practices.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MySQL Index Tuning and Coding Techniques for Optimal Performance:
&lt;a href=&#34;http://jpipes.com/presentations/index_coding_optimization.pdf&#34;&gt;http://jpipes.com/presentations/index_coding_optimization.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Web Performance and Scalability with MySQL:
&lt;a href=&#34;http://develooper.com/talks/&#34;&gt;http://develooper.com/talks/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PHP Applications: 120 Performance Tuning screws for MySQL
&lt;a href=&#34;http://blog.ulf-wendel.de/?p=268&#34;&gt;http://blog.ulf-wendel.de/?p=268&lt;/a&gt;
&lt;a href=&#34;http://blog.ulf-wendel.de/?p=163&#34;&gt;http://blog.ulf-wendel.de/?p=163&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MySQL Server Variables
&lt;a href=&#34;http://forge.mysql.com/wiki/ServerVariables&#34;&gt;http://forge.mysql.com/wiki/ServerVariables&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MySQL Server Variables - SQL layer or Storage Engine specific
&lt;a href=&#34;http://www.mysqlperformanceblog.com/2006/06/08/mysql-server-variables-sql-layer-or-storage-engine-specific/&#34; target=&#34;_blank&#34;&gt;http://www.mysqlperformanceblog.com/2006/06/08/mysql-server-variables-sql-layer-or-storage-engine-specific/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;“Show profile” + “Information_schema.profiling”
&lt;a href=&#34;http://blogs.mysql.com/peterg/2008/11/06/show-profile-information_schemaprofiling/&#34;&gt;http://blogs.mysql.com/peterg/2008/11/06/show-profile-information_schemaprofiling/&lt;/a&gt;
PeterZ presentations:
&lt;a href=&#34;http://www.mysqlperformanceblog.com/mysql-performance-presentations/&#34;&gt;http://www.mysqlperformanceblog.com/mysql-performance-presentations/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using MMM to ALTER huge tables
&lt;a href=&#34;http://www.mysqlperformanceblog.com/2008/03/27/using-mmm-to-alter-huge-tables/&#34;&gt;http://www.mysqlperformanceblog.com/2008/03/27/using-mmm-to-alter-huge-tables/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MySQL File System Fragmentation Benchmarks
&lt;a href=&#34;http://www.mysqlperformanceblog.com/2008/03/21/mysql-file-system-fragmentation-benchmarks/&#34;&gt;http://www.mysqlperformanceblog.com/2008/03/21/mysql-file-system-fragmentation-benchmarks/&lt;/a&gt;
&lt;a href=&#34;http://www.mysqlperformanceblog.com/2008/03/18/working-with-many-files-and-file-system-fragmentation/&#34;&gt;http://www.mysqlperformanceblog.com/2008/03/18/working-with-many-files-and-file-system-fragmentation/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finding/killing long running InnoDB transactions with Events
&lt;a href=&#34;http://www.markleith.co.uk/?p=730 &#34;&gt;&lt;a href=&#34;http://www.markleith.co.uk/?p=730&#34; target=&#34;_blank&#34;&gt;http://www.markleith.co.uk/?p=730&lt;/a&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using the event scheduler to purge the process list
&lt;a href=&#34;http://datacharmer.blogspot.com/2008/10/using-event-scheduler-to-purge-process.html&#34;&gt;http://datacharmer.blogspot.com/2008/10/using-event-scheduler-to-purge-process.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;kill_run_aways&lt;/code&gt; Stored Proc
&lt;a href=&#34;http://forge.mysql.com/tools/tool.php?id=106&#34;&gt;http://forge.mysql.com/tools/tool.php?id=106&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yoshinori: Tracking long running transactions in MySQL
&lt;a href=&#34;http://yoshinorimatsunobu.blogspot.com/2011/04/tracking-long-running-transactions-in.html&#34;&gt;http://yoshinorimatsunobu.blogspot.com/2011/04/tracking-long-running-transactions-in.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How to debug long-running transactions in MySQL
&lt;a href=&#34;http://www.mysqlperformanceblog.com/2011/03/08/how-to-debug-long-running-transactions-in-mysql/&#34;&gt;http://www.mysqlperformanceblog.com/2011/03/08/how-to-debug-long-running-transactions-in-mysql/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Remove Hard Coded URLs from Theme</title>
      <link>https://edmondscommerce.github.io/magento/magento-remove-hard-coded-urls-from-theme.html</link>
      <pubDate>Thu, 02 Sep 2010 14:14:18 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-remove-hard-coded-urls-from-theme.html</guid>
      <description>&lt;p&gt;If you are working on a theme, you may find that there are hard coded links dotted all over the place.&lt;/p&gt;

&lt;p&gt;This can make testing a site offline (and thereby not on the same URL) a bit of a pain.&lt;/p&gt;

&lt;p&gt;Here is a quick fix for you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Remove all hard coded links from the CMS section:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cms_block&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://www.domain.com/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{{store url=&amp;#39;&amp;#39;}}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cms_page&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://www.domain.com/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{{store url=&amp;#39;&amp;#39;}}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Remove all hard coded links from the theme files.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is a command line one using grep and sed.&lt;/p&gt;

&lt;p&gt;Firstly, cd into the root theme folder&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
cd app/design/frontent/default/hardtheme

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now find files with hard coded links&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
grep -rl &#39;http://www.domain.com&#39; ./

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now to automatically remove all those,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
grep -rl &#39;http://www.domain.com&#39; ./ | xargs sed -i &#39;s/http:\/\/domain.com\//&amp;lt;?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB);?&amp;gt;/&#39;

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>