<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/tags/development/</link>
    <description>Recent content in Development on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Oct 2013 10:53:15 +0000</lastBuildDate>
    <atom:link href="http://example.com/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Automatically convert old PHP file to camelCase </title>
      <link>http://example.com/bash/automatically-convert-old-php-file-to-camelcase.html</link>
      <pubDate>Thu, 17 Oct 2013 10:53:15 +0000</pubDate>
      
      <guid>http://example.com/bash/automatically-convert-old-php-file-to-camelcase.html</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently been working with an old project that uses a combination of different coding styles.&lt;/p&gt;

&lt;p&gt;One of the more trivial annoyances with this is that the variables used through the project are a combination of $camelCase and $snake_case which throws of the coding standards tools that I use.&lt;/p&gt;

&lt;p&gt;To get round this I have put a little script together that will convert $snake_case to $camelCase automatically.&lt;/p&gt;

&lt;p&gt;Obviously, you will need to check the results of this to make sure that there are not variables that should not be changed, but it has saved me a lot of time doing this manually.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve added this to my .bash_allias file, though it could easily be turned into a standalone script if required&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#Fix legacy code&lt;/span&gt;
 cammelCase&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   vim -E -s &lt;span class=&#34;nv&#34;&gt;$@&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;-EOF&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :%s#\%($\%(\k\+\)\)\@&amp;lt;=_\(\k\)#\u\1#g&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :update&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :quit&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
 
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Disable JavaScript alerts for a page</title>
      <link>http://example.com/javascript/disable-javascript-alerts-for-a-page.html</link>
      <pubDate>Wed, 28 Aug 2013 09:21:30 +0000</pubDate>
      
      <guid>http://example.com/javascript/disable-javascript-alerts-for-a-page.html</guid>
      <description>&lt;p&gt;If you encounter a webpage that is generating a lot of alerts, the following bookmark will prevent them from stealing focus but still allow you to see what is being said.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;javascript&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Side by Side diff on the command line</title>
      <link>http://example.com/bash/side-by-side-diff-on-the-command-line.html</link>
      <pubDate>Tue, 09 Jul 2013 17:25:18 +0000</pubDate>
      
      <guid>http://example.com/bash/side-by-side-diff-on-the-command-line.html</guid>
      <description>&lt;p&gt;I have recently discovered a handy trick when comparing files on the command line.&lt;/p&gt;

&lt;p&gt;Adding the -y command line options to diff will display the files side by side.&lt;/p&gt;

&lt;p&gt;Using this with the &lt;a href=&#34;http://www.colordiff.org/&#34; title=&#34;Color Diff&#34; target=&#34;_blank&#34;&gt;Color Diff&lt;/a&gt; tool will help you transform this&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://example.com/images/normal-diff.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To this&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://example.com/images/color-diff-600x200.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PrestaShop - Developer Notes</title>
      <link>http://example.com/prestashop/prestashop-developer-notes.html</link>
      <pubDate>Tue, 19 Mar 2013 17:47:26 +0000</pubDate>
      
      <guid>http://example.com/prestashop/prestashop-developer-notes.html</guid>
      <description>&lt;p&gt;PrestaShop is a fully featured shopping platform and offers much of the functionality that other eCommerce shopping platforms do. Compared to, for example, Magento PrestaShop is significantly simpler to develop for.&lt;/p&gt;

&lt;p&gt;Here is the run down of the key aspects that any one building a web site on PrestaShop should be aware of.&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;Modules&lt;/h2&gt;
PrestaShop is based around a modular design which is quite similar to Joomlas module system.
A modules presence and position on the front end is defined by hooking the module into a particular section on the frontend. There are loads of hooks that can be used. Most modules will add them selves to the hook they think is most appropriate on install. The ordering of modules also defines the order they appear in a given hook.
A key point of managing modules that can easily be over looked is that you can grab and drag modules in a given hook by clicking and holding the position change buttons.&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;Themes&lt;/h2&gt;
Off the shelf themes are usually not simply a new set of templates and CSS but also modules as well. Quite allot of themes are built around specific modules being in specific hooks some times in a specific order.&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;Creating your own module&lt;/h2&gt;
Defining your own module is really straight forward:
Create a folder in modules called my_module.
Create a file called my_module.php, in this file create a class called My_module which extends Module.
Create a config.xml with the following template:
&amp;lt;?xml version=&amp;ldquo;1.0&amp;rdquo; encoding=&amp;ldquo;UTF-8&amp;rdquo; ?&amp;gt;
&lt;module&gt;
    &lt;name&gt;my_module&lt;/name&gt;
    &lt;displayName&gt;My Module&lt;/displayName&gt;
    &lt;version&gt;1&lt;/version&gt;
    &lt;description&gt;A test module, it does nothing&lt;/description&gt;
    &lt;author&gt;My self&lt;/author&gt;
    &lt;tab&gt;front_office_features&lt;/tab&gt;
    &lt;is_configurable&gt;0&lt;/is_configurable&gt;
    &lt;need_instance&gt;1&lt;/need_instance&gt;
&lt;/module&gt;
Done, the module will appear in the module list but do nothing. You can look at the base module class to see all the function available that get called by PrestaShop are different times to do what you need to do.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bash timeout and copying text in vim</title>
      <link>http://example.com/bash/bash-timeout-and-copying-text-in-vim.html</link>
      <pubDate>Thu, 14 Mar 2013 12:59:42 +0000</pubDate>
      
      <guid>http://example.com/bash/bash-timeout-and-copying-text-in-vim.html</guid>
      <description>&lt;p&gt;I have been working with a server that had been configured differently from the way that I prefer.&lt;/p&gt;

&lt;p&gt;The two biggest complaints that I had about it were that the timeout was set very low, meaning that the connection would break off every five minutes, and that vim had been set up so if you selected text using the mouse you could not copy it.&lt;/p&gt;

&lt;p&gt;The solutions to these two problems are as follows.&lt;/p&gt;

&lt;p&gt;You can tell the terminal not to timeout with the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;TMOUT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Be aware that this will only work for the terminal that you are working with.&lt;/p&gt;

&lt;p&gt;The issue with vim is that the mouse was triggering visual mode.&lt;/p&gt;

&lt;p&gt;To get round this hold down shift when selecting text and everything will work as expected&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zend Certified Developers</title>
      <link>http://example.com/featured/zend-certified-developers.html</link>
      <pubDate>Mon, 25 Feb 2013 11:24:59 +0000</pubDate>
      
      <guid>http://example.com/featured/zend-certified-developers.html</guid>
      <description>&lt;p&gt;Edmonds Commerce employs a team of specialist PHP web developers who are all Zend Certified Engineers. This is a highly respected PHP qualification that ensures the highest standards of PHP development expertise. By achieving this certification we ensure that our developers have the kind of well rounded and deep understanding of the PHP language that can be utilised to achieve the highest quality production.&lt;/p&gt;

&lt;p&gt;All of the e-commerce platforms, such as Magento and OpenCart are written in PHP and so the first thing to be sure of when you have a developer working on your projects is that they are very skilled in PHP itself as well as having an expert knowledge of the platform.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://example.com/images/screenshot-thumb3.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can read all about the &lt;a href=&#34;http://www.zend.com/services/certification/php-5-certification/&#34; title=&#34;ZCE information&#34; target=&#34;_blank&#34;&gt;ZCE exam here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a nutshell the exam is designed to test knowledge and skill that a professional PHP developer would need to tackle the kind of day to day issues they are likely to face. The exam covers a broad range of topics and really tests the in depth and broad knowledge of PHP that is required to really get the most out of the language and deliver the highest quality PHP development.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento No Search Results</title>
      <link>http://example.com/magento/magento-no-search-results.html</link>
      <pubDate>Wed, 13 Feb 2013 16:46:00 +0000</pubDate>
      
      <guid>http://example.com/magento/magento-no-search-results.html</guid>
      <description>&lt;p&gt;Sometimes Magento will some times return no results with the message &amp;ldquo;Your search returns no results&amp;rdquo; for terms that you would expect it to return many results for.
This can happen for a number of reasons including misconfiguration of search or attributes.&lt;/p&gt;

&lt;p&gt;Unfortunately the way Magento speeds up search queries suffers from a race condition that can lead Magento to think it has cached a query when it has not and at the same time believes there are no products for that search because the cache for that query was dropped. This is a tough issue to solve but it can be done.&lt;/p&gt;

&lt;p&gt;The two methods that work effectively to resolve the race condition problem (thus far) are to first make sure that the query cache isn&amp;rsquo;t empty before using the cached results. This works effectively because if the cache is empty it must have been dropped recently and has not been repopulated.
The other thing you can do to help reduce this further is to make Magento remembers the time at which it dropped. Then have the query caches compare their last updated time against the the last cache drop time and if the update time is before or the same as the drop time don&amp;rsquo;t use the cache.
If this isn&amp;rsquo;t completely effective it is also possible to make it not use the query cache if the time of update and the time of drop are with in a minuet of each other to help reduce this further.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQLSTATE[28000]: Invalid authorization specification: 1045 Access denied for user &#43; Solution</title>
      <link>http://example.com/mysql/sqlstate28000-invalid-authorization-specification-1045-access-denied-for-user-solution.html</link>
      <pubDate>Tue, 12 Feb 2013 18:03:29 +0000</pubDate>
      
      <guid>http://example.com/mysql/sqlstate28000-invalid-authorization-specification-1045-access-denied-for-user-solution.html</guid>
      <description>&lt;p&gt;I have recently been running some MySql scripts that wrote to a file.&lt;/p&gt;

&lt;p&gt;These worked fine locally, but as soon as I deployed them I started to get the error above.&lt;/p&gt;

&lt;p&gt;After much looking around I came across this solution.&lt;/p&gt;

&lt;p&gt;When I was developing locally, I was connecting with a user that had global privileges. When I was running the code on the server I was connecting with a user that only had privileges for the database I was using.&lt;/p&gt;

&lt;p&gt;The issue is that then FILE privilege is a Global setting, so the user did not have access to it, hence the access denied message.&lt;/p&gt;

&lt;p&gt;Grant FILE privileges and you can connect as expected&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reading JSON without Reading JSON!</title>
      <link>http://example.com/programming/reading-json-without-reading-json.html</link>
      <pubDate>Fri, 08 Feb 2013 16:16:19 +0000</pubDate>
      
      <guid>http://example.com/programming/reading-json-without-reading-json.html</guid>
      <description>&lt;p&gt;JSON is a well structure interoperable way of passing data between systems. It&amp;rsquo;s a good way of passing large amount of data into a web page for JavaScript to process and between system on the internet regardless of there architecture or programming language.&lt;/p&gt;

&lt;p&gt;JSON is one of the hardest data structure to read directly as a human in it&amp;rsquo;s RAW format compared to other formal grammars such as XML, YAML or ini.&lt;/p&gt;

&lt;p&gt;Fortunately there is an easy trick that you can do with Chrome, Firefox with Firebug and even Opera and IE9!&lt;/p&gt;

&lt;p&gt;Take the JSON you have, wrap it in &amp;ldquo;eval()&amp;rdquo; the same as you would if you where writing a web page (because it is just JavaScript after all) run it and every modern browser this was tested with should allow you to inspect the resulting data structure.&lt;/p&gt;

&lt;p&gt;Example JSON:
&lt;code&gt;
{&amp;ldquo;glossary&amp;rdquo;:{&amp;ldquo;title&amp;rdquo;:&amp;ldquo;example glossary&amp;rdquo;,&amp;ldquo;GlossDiv&amp;rdquo;:{&amp;ldquo;title&amp;rdquo;:&amp;ldquo;S&amp;rdquo;,&amp;ldquo;GlossList&amp;rdquo;:{&amp;ldquo;GlossEntry&amp;rdquo;:{&amp;ldquo;ID&amp;rdquo;:&amp;ldquo;SGML&amp;rdquo;,&amp;ldquo;SortAs&amp;rdquo;:&amp;ldquo;SGML&amp;rdquo;,&amp;ldquo;GlossTerm&amp;rdquo;:&amp;ldquo;Standard Generalized Markup Language&amp;rdquo;,&amp;ldquo;Acronym&amp;rdquo;:&amp;ldquo;SGML&amp;rdquo;,&amp;ldquo;Abbrev&amp;rdquo;:&amp;ldquo;ISO 8879:1986&amp;rdquo;,&amp;ldquo;GlossDef&amp;rdquo;:{&amp;ldquo;para&amp;rdquo;:&amp;ldquo;A meta-markup language, used to create markup languages such as DocBook.&amp;rdquo;,&amp;ldquo;GlossSeeAlso&amp;rdquo;:[&amp;ldquo;GML&amp;rdquo;,&amp;ldquo;XML&amp;rdquo;]},&amp;ldquo;GlossSee&amp;rdquo;:&amp;ldquo;markup&amp;rdquo;}}}}}
&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
Firefox with Firebug:
![Image](/images/firefoxjson-600x328.png)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
Chrome:
![Image](/images/chromejson-600x313.png)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
Opera:
![Image](/images/bhtAjti.png)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
Internet Explorer 9:
Note: To see this structure you need to click the &#34;Add watcher&#34; link displayed upon running the code.
![Image](/images/ie9json.png)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Git and Sub Module Tips</title>
      <link>http://example.com/git/git-and-sub-module-tips.html</link>
      <pubDate>Thu, 24 Jan 2013 17:40:20 +0000</pubDate>
      
      <guid>http://example.com/git/git-and-sub-module-tips.html</guid>
      <description>&lt;p&gt;Using sub modules in git is incredibly useful and allows for easier and more flexible working when working on component based large projects. In a nut shell the use of sub modules (as the name suggests) allows you to include a git repository as a part of another git repository in order to allow you to use the sub modules code without having to duplicate it&amp;rsquo;s content in to your repository.&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;Important commands you will need when working with sub modules&lt;/h4&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;b&gt;git submodule init&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;This tells git to read the modules file and make your local repository aware of any sub modules. When you checkout a repository that uses sub modules nothing is done with them until you do this. You will need to run this at least after cloning a repo but possibly after pulling if new sub modules are added.&lt;/dd&gt;
&lt;dt&gt;&lt;b&gt;git submodule update&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;This makes git to update the sub modules to match what the config says it should be. You will probably need this after cloning a repository for the first time or when you pull changes from a remote as some one may have updated the position of the sub module. When running this you should make sure that you don&amp;rsquo;t have any uncommitted changes in any submodules other wise you will lose them and find it hard to retrieve them.&lt;/dd&gt;
&lt;dt&gt;&lt;b&gt;git submodule add absolute_path/url_to_repo location_of_repo_in_project&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;This command tells git to add the repository at the specified URL/path to the repository. Git will add it to the modules file. After adding it you need to commit. The path to the repo either needs to be the absolute path if you are working locally or the URL that is accessible via the Internet/LAN depending on your environment. It has to be like this so that it doesn&amp;rsquo;t matter where the repository that will be cloning the sub module is located&lt;/dd&gt;
&lt;dt&gt;&lt;b&gt;git help submodule&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;Gives you the man page for the submodule command, an invaluable resource&lt;/dd&gt;
&lt;/dl&gt;&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;Key facts when working with sub modules&lt;/h4&gt;
&lt;h5&gt;Working in sub modules&lt;/h5&gt;
If you want to modify contents of the sub module, that is make changes and commit them back to the sub modules repository, you can work just as normal. The only thing to watch out off is that when you first do &lt;em&gt;git submodule init; git submodule update;&lt;/em&gt; it will checkout what ever commit was specified. This means that the sub module might not be on an actual branch but instead only have a particular commit checkout. Make sure to checkout the relevant branch on the sub module before commencing work.&lt;/p&gt;

&lt;p&gt;&lt;h5&gt;Updating a sub modules position on a remote repo&lt;/h5&gt;
When &lt;em&gt;git submodule update&lt;/em&gt; runs it checkouts out the specified commit by the main repository. If there is no commit specified it will checkout the default branch (usually master). If you want it to checkout a specific branch this cannot be done in a literal sense. Instead what you have to do is checkout the top commit of that branch, then commit the changes to the sub module in main repository. This will ensure that the sub module is now at that position when &lt;em&gt;git submodule update&lt;/em&gt; is run. You will have to do this every time you want to update it&amp;rsquo;s position.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux Sun Java repo</title>
      <link>http://example.com/linux/linux-sun-java-repo.html</link>
      <pubDate>Tue, 15 Jan 2013 10:58:24 +0000</pubDate>
      
      <guid>http://example.com/linux/linux-sun-java-repo.html</guid>
      <description>&lt;p&gt;Recently I setup a machine with Linux Mint.&lt;/p&gt;

&lt;p&gt;One of the things that was I needed to install was an up to date version of Sun Java. However, for various reasons, this no longer appears in the official repos.&lt;/p&gt;

&lt;p&gt;Thankfully there is a different repo available here &lt;a href=&#34;http://www.duinsoft.nl/packages.php?t=en&#34; title=&#34;http://www.duinsoft.nl/packages.php?t=en&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.duinsoft.nl/packages.php?t=en&#34; target=&#34;_blank&#34;&gt;http://www.duinsoft.nl/packages.php?t=en&lt;/a&gt;&lt;/a&gt; where you can download the latest version and ensure that it is updated&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Firefox and Responsive Web Design</title>
      <link>http://example.com/css/firefox-and-responsive-web-design.html</link>
      <pubDate>Thu, 10 Jan 2013 12:16:28 +0000</pubDate>
      
      <guid>http://example.com/css/firefox-and-responsive-web-design.html</guid>
      <description>&lt;p&gt;Responsive web design is an excellent way to make a site work really well for a variety of different screen sizes without having to serve more than one design to users. Responsive web design does pose additional challenges however.&lt;/p&gt;

&lt;p&gt;Some of the challenges for you, as the developer, are being able to implement, test and debug the design implementation. Fortunately built in to Firefox&amp;rsquo;s arsenal of developer tools is an interface for exactly that!&lt;/p&gt;

&lt;p&gt;Lets take a website that uses a responsive design:
&lt;img src=&#34;http://example.com/images/large-no-tools-600x396.png&#34; alt=&#34;Image&#34; /&gt;
Here is the &amp;lsquo;mobile&amp;rsquo; view:&lt;img src=&#34;http://example.com/images/small-no-tools.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So every thing is normal you can use the developer tools and Firebug or whatever. If you then need to make changes to the smaller version and use Firebug you would have to pop out Firebug (which may or may not be to your preference) then resize the main window. This works ok but Firebug currently isn&amp;rsquo;t great for working with responsive designs as it doesn&amp;rsquo;t show you all the rules that might apply based on the screen size and other conditions. This is one area that the Firefox built in tools beat Firebug. The styles editor shows you all rules that could apply and their conditions.&lt;/p&gt;

&lt;p&gt;To activate Firefox&amp;rsquo;s responsive design view press Ctrl + Shift + M. You can open the inspector and stlyes by pressing Ctrl + Shift + I. You can also access the responsive design view by going to Tools &amp;gt; Web Developer. With responsive design view enabled you can still use Firebug without a problem, unless you enable the built in element inspector then you kind of lose loads of screen space.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://example.com/images/small-tools-600x447.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Uploading Multiple Files - Nothing in _POST, _FILES or _REQUEST &#43;Solution</title>
      <link>http://example.com/php/uploading-multiple-files-nothing-in-_post-_files-or-_request-solution.html</link>
      <pubDate>Mon, 17 Dec 2012 15:27:14 +0000</pubDate>
      
      <guid>http://example.com/php/uploading-multiple-files-nothing-in-_post-_files-or-_request-solution.html</guid>
      <description>&lt;p&gt;When you&amp;rsquo;re uploading multiple files (HTML5 feature - remember IE as yet STILL does not support this), it may not be the fact you&amp;rsquo;re uploading multiple files that&amp;rsquo;s actually causing the problem.&lt;/p&gt;

&lt;p&gt;The problem often is actually caused by the various php memory limits in play, one way to avoid getting caught by this is using the following snippet in the form&amp;rsquo;s php to remind you which restrictions are in play (note the min_by_key() function is from the php.net comments) :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;min_by_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arr&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;is_array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$min2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;min_by_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$min2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;is_array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;array_keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;upload_max_filesize&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;intval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ini_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;upload_max_filesize&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;post_max_size&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;intval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ini_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;post_max_size&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;memory_limit&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;intval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ini_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;memory_limit&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$maxUploadSize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$minimumOfThree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;p&amp;gt;Max filesize &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$maxUploadSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;M Maximum filesize due to server setting &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$minimumOfThree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt; in php.ini&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>PHPMD and Special Circumstances for Surprising Issues</title>
      <link>http://example.com/php/phpmd-and-special-circumstances-for-surprising-issues.html</link>
      <pubDate>Fri, 07 Dec 2012 16:23:35 +0000</pubDate>
      
      <guid>http://example.com/php/phpmd-and-special-circumstances-for-surprising-issues.html</guid>
      <description>&lt;p&gt;PHPMD is useful as it helps keep coding problems to a minimum. There are some esoteric circumstances where it will flag up issues that while they are issues there is no good way to avoid them.&lt;/p&gt;

&lt;p&gt;Consider the following code block which is overriding a method from a parent class:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ExportSpecial&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Export&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getOrderItemValues&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$order&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$itemInc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With this PHPMD will flag the three unused parameters as an issue.
This is correct because they are unused however it&amp;rsquo;s also incorrect because in this instance the overriding method must accept these parameters to prevent a strict error.
This is one of the limited set of instances where suppressing the issues that PHPMD finds would be correct.
To do this you use the @SuppressWarnings option on the comments block above the method definition. There are many options that are suppressible within PHPMD, the list of errors to suppressible rules can be found here: &lt;a href=&#34;http://phpmd.org/rules/index.html&#34;&gt;http://phpmd.org/rules/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So in the previous example the following change could be made to stop PHPMD flagging the erroneous issue.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ExportSpecial&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Export&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;sd&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     * @SuppressWarnings(PHPMD.UnusedFormalParameter)&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;     */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getOrderItemValues&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$order&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$itemInc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Solution: Magento Catalog URL Rewrites Never Finishes (processing)</title>
      <link>http://example.com/magento/solution-magento-catalog-url-rewrites-never-finishes-processing.html</link>
      <pubDate>Wed, 05 Dec 2012 17:27:51 +0000</pubDate>
      
      <guid>http://example.com/magento/solution-magento-catalog-url-rewrites-never-finishes-processing.html</guid>
      <description>&lt;p&gt;In &lt;a title=&#34;Magento&#34; href=&#34;http://www.edmondscommerce.co.uk/platforms/Magento&#34;&gt;Magento&lt;/a&gt; 1.4.2 and possibly other versions, you can often find that the Catalog URL Rewrite process will sit at Processing forever.&lt;/p&gt;

&lt;p&gt;One of the problems that can cause this is if you have products in multiple categories and the solution is not pretty, but it works.&lt;/p&gt;

&lt;p&gt;Copy the file /app/code/core/Mage/Catalog/Model/Url.php to /app/code/local/Mage/Catalog/Model/Url.php (You never edit core files right?!) and around line 770 there is the following code block :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;        // generate id_path&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (&amp;#39;id&amp;#39; === $type) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if (!$product) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;category/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if ($category &amp;amp;&amp;amp; $category-&amp;gt;getLevel() &amp;gt; 1) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId() . &amp;#39;/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Changing this to the following seems to fix the problem :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;        // generate id_path&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (&amp;#39;id&amp;#39; === $type) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if (!$product) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;category/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if ($category &amp;amp;&amp;amp; (count(explode(&amp;#39;/&amp;#39;, $category-&amp;gt;getPath())) - 1) &amp;gt; 1) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId() . &amp;#39;/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>