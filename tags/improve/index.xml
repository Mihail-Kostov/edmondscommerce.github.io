<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Improve on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/tags/improve/</link>
    <description>Recent content in Improve on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Dec 2012 12:21:44 +0000</lastBuildDate>
    <atom:link href="http://example.com/tags/improve/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Magento Block Caching Cache Key Helper Method - Generate Safe Unique Cache Keys</title>
      <link>http://example.com/magento/magento-block-caching-cache-key-helper-method-generate-safe-unique-cache-keys.html</link>
      <pubDate>Tue, 04 Dec 2012 12:21:44 +0000</pubDate>
      
      <guid>http://example.com/magento/magento-block-caching-cache-key-helper-method-generate-safe-unique-cache-keys.html</guid>
      <description>&lt;p&gt;If you do any work at all on Magento performance optimisation with a view to making pages load faster then you must have come across block caching. To understand block caching you need to first of all understand that a Magento page is actually made up of a lot of nested chunks called blocks.&lt;/p&gt;

&lt;p&gt;Blocks can have their HTML generated dynamically every time though it is also possible to make Magento cache the block HTML output so that it loads a LOT faster, especially with heavy and slow blocks such as best sellers etc.&lt;/p&gt;

&lt;p&gt;When setting up block caching, you need to specify a cache key. If your cache key is not unique enough then there is a risk that you will display the wrong cache for a particular scenario.&lt;/p&gt;

&lt;p&gt;For this reason I created a block caching helper with this method that can generate a very unique cache key based on the current block usage.
/app/code/local/EdmondsCommerce/Helper/Data.php&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * Generate a nice unique block cache key&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param Mage_Core_Block_Abstract $block&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @return string&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public function ecCacheKey(Mage_Core_Block_Abstract $block){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $class = get_class($block);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $template = $block-&amp;gt;getTemplateFile();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $md5 = md5(var_export($block-&amp;gt;getData(), true));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $params = trim(implode(&amp;quot;,&amp;quot;, $block-&amp;gt;getRequest()-&amp;gt;getParams()), &amp;#39;,&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $category=($block-&amp;gt;getCurrentCategory())?$block-&amp;gt;getCurrentCategory()-&amp;gt;getName():&amp;#39;no-category&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $store_id = Mage::app()-&amp;gt;getStore()-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        return &amp;#39;edmondscommerce-&amp;#39;. $params . &amp;#39;-&amp;#39;. $category . &amp;#39;-&amp;#39; . $store_id . &amp;#39;-&amp;#39; . $class.&amp;#39;-&amp;#39;.$template.&amp;#39;-&amp;#39;.$md5;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You would use this in the following way:&lt;/p&gt;

&lt;p&gt;In a block class, set up the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;    public function _construct(){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        parent::_construct();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;addData(array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &amp;#39;cache_lifetime&amp;#39; =&amp;gt; 999999999,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &amp;#39;cache_tags&amp;#39; =&amp;gt; array(Mage_Catalog_Model_Product::CACHE_TAG, Mage_Catalog_Model_Category::CACHE_TAG),&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &amp;#39;cache_key&amp;#39; =&amp;gt; Mage::helper(&amp;#39;blockcaching&amp;#39;)-&amp;gt;ecCacheKey($this)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        ));&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Optimised Hosting</title>
      <link>http://example.com/magento/magento-optimised-hosting.html</link>
      <pubDate>Thu, 15 Sep 2011 07:17:03 +0000</pubDate>
      
      <guid>http://example.com/magento/magento-optimised-hosting.html</guid>
      <description>&lt;p&gt;Edmonds Commerce have been with Magento since the beginning. If you would like us to optimise your VPS or dedicated server for Magento then please &lt;a href=&#34;http://example.com/contact-us/&#34;&gt;get in touch today&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Back then the speed of Magento was one of its main drawbacks. Since that time, the code has improved a lot and things have generally got a lot better but one thing that has become clear over the years is that Magento really does require a well optimised hosting platform to perform the best. Conversely, hosting Magento on a badly configured or none optimised hosting stack will have a really detrimental effect on the performance of the store.&lt;/p&gt;

&lt;p&gt;If you are using shared hosting then you are a bit stuck. Magento optimised shared hosting is available and there are some good companies out there that we would be happy to recommend for you. If your current store is not performing well though and you are on shared hosting then the likelihood is that the only solution is to either upgrade to some kind of dedicated or virtual private server, commonly shortened to VPS.&lt;/p&gt;

&lt;p&gt;A VPS or VDS as they are some times called is what is known as a virtual machine. It is a full instance of an operating system (Linux) running on hardware that is actually running multiple virtual machines from one real server. In some respects this is like shared hosting, however the difference is that on a VPS you have a fully dedicated, private and customisable operating system that can be configured and optimised as required.&lt;/p&gt;

&lt;p&gt;Of course if you have a real dedicated server then you have the same benefits of a VPS and also enjoy dedicated hardware.&lt;/p&gt;

&lt;p&gt;Either way, as soon as you have a dedicated operating system you are free to configure your database, web server and PHP however you wish. Generally though this is too technical for most people. This is where we come in.&lt;/p&gt;

&lt;p&gt;We are happy to provide for you a full VPS or dedicated server Magento optimisation service. Our Magento hosting optimisation service will ensure you are getting the best out of your current hosting package. It means that you are not required to move hosts if you are generally happy them, but you can be assured that you are running on a highly optimised Magento stack.&lt;/p&gt;

&lt;p&gt;If that sounds interesting and you would like to discuss this in more detail, simply &lt;a href=&#34;http://example.com/contact-us/&#34;&gt;get in touch today&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>