<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Solution on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/solution/</link>
    <description>Recent content in Solution on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Jan 2017 14:17:19 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/solution/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Mysql Password Expiry - How to Resolve and Then Disable</title>
      <link>https://edmondscommerce.github.io/mysql-password-expiry---how-to-resolve-and-then-disable/</link>
      <pubDate>Mon, 16 Jan 2017 14:17:19 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/mysql-password-expiry---how-to-resolve-and-then-disable/</guid>
      <description>&lt;p&gt;I recently had the issue that the root user for a MySQL installation had their password expire.&lt;/p&gt;

&lt;p&gt;Apparently this is a fairly new MySQL feature which is designed to improve security and assist with meeting PCI-DSS requirements. However for this development box, it is not really necessary so I would prefer to disable.&lt;/p&gt;

&lt;p&gt;The issue became apparent when trying to log into phpmyadmin and seeing the error message: &amp;ldquo;#1862 - Your password has expired. To log in you must change it using a client that supports expired passwords.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;On the command line the confusing thing is that you can log in, only when you run a query such as &lt;code&gt;show databases;&lt;/code&gt; do you then get the error message:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; show databases;
ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So to fix this, firstly you can just reset your password back to the same one you were already using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set password = password(&#39;mySecretPass&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then to disable this you can use this query:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alter user &#39;root&#39;@&#39;localhost&#39; password expire never;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Lenovo Carbon X1 Fedora 24 Wifi Issues &#43; Solution</title>
      <link>https://edmondscommerce.github.io/lenovo-carbon-x1-fedora-24-wifi-issues-&#43;-solution/</link>
      <pubDate>Wed, 20 Jul 2016 19:28:43 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/lenovo-carbon-x1-fedora-24-wifi-issues-&#43;-solution/</guid>
      <description>&lt;p&gt;So my new Lenovo ultrabook is very nice, but trying to transfer a database dump over SCP was failing, every, time.&lt;/p&gt;

&lt;p&gt;In my trade, transferring large files around is pretty much a requirement so I had to find a solution. A lot of Googling later and I did the following that seemed to fix it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo bash -c &lt;span class=&#34;s1&#34;&gt;&amp;#39; echo &amp;quot;options iwlwifi 11n_disable=1&amp;quot;  &amp;gt;&amp;gt;  /etc/modprobe.d/iwlwifi.conf &amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In order to test if the above fix works, I wrote this little script and placed in my ~/bin directory (called fixwifi)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env bash
echo &amp;quot;f******g linux wifi...&amp;quot;
sudo bash -c &amp;quot;modprobe -r iwlmvm; modprobe -r iwlwifi; modprobe iwlwifi 11n_disable=1; modprobe iwlmvm&amp;quot;
echo &amp;quot;sorted&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Something else I did which I&amp;rsquo;m not sure if it has helped is to symlink the firmware specified in &lt;code&gt;modinfo iwlwifi&lt;/code&gt; to what seems to be a more up to date verion.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[joseph@josephlaptop ~] $ ll /lib/firmware/ | grep 8000C
lrwxrwxrwx. 1 root root      22 Jul 20 17:06 iwlwifi-8000C-13.ucode -&amp;gt; iwlwifi-8000C-21.ucode
-rw-r--r--. 1 root root 1745176 Jul 20 17:05 iwlwifi-8000C-13.ucode.bak
-rw-r--r--. 1 root root 2351636 Jun  9 14:17 iwlwifi-8000C-16.ucode
-rw-r--r--. 1 root root 2394060 Jun  9 14:17 iwlwifi-8000C-21.ucode
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When I did this, things did seem to improve but its hard to know if its just a coincidence. Its working fine now though so I&amp;rsquo;m leaving it that way.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve now repeatedly transferred large amounts of data using SCP and it has worked fine every time, so regarding this as solved :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Disable JavaScript alerts for a page</title>
      <link>https://edmondscommerce.github.io/javascript/disable-javascript-alerts-for-a-page.html</link>
      <pubDate>Wed, 28 Aug 2013 09:21:30 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/javascript/disable-javascript-alerts-for-a-page.html</guid>
      <description>&lt;p&gt;If you encounter a webpage that is generating a lot of alerts, the following bookmark will prevent them from stealing focus but still allow you to see what is being said.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;javascript&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>MySQL Substring not Returning Anything &#43; Solution</title>
      <link>https://edmondscommerce.github.io/mysql/mysql-substring-not-returning-anything-solution.html</link>
      <pubDate>Tue, 20 Aug 2013 10:54:20 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/mysql/mysql-substring-not-returning-anything-solution.html</guid>
      <description>&lt;p&gt;If you are puzzled why your simple usage of the MySQL SUBSTRING() function is not returning anything this could be your solution.&lt;/p&gt;

&lt;p&gt;The substring function allows you to specify a string (eg a column), the start character and the length. If you are used to languages like PHP then you are probably used to this kind of function regarding 0 as the starting character. In fact this function regards 1 as the starting character. If you specify 0 then you simply won&amp;rsquo;t get any results.&lt;/p&gt;

&lt;p&gt;This does not work:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
SELECT SUBSTRING(column, 0, 10) as tenchars

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This does work:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
SELECT SUBSTRING(column, 1, 10) as tenchars

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Side by Side diff on the command line</title>
      <link>https://edmondscommerce.github.io/bash/side-by-side-diff-on-the-command-line.html</link>
      <pubDate>Tue, 09 Jul 2013 17:25:18 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash/side-by-side-diff-on-the-command-line.html</guid>
      <description>&lt;p&gt;I have recently discovered a handy trick when comparing files on the command line.&lt;/p&gt;

&lt;p&gt;Adding the -y command line options to diff will display the files side by side.&lt;/p&gt;

&lt;p&gt;Using this with the &lt;a href=&#34;http://www.colordiff.org/&#34; title=&#34;Color Diff&#34; target=&#34;_blank&#34;&gt;Color Diff&lt;/a&gt; tool will help you transform this&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://edmondscommerce.github.io/images/normal-diff.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To this&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://edmondscommerce.github.io/images/color-diff-600x200.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Payment has failed... Magento and SagePay CE Error &#43; Solution</title>
      <link>https://edmondscommerce.github.io/magento/payment-has-failed-magento-and-sagepay-ce-error-solution.html</link>
      <pubDate>Wed, 22 May 2013 14:58:25 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/payment-has-failed-magento-and-sagepay-ce-error-solution.html</guid>
      <description>&lt;p&gt;I recently upgraded a magento store and installed the Sage Pay Suite CE module from EbizMarks.&lt;/p&gt;

&lt;p&gt;The following error came up twice during the testing of the module, once in the frontend and once in the admin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Payment has failed, please reload checkout page and try again. Your card has not been charged&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The error itself is triggered from the saveAfter method in the Ebizmarts_SagePaySuite_Model_Observer_Sales class and is called every time an order is saved.&lt;/p&gt;

&lt;p&gt;The error on the frontend was caused by a javascript error. Adding the following to the top of the sagePaySuite_Checkout.js file corrected it&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sagePayIsMobile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sagePayIsMobile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/BlackBerry/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/webOS/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/Android/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/iPhone/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/iPod/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/iPad/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The error in the admin was caused by a different extension being called when the order was saved. Normally the extension ensures that the method is not called when it is not needed and this is done by checking the route and the registry. If an extension saves the order these checks are not triggered so you will need to add in your own. To do that you will need add the following code to the action that is saving the error&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;Mage::register(&amp;#39;skipSagePay&amp;#39;, TRUE);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then change the following line in the Ebizmarts/SagePaySuite/Model/Observer/Sales.php file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;if( (Mage::app()-&amp;gt;getRequest()-&amp;gt;getControllerModule() == &amp;#39;Mage_Api&amp;#39;) || Mage::registry(&amp;#39;current_shipment&amp;#39;) || Mage::registry(&amp;#39;sales_order&amp;#39;) || Mage::registry(&amp;#39;current_creditmemo&amp;#39;) || Mage::registry(&amp;#39;current_invoice&amp;#39;) || ($order-&amp;gt;getPayment()-&amp;gt;getMethod() == &amp;#39;sagepayrepeat&amp;#39;) ){&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;if( (Mage::app()-&amp;gt;getRequest()-&amp;gt;getControllerModule() == &amp;#39;Mage_Api&amp;#39;) || Mage::registry(&amp;#39;current_shipment&amp;#39;) || Mage::registry(&amp;#39;sales_order&amp;#39;) || Mage::registry(&amp;#39;current_creditmemo&amp;#39;) || Mage::registry(&amp;#39;current_invoice&amp;#39;) || ($order-&amp;gt;getPayment()-&amp;gt;getMethod() == &amp;#39;sagepayrepeat&amp;#39;) || Mage::registry(&amp;#39;skipSagePay&amp;#39;)){&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Apache Mod Rewrite Escaped Slashes Problem &#43; Solution</title>
      <link>https://edmondscommerce.github.io/apache/apache-mod-rewrite-escaped-slashes-problem-solution.html</link>
      <pubDate>Thu, 11 Apr 2013 11:05:20 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/apache/apache-mod-rewrite-escaped-slashes-problem-solution.html</guid>
      <description>&lt;p&gt;As part of our Magento SEO service, the first thing we do is to make sure there are no issues with the crawlability and general health of the clients web site.&lt;/p&gt;

&lt;p&gt;Whilst working on the Google Webmaster Tools crawl errors for a client I noticed one specific and intruiging problem for which I couldn&amp;rsquo;t immediately see the reason, everything looked to be set up perfectly.&lt;/p&gt;

&lt;p&gt;Certain URLs were getting 404 responses. The URL was being parsed by mod_rewrite but everything looked fine so why was apache giving a 404?&lt;/p&gt;

&lt;p&gt;The problem turns out to be that the URLs contain escaped slashes (eg search/KTA-mb667k2%2F2g),&lt;/p&gt;

&lt;p&gt;The problem is that Apache actually handles the escaped slash and helpfully converts it to a real slash. That then means that it is trying to look in a sub folder that does not exist and hence the 404.&lt;/p&gt;

&lt;p&gt;Chances are you don&amp;rsquo;t want escaped slashes to really be thought of as real directory separating slashes, especially if you are using mod_rewrite.&lt;/p&gt;

&lt;p&gt;The answer is a simple one liner to be added to your vhost.conf or httpd.conf.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
AllowEncodedSlashes On

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Magento Category Move Error Exception General error: 1205 &#43; solution</title>
      <link>https://edmondscommerce.github.io/magento/magento-category-move-error-exception-general-error-1205-solution.html</link>
      <pubDate>Fri, 05 Apr 2013 15:44:14 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-category-move-error-exception-general-error-1205-solution.html</guid>
      <description>&lt;p&gt;There is a problem in Magento that when you try to move a category by dragging it in the admin, it can cause the above error, whilst causing the rest of the site to slow down.&lt;/p&gt;

&lt;p&gt;This is caused by the system trying to re-index every product within the space of a transaction.&lt;/p&gt;

&lt;p&gt;An easy way to get round this is to switch the indexing mode from auto to manual and then move the categories.&lt;/p&gt;

&lt;p&gt;You will still need to re-index the site, but this can be run on a cron when the site is quite.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento No Search Results</title>
      <link>https://edmondscommerce.github.io/magento/magento-no-search-results.html</link>
      <pubDate>Wed, 13 Feb 2013 16:46:00 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-no-search-results.html</guid>
      <description>&lt;p&gt;Sometimes Magento will some times return no results with the message &amp;ldquo;Your search returns no results&amp;rdquo; for terms that you would expect it to return many results for.
This can happen for a number of reasons including misconfiguration of search or attributes.&lt;/p&gt;

&lt;p&gt;Unfortunately the way Magento speeds up search queries suffers from a race condition that can lead Magento to think it has cached a query when it has not and at the same time believes there are no products for that search because the cache for that query was dropped. This is a tough issue to solve but it can be done.&lt;/p&gt;

&lt;p&gt;The two methods that work effectively to resolve the race condition problem (thus far) are to first make sure that the query cache isn&amp;rsquo;t empty before using the cached results. This works effectively because if the cache is empty it must have been dropped recently and has not been repopulated.
The other thing you can do to help reduce this further is to make Magento remembers the time at which it dropped. Then have the query caches compare their last updated time against the the last cache drop time and if the update time is before or the same as the drop time don&amp;rsquo;t use the cache.
If this isn&amp;rsquo;t completely effective it is also possible to make it not use the query cache if the time of update and the time of drop are with in a minuet of each other to help reduce this further.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHPStorm Regex Replace &#34;Malformed Replacement String&#34;</title>
      <link>https://edmondscommerce.github.io/phpstorm/phpstorm-regex-replace-malformed-replacement-string.html</link>
      <pubDate>Thu, 24 Jan 2013 17:39:08 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm/phpstorm-regex-replace-malformed-replacement-string.html</guid>
      <description>&lt;p&gt;If you are struggling using PHPStorm to find and replace code with Regex rules then this is your solution.&lt;/p&gt;

&lt;p&gt;The problem is that when using the $ sign in your replacement string it confuses it because PHP Storm uses the $ sign to represent sub pattern replacements.&lt;/p&gt;

&lt;p&gt;Take the following example code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$data = array();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$form=$page-&amp;gt;find(&amp;#39;form.edit_product&amp;#39;, 0);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//standard inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;text&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$input-&amp;gt;name]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//radio inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;radio&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$input-&amp;gt;name]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//checkbox inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;checkbox&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$input-&amp;gt;name]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//textareas&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$textareas = $form-&amp;gt;find(&amp;#39;textarea&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($textareas as $textarea){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$textarea-&amp;gt;name]=$textarea-&amp;gt;innertext;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And trying to replace the key being used in the data array with a processed one calling a method $this-&amp;gt;dataName($key) to generate the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$data = array();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$form=$page-&amp;gt;find(&amp;#39;form.edit_product&amp;#39;, 0);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//standard inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;text&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$this-&amp;gt;dataName($input-&amp;gt;name)]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//radio inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;radio&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$this-&amp;gt;dataName($input-&amp;gt;name)]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//checkbox inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;checkbox&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$this-&amp;gt;dataName($input-&amp;gt;name)]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//textareas&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$textareas = $form-&amp;gt;find(&amp;#39;textarea&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($textareas as $textarea){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$this-&amp;gt;dataName($textarea-&amp;gt;name)]=$textarea-&amp;gt;innertext;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You might try the find pattern:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
\$data\[\$([^-]+)-&amp;gt;name\]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the replace pattern:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
\$data\[\$this-&amp;gt;dataName(\$$1-&amp;gt;name)\]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However this will give you the dreaded &lt;b&gt;&amp;ldquo;malformed replacement string&amp;rdquo;&lt;/b&gt; Error&lt;/p&gt;

&lt;p&gt;The solution is simply to triple escape your dollar signs, so the replacement pattern becomes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
\\\$data\[\\\$this-&amp;gt;dataName(\\\$$1-&amp;gt;name\)\]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And it works, woot!&lt;/p&gt;

&lt;p&gt;Also when it does work, PHP Storms replacement preview feature is really quite nice&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bash Redirection not Working in Shell Scripts &#43; Solution</title>
      <link>https://edmondscommerce.github.io/bash/bash-redirection-not-working-in-shell-scripts-solution.html</link>
      <pubDate>Wed, 09 Jan 2013 15:54:46 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash/bash-redirection-not-working-in-shell-scripts-solution.html</guid>
      <description>&lt;p&gt;I recently needed to trigger a couple of bash scripts through a web browser.&lt;/p&gt;

&lt;p&gt;Unfortunately PHP shell_exec function grinds to a halt when it is used to trigger a long running / memory intensive script when it is used with Apache.&lt;/p&gt;

&lt;p&gt;To get round this I instead wrote the command to a file and then wanted to trigger it using cron.&lt;/p&gt;

&lt;p&gt;However, the commands that were being issues included a redirect and disown which were not being triggered in the following script&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; dirname &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;BASH_SOURCE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[0]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;COMMAND&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;cat &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/commandFile &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tail -n 1&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#Check the command&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;COMMAND&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Command is /path/to/file.sh arg1 &amp;gt; /path/to/outputFile &amp;amp; disown&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#Run the command&lt;/span&gt;
&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;TEST&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After having a play around I found that modifying the file to this will redirect the output and then disown the process&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; dirname &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;BASH_SOURCE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[0]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;COMMAND&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;cat &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/commandFile &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tail -n 1&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#Check the command&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;COMMAND&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Command is /path/to/file.sh arg1 &amp;gt; /path/to/outputFile &amp;amp; disown&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#Run the command - This line has been changed&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;TEST&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Shell Scripts and Memory Limit Woes &#43; Solution</title>
      <link>https://edmondscommerce.github.io/magento/magento-shell-scripts-and-memory-limit-woes-solution.html</link>
      <pubDate>Wed, 19 Dec 2012 11:53:48 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-shell-scripts-and-memory-limit-woes-solution.html</guid>
      <description>&lt;p&gt;OK so you love Magento&amp;rsquo;s shell scripts! They are great for quickly putting together bulk processes that have full access to the Magento ORM.&lt;/p&gt;

&lt;p&gt;These kinds of shell scripts will often require above normal amounts of RAM for the kind of heavy lifting they lend themselves well to. If you are finding your script is banging against some mysterious memory limit that really shouldn&amp;rsquo;t be there then perhaps this is your answer:&lt;/p&gt;

&lt;p&gt;You might see an error message such as this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Fatal error:  Allowed memory size of 134217728 bytes exhausted (tried to allocate 20 bytes)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The reason this might be happening is that one of the things the abstract shell class does is parse the .htaccess file and apply any PHP configuration it finds. This is pretty slick and I can definitely see the value of it however if you are not aware its happening and you have a memory limit defined in a .htaccess file then it will be applied to your shell environment.&lt;/p&gt;

&lt;p&gt;The solution is up to you, edit the htaccess file or override this method in your shell class so that it doesn&amp;rsquo;t do things you do not want:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;    /**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * Parse .htaccess file and apply php settings to shell script&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    protected function _applyPhpVariables()&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $htaccess = $this-&amp;gt;_getRootPath() . &amp;#39;.htaccess&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (file_exists($htaccess)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            // parse htaccess file&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $data = file_get_contents($htaccess);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $matches = array();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            preg_match_all(&amp;#39;#^\s+?php_value\s+([a-z_]+)\s+(.+)$#siUm&amp;#39;, $data, $matches, PREG_SET_ORDER);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if ($matches) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                foreach ($matches as $match) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    @ini_set($match[1], $match[2]);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            preg_match_all(&amp;#39;#^\s+?php_flag\s+([a-z_]+)\s+(.+)$#siUm&amp;#39;, $data, $matches, PREG_SET_ORDER);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if ($matches) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                foreach ($matches as $match) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    @ini_set($match[1], $match[2]);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Uploading Multiple Files - Nothing in _POST, _FILES or _REQUEST &#43;Solution</title>
      <link>https://edmondscommerce.github.io/php/uploading-multiple-files-nothing-in-_post-_files-or-_request-solution.html</link>
      <pubDate>Mon, 17 Dec 2012 15:27:14 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/uploading-multiple-files-nothing-in-_post-_files-or-_request-solution.html</guid>
      <description>&lt;p&gt;When you&amp;rsquo;re uploading multiple files (HTML5 feature - remember IE as yet STILL does not support this), it may not be the fact you&amp;rsquo;re uploading multiple files that&amp;rsquo;s actually causing the problem.&lt;/p&gt;

&lt;p&gt;The problem often is actually caused by the various php memory limits in play, one way to avoid getting caught by this is using the following snippet in the form&amp;rsquo;s php to remind you which restrictions are in play (note the min_by_key() function is from the php.net comments) :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;min_by_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arr&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;is_array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$min2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;min_by_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$min2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;is_array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;array_keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;upload_max_filesize&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;intval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ini_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;upload_max_filesize&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;post_max_size&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;intval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ini_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;post_max_size&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;memory_limit&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;intval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ini_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;memory_limit&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$maxUploadSize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$minimumOfThree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;p&amp;gt;Max filesize &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$maxUploadSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;M Maximum filesize due to server setting &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$minimumOfThree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt; in php.ini&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Linux Mint 14 / Ubuntu 12.10 Slow Wifi with Ath9k Drivers &#43; Solution</title>
      <link>https://edmondscommerce.github.io/linux/linux-mint-14-ubuntu-12-10-slow-wifi-with-ath9k-drivers-solution.html</link>
      <pubDate>Wed, 12 Dec 2012 10:44:52 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/linux-mint-14-ubuntu-12-10-slow-wifi-with-ath9k-drivers-solution.html</guid>
      <description>&lt;p&gt;I upgrade my laptop to the latest release of Linux Mint 14 MATE edition. Everything is working beautifully apart from the wireless which, whilst functional, was cripplingly slow.&lt;/p&gt;

&lt;p&gt;After a load of searching and testing, the solution that worked for me was:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo -s

iwconfig wlan0 rate 54M

&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;options ath9k nohwcrypt=1&amp;quot;&lt;/span&gt; &amp;gt; /etc/modprobe.d/ath9k.conf

reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you copy and paste the above into a terminal it will force the wifi speed to 54M and will make sure hardware crypt is disabled and finally reboot your machine.&lt;/p&gt;

&lt;p&gt;I did this and my wifi speed is now perfectly fast, I&amp;rsquo;m a happy bunny :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Solution: Magento Catalog URL Rewrites Never Finishes (processing)</title>
      <link>https://edmondscommerce.github.io/magento/solution-magento-catalog-url-rewrites-never-finishes-processing.html</link>
      <pubDate>Wed, 05 Dec 2012 17:27:51 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/solution-magento-catalog-url-rewrites-never-finishes-processing.html</guid>
      <description>&lt;p&gt;In &lt;a title=&#34;Magento&#34; href=&#34;http://www.edmondscommerce.co.uk/platforms/Magento&#34;&gt;Magento&lt;/a&gt; 1.4.2 and possibly other versions, you can often find that the Catalog URL Rewrite process will sit at Processing forever.&lt;/p&gt;

&lt;p&gt;One of the problems that can cause this is if you have products in multiple categories and the solution is not pretty, but it works.&lt;/p&gt;

&lt;p&gt;Copy the file /app/code/core/Mage/Catalog/Model/Url.php to /app/code/local/Mage/Catalog/Model/Url.php (You never edit core files right?!) and around line 770 there is the following code block :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;        // generate id_path&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (&amp;#39;id&amp;#39; === $type) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if (!$product) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;category/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if ($category &amp;amp;&amp;amp; $category-&amp;gt;getLevel() &amp;gt; 1) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId() . &amp;#39;/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Changing this to the following seems to fix the problem :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;        // generate id_path&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (&amp;#39;id&amp;#39; === $type) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if (!$product) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;category/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if ($category &amp;amp;&amp;amp; (count(explode(&amp;#39;/&amp;#39;, $category-&amp;gt;getPath())) - 1) &amp;gt; 1) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId() . &amp;#39;/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>