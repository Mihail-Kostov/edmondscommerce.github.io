<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Helpful Tips on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/helpful-tips/</link>
    <description>Recent content in Helpful Tips on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Oct 2013 10:53:15 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/helpful-tips/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Automatically convert old PHP file to camelCase </title>
      <link>http://edmondscommerce.github.io/bash/automatically-convert-old-php-file-to-camelcase.html</link>
      <pubDate>Thu, 17 Oct 2013 10:53:15 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/bash/automatically-convert-old-php-file-to-camelcase.html</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently been working with an old project that uses a combination of different coding styles.&lt;/p&gt;

&lt;p&gt;One of the more trivial annoyances with this is that the variables used through the project are a combination of $camelCase and $snake_case which throws of the coding standards tools that I use.&lt;/p&gt;

&lt;p&gt;To get round this I have put a little script together that will convert $snake_case to $camelCase automatically.&lt;/p&gt;

&lt;p&gt;Obviously, you will need to check the results of this to make sure that there are not variables that should not be changed, but it has saved me a lot of time doing this manually.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve added this to my .bash_allias file, though it could easily be turned into a standalone script if required&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#Fix legacy code&lt;/span&gt;
 cammelCase&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   vim -E -s &lt;span class=&#34;nv&#34;&gt;$@&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;-EOF&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :%s#\%($\%(\k\+\)\)\@&amp;lt;=_\(\k\)#\u\1#g&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :update&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :quit&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
 
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tab Complete for SSH and SCP</title>
      <link>http://edmondscommerce.github.io/magento/bash/tab-complete-for-ssh-and-scp.html</link>
      <pubDate>Fri, 26 Jul 2013 10:31:41 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/bash/tab-complete-for-ssh-and-scp.html</guid>
      <description>&lt;p&gt;If you are required to connect to different servers, then remembering and typing in all of the details can become tiresome.&lt;/p&gt;

&lt;p&gt;Thankfully there is simple solution to this, using the SSH config file.&lt;/p&gt;

&lt;p&gt;To make use of this, create the following file ~/.ssh/config&lt;/p&gt;

&lt;p&gt;In there add the following details&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Host easyToRememberName
    HostName 127.0.0.1
    Port 2020
    User ross
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will then can tab completion on ssh and scp commands. You can see more of the options that can be set in the file &lt;a href=&#34;http://linux.die.net/man/5/ssh_config&#34; title=&#34;ssh config man page&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Category Move Error Exception General error: 1205 &#43; solution</title>
      <link>http://edmondscommerce.github.io/magento/magento-category-move-error-exception-general-error-1205-solution.html</link>
      <pubDate>Fri, 05 Apr 2013 15:44:14 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/magento-category-move-error-exception-general-error-1205-solution.html</guid>
      <description>&lt;p&gt;There is a problem in Magento that when you try to move a category by dragging it in the admin, it can cause the above error, whilst causing the rest of the site to slow down.&lt;/p&gt;

&lt;p&gt;This is caused by the system trying to re-index every product within the space of a transaction.&lt;/p&gt;

&lt;p&gt;An easy way to get round this is to switch the indexing mode from auto to manual and then move the categories.&lt;/p&gt;

&lt;p&gt;You will still need to re-index the site, but this can be run on a cron when the site is quite.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bash timeout and copying text in vim</title>
      <link>http://edmondscommerce.github.io/bash/bash-timeout-and-copying-text-in-vim.html</link>
      <pubDate>Thu, 14 Mar 2013 12:59:42 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/bash/bash-timeout-and-copying-text-in-vim.html</guid>
      <description>&lt;p&gt;I have been working with a server that had been configured differently from the way that I prefer.&lt;/p&gt;

&lt;p&gt;The two biggest complaints that I had about it were that the timeout was set very low, meaning that the connection would break off every five minutes, and that vim had been set up so if you selected text using the mouse you could not copy it.&lt;/p&gt;

&lt;p&gt;The solutions to these two problems are as follows.&lt;/p&gt;

&lt;p&gt;You can tell the terminal not to timeout with the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;TMOUT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Be aware that this will only work for the terminal that you are working with.&lt;/p&gt;

&lt;p&gt;The issue with vim is that the mouse was triggering visual mode.&lt;/p&gt;

&lt;p&gt;To get round this hold down shift when selecting text and everything will work as expected&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Correct recursive backups in bash</title>
      <link>http://edmondscommerce.github.io/bash/correct-recursive-backups-in-bash.html</link>
      <pubDate>Wed, 20 Feb 2013 20:54:57 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/bash/correct-recursive-backups-in-bash.html</guid>
      <description>&lt;p&gt;Sometime a backup script can go wrong, and rather the overwrite the old files you place a copy of the new ones into the same folder.&lt;/p&gt;

&lt;p&gt;This can then escalate and before you know it you have multiple levels of the same files.&lt;/p&gt;

&lt;p&gt;If you just want to flatten these files then this script can do that you&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;// The duplicated directory
&lt;span class=&#34;nv&#34;&gt;DUPLICATED_DIR_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;uploads&amp;#39;&lt;/span&gt;
// A new directory &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; the files to go into
&lt;span class=&#34;nv&#34;&gt;NEW_DIR_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;realuploads&amp;#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; f in &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;find ./ &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;nv&#34;&gt;$DUPLICATED_DIR_NAME&lt;/span&gt;/&lt;span class=&#34;nv&#34;&gt;$DUPLICATED_DIR_NAME&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; 
&lt;span class=&#34;nv&#34;&gt;NEWFILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/$DUPLICATED_DIR_NAME\//\//g&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;nv&#34;&gt;NEWDIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;../&lt;span class=&#34;nv&#34;&gt;$NEW_DIR_NAME&lt;/span&gt;/&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;dirname &lt;span class=&#34;nv&#34;&gt;$NEWFILE&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; ! -d &lt;span class=&#34;nv&#34;&gt;$NEWDIR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
mkdir &lt;span class=&#34;nv&#34;&gt;$NEWDIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
cp -f &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; ../&lt;span class=&#34;nv&#34;&gt;$NEW_DIR_NAME&lt;/span&gt;/&lt;span class=&#34;nv&#34;&gt;$NEWFILE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Warning in Varien/Autoload &#43; Solution</title>
      <link>http://edmondscommerce.github.io/magento/warning-in-varienautoload-solution.html</link>
      <pubDate>Fri, 30 Nov 2012 17:46:34 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/warning-in-varienautoload-solution.html</guid>
      <description>&lt;p&gt;I have recently been putting together a system that needed to interact with Magento.&lt;/p&gt;

&lt;p&gt;A big issue that I came across was a warning similar to this&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Warning: include(): Failed opening &amp;lsquo;Model/Base.php&amp;rsquo; for inclusion (include_path=&amp;lsquo;&amp;hellip;&amp;rsquo;) in /path/to/magento/lib/Varien/Autoload.php on line 93
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As I was running with an error handler that turned all errors into exceptions this prevented the code from running.&lt;/p&gt;

&lt;p&gt;The issue was due to my code using a custom autoloader, and when the Varien auto-loader was called first it could not find the files which triggered a warning.&lt;/p&gt;

&lt;p&gt;There are multiple ways of getting round this - see &lt;a href=&#34;http://stackoverflow.com/questions/4085967/how-to-integrate-ezcomponents-with-magento&#34; title=&#34;How To Integrate Ezcomponents With Magento&#34;&gt;here&lt;/a&gt; for an example - if you are using PHP 5.3+ there is a much simpler solution.&lt;/p&gt;

&lt;p&gt;Since PHP 5.3 the spl_autoload_register has had a prepend option which places the autoloader at the top of the stack. This means that it will try your autoloader first, rather than the Varien one, avoiding the warning if the file can only be found using your autoloader. To do this just use the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;spl_autoload_register(&amp;#39;my_autoloader&amp;#39;,null,true);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Cron not Working in Magento &#43;Solution</title>
      <link>http://edmondscommerce.github.io/magento/cron-not-working-in-magento-solution.html</link>
      <pubDate>Tue, 13 Nov 2012 16:34:33 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/cron-not-working-in-magento-solution.html</guid>
      <description>&lt;p&gt;I recently had a Magento store that was not running cron jobs despite everything appearing to be set up correctly.&lt;/p&gt;

&lt;p&gt;After tearing out my hair, I discovered that there was a cron job running that had not closed properly, which prevented any new cron jobs from starting.&lt;/p&gt;

&lt;p&gt;This is because the cron.sh file that is used by magento checks the currently running processes, and if one exists quietly exits.&lt;/p&gt;

&lt;p&gt;To check if this is the case you can run a modified line from the cron.sh file as set out below&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
ps auxwww | grep &amp;ldquo;/path/to/magento/cron.php&amp;rdquo; | grep -v grep | grep -v cron.sh
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If this returns a line similar to the one below&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
root      2125  0.0  0.9 329896 40484 ?        S    Nov13   0:00 /usr/bin/php /path/to/magento/cron.php
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can kill the running job, which will allow cron to run normally. At this stage you should debug the cron tasks to see why the process stalled&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reduce Catalog URL Rewrites Time in Magento</title>
      <link>http://edmondscommerce.github.io/magento/reduce-catalog-url-rewrites-time-in-magento.html</link>
      <pubDate>Mon, 22 Oct 2012 16:40:10 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/reduce-catalog-url-rewrites-time-in-magento.html</guid>
      <description>&lt;p&gt;I recently had a client that wanted to remove the category structure from their product urls.&lt;/p&gt;

&lt;p&gt;There is a option to do this in the admin, but they wanted to redirect all of the existing urls to the shorter one.&lt;/p&gt;

&lt;p&gt;The way that I wanted to do this was to truncate the current core_url_rewrite table and regenerate the urls with the &amp;ldquo;Use Categories Path for Product URLs&amp;rdquo; set to no, and then override the 404 controller to redirect to the correct url.&lt;/p&gt;

&lt;p&gt;However, after the urls were generated, I found that all of the urls including the category path were still included, which meant that the override would not work.&lt;/p&gt;

&lt;p&gt;After spending quite a bit of time looking for a way to get round this, I put together a simple override to prevent the category path urls from getting generated.&lt;/p&gt;

&lt;p&gt;This had the added benefit of reducing the number of entries in the core_url_rewite table from ~2k entries to under 500, which cut the amount of time that was needed to generate it.&lt;/p&gt;

&lt;p&gt;The code is below for anyone else that needs to use this in the future. There are three files in total, set up like this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;EdmondsCommerce/&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;`-- Redirects&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    |-- controllers&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    |   `-- Cms&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    |       `-- IndexController.php&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    |-- etc&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    |   `-- config.xml&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    `-- Model&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        `-- Catalog&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            `-- Url.php&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is the code for the Model&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;class EdmondsCommerce_Redirects_Model_Catalog_Url &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  extends Mage_Catalog_Model_Url {&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    /**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * This method is called each time that a url &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * is generated for a product. It is called for the &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * root category and each category that the product is in.&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * This code checks to see if the category passed to it is&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * the root category. If it is it will &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * add the url rewrite as normal. If not it does nothing&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param Varien_Object $product&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param Varien_Object $category&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    protected function _refreshProductRewrite(Varien_Object $product, Varien_Object $category) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $rootCategory = $this-&amp;gt;getStoreRootCategory($category-&amp;gt;getStoreId());&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if($category-&amp;gt;getId() == $rootCategory-&amp;gt;getId()) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            parent::_refreshProductRewrite($product, $category);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you want to redirect from the existing urls to the new ones, you will need to use the following controller&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;include_once(&amp;#39;Mage/Cms/controllers/IndexController.php&amp;#39;);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;class EdmondsCommerce_Redirects_Cms_IndexController &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;extends Mage_Cms_IndexController {&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    /**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * This checks to see if the site can redirect&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * before displaying a 404&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param type $coreRoute&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public function noRouteAction($coreRoute = null) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        // Get the request&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $request = $_SERVER[&amp;#39;REQUEST_URI&amp;#39;];&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        // Strip off get params if there are any&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (strpos($request, &amp;#39;?&amp;#39;) !== FALSE) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $request = substr($request, 0, strpos($request, &amp;#39;?&amp;#39;));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        /**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;         *  This makes sure that no part of the request is included&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;         *  in the base url. This should help&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;         *  the system work if it is running from a sub folder&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;         */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $parts = explode(&amp;#39;/&amp;#39;, Mage::getBaseUrl());&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        foreach ($parts AS $part) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $request = str_replace(array($part, &amp;#39;//&amp;#39;), &amp;#39;&amp;#39;, $request);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        /*&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;         * Combine the request with the base path to get the full url&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;         * and remove any trailing slashes&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;         */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $path = trim(str_replace(&amp;#39;http:/&amp;#39;, &amp;#39;http://&amp;#39;, str_replace(&amp;#39;//&amp;#39;, &amp;#39;/&amp;#39;, Mage::getBaseUrl() . $request)), &amp;#39;/&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        //Get the last section which should be the product title&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $cleanedPath = explode(&amp;#39;/&amp;#39;, $path);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $key = array_pop($cleanedPath);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        //Here we find url keys like the title&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $collection = Mage::getModel(&amp;#39;catalog/product&amp;#39;)-&amp;gt;getCollection();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $collection-&amp;gt;addAttributeToSelect(&amp;#39;url_key&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $collection-&amp;gt;addFieldToFilter(array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            array(&amp;#39;attribute&amp;#39; =&amp;gt; &amp;#39;url_key&amp;#39;, &amp;#39;like&amp;#39; =&amp;gt; &amp;quot;$key&amp;quot;)));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $products = $collection-&amp;gt;load();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        /*&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;         * Proceed if there is only 1 result, if there are more we&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;         * don&amp;#39;t know which one is correct&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;         */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (count($products) == 1) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            foreach ($products AS $product) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                $url = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB) . $product-&amp;gt;getUrlKey();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                //Check to make sure the url is not the same as the path, should prevent infinite redirects&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                if ($path != $url) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    header(&amp;#39;HTTP/1.1 301 Moved Permanently&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    header(&amp;#39;Location: &amp;#39; . $url);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    die();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        // Could not find a suitable url carry out the 404&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        parent::noRouteAction($coreRoute);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then use the following xml file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;config&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;modules&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;EdmondsCommerce_Redirects&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;0.1.0&lt;span class=&#34;nt&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;depends&amp;gt;&amp;lt;/depends&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/EdmondsCommerce_Redirects&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/modules&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;global&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;models&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;redirects&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;class&amp;gt;&lt;/span&gt;EdmondsCommerce_Redirects_Model&lt;span class=&#34;nt&#34;&gt;&amp;lt;/class&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/redirects&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;catalog&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;rewrite&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;EdmondsCommerce_Redirects_Model_Catalog_Url&lt;span class=&#34;nt&#34;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/rewrite&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/catalog&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/models&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/global&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;frontend&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;routers&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;cms&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;args&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;modules&amp;gt;&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;lt;EdmondsCommerce_Redirects&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;before=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Mage_Cms&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;EdmondsCommerce_Redirects_Cms&lt;span class=&#34;nt&#34;&gt;&amp;lt;/EdmondsCommerce_Redirects&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/modules&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/args&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/cms&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/routers&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/frontend&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Get all product attributes for a magento object using SQL</title>
      <link>http://edmondscommerce.github.io/magento/get-all-product-attributes-for-a-magento-object-using-sql.html</link>
      <pubDate>Wed, 15 Aug 2012 14:17:17 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/get-all-product-attributes-for-a-magento-object-using-sql.html</guid>
      <description>&lt;p&gt;Sometimes you may want to quickly compare all of the attributes that object (category / product) has in magento. The EAV structure of the database makes this difficult to do this simply, so this is a query that will do it for you&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt; 
        &lt;span class=&#34;n&#34;&gt;ce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sku&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;CASE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_type&lt;/span&gt;
           &lt;span class=&#34;k&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;varchar&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_varchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;
           &lt;span class=&#34;k&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;int&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;
           &lt;span class=&#34;k&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;
           &lt;span class=&#34;k&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;decimal&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_decimal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;
           &lt;span class=&#34;k&#34;&gt;WHEN&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;THEN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;
           &lt;span class=&#34;k&#34;&gt;ELSE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_type&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_required&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;required&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;catalog_product_entity&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;eav_attribute&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_type_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_type_id&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;catalog_product_entity_varchar&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_varchar&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_varchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_id&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_varchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_id&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;varchar&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;catalog_product_entity_int&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_int&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_id&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_id&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;int&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;catalog_product_entity_text&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_text&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_id&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_id&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;catalog_product_entity_decimal&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_decimal&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_decimal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_id&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_decimal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_id&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;decimal&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;LEFT&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;JOIN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;catalog_product_entity_datetime&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_datetime&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;ON&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;entity_id&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce_datetime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;attribute_id&lt;/span&gt; 
        &lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ea&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backend_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ce&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sku&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;YOUR_SKU&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;AS&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tab&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;ss&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This version of the query will only return values that are not blank, but if you only run the sub query it will give you every value.
Replace catalog_product* for catalog_category to get the values for a category. You will also have to use a different selector than SKU.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Netbeans to generate PHP class methods</title>
      <link>http://edmondscommerce.github.io/netbeans/using-netbeans-to-generate-php-class-methods.html</link>
      <pubDate>Thu, 08 Mar 2012 14:31:19 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/netbeans/using-netbeans-to-generate-php-class-methods.html</guid>
      <description>&lt;p&gt;One of the features that I was previously unaware of in Netbeans is its ability to automatically generate common class methods. This post is a quick guide of how this works for future reference.&lt;/p&gt;

&lt;p&gt;To get the system to work, first load up a php class. For this example I&amp;rsquo;m going to be extending the Magento Product Model. This basic class can be seen here, with a couple of extra properties added.
&lt;img src=&#34;http://edmondscommerce.github.io/images/screenshot5-600x166.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;To start generating the methods you need to press [Alt] &amp;amp; [Insert] and you will be presented with a menu similar to the one below&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://edmondscommerce.github.io/images/screenshot6.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This lists all of the common methods that do not currently exist within the class. The first thing that we&amp;rsquo;ll do is to generate a constructor, which gives us the following options&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://edmondscommerce.github.io/images/screenshot7.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Here you can select which of the class properties you want to be set using the constructor. Pick the ones you want and click OK, and the following code is generated&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://edmondscommerce.github.io/images/screenshot8-600x368.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The Getters and Setters work in the same way, and the Override &amp;amp; Implement provides you with a list of all of the methods that the class can override from its parents. Using these together can help you to quickly all of the methods you need in minutes, as shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://edmondscommerce.github.io/images/screenshot14-600x547.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automatically convert smart quotes in the browser</title>
      <link>http://edmondscommerce.github.io/programming/automatically-convert-smart-quotes-in-the-browser.html</link>
      <pubDate>Mon, 27 Feb 2012 18:59:55 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/programming/automatically-convert-smart-quotes-in-the-browser.html</guid>
      <description>&lt;p&gt;If you have ever had to browse for a coding solution, you will have come across the problem of &amp;ldquo;smart&amp;rdquo; quotes replacing normal punctuation. Thankfully there is a simple fix to to this, a userscript called DumbQuotes which can be downloaded &lt;a href=&#34;http://userscripts.org/scripts/show/658&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This will convert all of the single &amp;amp; double quotes into something more code friendly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rapid CSS Development in Chrome</title>
      <link>http://edmondscommerce.github.io/cascading-style-sheets/rapid-css-development-in-chrome.html</link>
      <pubDate>Thu, 23 Feb 2012 14:28:37 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/cascading-style-sheets/rapid-css-development-in-chrome.html</guid>
      <description>&lt;p&gt;I do a lot front end development with Magento, and one of the biggest time sinks for this is waiting for a page to load when you want to change a line of CSS.&lt;/p&gt;

&lt;p&gt;Whilst you can use Firebug / Chrome to edit CSS rules on the page, you still need check that the file is saved correctly. As this is Magento, this can take some time due to caching being disabled.&lt;/p&gt;

&lt;p&gt;Thankfully there is an extension for Chrome which will just reload you CSS files and not the entire page. You can install it &lt;a href=&#34;https://chrome.google.com/webstore/detail/dnfpcpfijpdhabaoieccoclghgplmpbd&#34;&gt;here&lt;/a&gt; and save a lot of time during development!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adding custom variables to Magento Static Blocks</title>
      <link>http://edmondscommerce.github.io/magento/adding-custom-variables-to-magento-static-blocks.html</link>
      <pubDate>Mon, 16 Jan 2012 16:02:14 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/adding-custom-variables-to-magento-static-blocks.html</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently been asked to customise the front page of a magento store. The client wanted the ability to specify a different set of top links depending on whether the customer was logged in or not, and they wanted to be able to changes these links from the admin section. They also wanted the logged in links to display the customers name.&lt;/p&gt;

&lt;p&gt;The problem with this is that the standard magento CMS static blocks don&amp;rsquo;t provide access to the customer by default, so I thought I was going to have to build an extension to pass the variables in. However after a little bit of digging, I discovered that this functionality is available as standard in Magento, you just need to set it up!&lt;/p&gt;

&lt;p&gt;The way to do this is as follows. Within you template file add in the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$blockToDisplay = $this-&amp;gt;getLayout()-&amp;gt;createBlock(&amp;#39;cms/block&amp;#39;)-&amp;gt;setBlockId(&amp;#39;static_block_id_to_display&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;* Here we create an array of custom variables that will be passed to the static block. You can set as many as you&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;* need and call them whatever makes sense. The important part is in the Static Block you call these like this&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;* {{var customer_name}}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;* Note there are no spaces between the braces and the characters - this is something that caught me out&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$customVariables = array();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$customVariables[&amp;#39;customer_name&amp;#39;] = Mage::helper(&amp;#39;customer&amp;#39;)-&amp;gt;getCustomerName();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$filter = Mage::getModel(&amp;#39;core/email_template_filter&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$filter-&amp;gt;setVariables($customVariables);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;echo $filter-&amp;gt;filter($blockToDisplay-&amp;gt;toHtml());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will then display the static block with your variables expanded to values you&amp;rsquo;ve set.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quickly make a deploy folder from git</title>
      <link>http://edmondscommerce.github.io/git/quickly-make-a-deploy-folder-from-git.html</link>
      <pubDate>Mon, 14 Nov 2011 17:31:00 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/git/quickly-make-a-deploy-folder-from-git.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
I needed to quickly generate a deploy folder that included all changes in the last two weeks. Using git and a little bit of bash magic I was able to put together a one liner to do this.&lt;/p&gt;

&lt;p&gt;This works we use a public folder within our git structure which makes filtering the files easy, if you don&amp;rsquo;t have this then you will have to change the grep filter to match your needs. Obviously you can change the since filter to get the files you need.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git log &amp;ndash;since=&amp;ldquo;2 weeks ago&amp;rdquo; &amp;ndash;name-status | grep public | sort | uniq | awk &amp;lsquo;{print $2}&amp;rsquo; | xargs -I % cp &amp;ndash;parents % /path/to/deploy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Hope this helps in the future&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>