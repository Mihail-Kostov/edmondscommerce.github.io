<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Access on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/access/</link>
    <description>Recent content in Access on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Mar 2013 15:29:34 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/access/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Restrict Access Using .htaccess File Rules in PHP</title>
      <link>http://edmondscommerce.github.io/php/restrict-access-using-htaccess-file-rules-in-php.html</link>
      <pubDate>Mon, 11 Mar 2013 15:29:34 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/php/restrict-access-using-htaccess-file-rules-in-php.html</guid>
      <description>&lt;p&gt;The function below is one that we have used a few times to allow certain &amp;ldquo;admin only&amp;rdquo; assets to be accessed or visible on the front end of a website.&lt;/p&gt;

&lt;p&gt;The theory is that the htaccess file in the admin folder will be kept up to date and can therefore be used as the authoritative list of IP addresses that are allowed to access admin assets.&lt;/p&gt;

&lt;p&gt;This function is simple enough and should be useful anywhere that you use htaccess to protect a certain folder and would like to implement the same white list rules in other places without having to maintain a duplicate list of authorised IP addresses.&lt;/p&gt;

&lt;p&gt;The function also uses &lt;a href=&#34;http://www.php.net/manual/en/language.variables.scope.php#language.variables.scope.static&#34; title=&#34;PHP.net Static Variables&#34; target=&#34;_blank&#34;&gt;static variables&lt;/a&gt; - a lesser known bit of PHP functionality which can be a nice easy performance optimisation when working with procedural PHP code. If a function will be called many times and will always return the same result in a single request, you can actually cache that result to a static variable and serve that on any subsequent requests.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function isAllowedIp() {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    static $pass = null;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if ($pass !== null) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        return $pass;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $pass=false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $customer_ip = $_SERVER[&amp;#39;REMOTE_ADDR&amp;#39;];    &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $htaccess = file_get_contents(&amp;#39;admin/.htaccess&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    preg_match_all(&amp;#39;%allow from ([0-9.]+)%&amp;#39;, $htaccess, $matches);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    foreach ($matches[1] as $ip) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if ($ip == $customer_ip) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $pass = true; //this is stored statically for perfomance reasons&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            return true;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    return false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SSH Access, what is it all about in Simple Words?</title>
      <link>http://edmondscommerce.github.io/server/ssh-access-what-is-it-all-about-in-simple-words.html</link>
      <pubDate>Mon, 05 Nov 2012 16:29:37 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/server/ssh-access-what-is-it-all-about-in-simple-words.html</guid>
      <description>&lt;p&gt;&lt;h3&gt;What is an SSH access?&lt;/h3&gt;
SSH stands for Secure Socket Shell. SSH is a protocol, like HTTP, it gives us a way to gain a secure access to remote computers.&lt;/p&gt;

&lt;p&gt;The principle is to connect two networked computers via a secure encrypted channel within an insecure network environment such as the Internet.&lt;/p&gt;

&lt;p&gt;With SSH access we can easily move files around and run programs on your server. We can also transmit files to and from our own network onto your server, for example to take a copy of your site for local development or to push updated files onto your server.&lt;/p&gt;

&lt;p&gt;SSH needs a server application installing on your server (most web servers will have this by default) and an SSH client on your local machine to allow you to connect to your server.&lt;/p&gt;

&lt;p&gt;&lt;h3&gt;Where do you get your SSH access from?&lt;/h3&gt;
If you need SSH access details you should ask your hosting company, they should be able to install it for you if it is not already in place. If you are on shared hosting then the chances are that you will not be able to get SSH access details, if you need SSH access then you should consider upgrading your hosting to something that will support it.&lt;/p&gt;

&lt;p&gt;SSH access details will consist of at least:&lt;/p&gt;

&lt;p&gt;domain or IP address:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
domain.com

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
123.123.123.123

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;username:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
mywebserverlogin

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;password:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
ihy324579ySDWf

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;it may also include a port if SSH is not running on the standard port.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
2020

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;h3&gt;Why do we need the SSH access details?&lt;/h3&gt;
We will always ask our customers to provide us with SSH access details. This is for two main reasons:&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;1. Power and Speed&lt;/h4&gt;
SSH access allows us to run commands directly on the server, compress files, run scripts etc. For example we will generally run some static analysis scripts for our &lt;a href=&#34;http://edmondscommerce.github.io/platforms/magento&#34;&gt;Magento&lt;/a&gt; customers using a bash script that we can run with SSH access. This gives us some instant feedback on the state of your Magento installation and allows us to spot any potential problems.&lt;/p&gt;

&lt;p&gt;If we need to get a copy of your site files, using SSH we can prepare a compressed archive of your site files allowing us to download them much faster. Likewise we can easily get a reliable database dump, especially if you have a large database that might cause problems for browser based tools such as phpMyAdmin.&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;2. Security&lt;/h4&gt;
SSH is a much more secure protocol than something like FTP. In SSH everything is encrypted. It has been built from the ground up to be a very secure way of networking and inter communicating between servers on an insecure network such as the web.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apache Access Logs Find Spiders by Counting Requests to IP Addresses</title>
      <link>http://edmondscommerce.github.io/linux/apache-access-logs-find-spiders-by-counting-requests-to-ip-addresses.html</link>
      <pubDate>Tue, 21 Aug 2012 13:24:37 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/apache-access-logs-find-spiders-by-counting-requests-to-ip-addresses.html</guid>
      <description>&lt;p&gt;If you would like a quick summary of the IP addresses that are beating the **** out of your server by firing lots of requests for quite possibly malicious or otherwise nefarious reasons then try this little bash script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;LOG_FILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/var/www/vhosts/DOMAIN.co.uk/statistics/logs/access_log
&lt;span class=&#34;nv&#34;&gt;OUT_FILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/spider_analysis

&lt;span class=&#34;c1&#34;&gt;#This generates a file with the top 20 IP addresses by number of requests&lt;/span&gt;
cat &lt;span class=&#34;nv&#34;&gt;$LOG_FILE&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk &lt;span class=&#34;s1&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; uniq -c &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort -nr &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -n &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; &amp;gt; &lt;span class=&#34;nv&#34;&gt;$OUT_FILE&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Top 20 IP addresses by number of request&amp;quot;&lt;/span&gt;
cat &lt;span class=&#34;nv&#34;&gt;$OUT_FILE&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#allow for loop to split on new line&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS_BAK&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$IFS&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;cat &lt;span class=&#34;nv&#34;&gt;$OUT_FILE&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk &lt;span class=&#34;s1&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;IP_ADD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk &lt;span class=&#34;s1&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;---------------------------------&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$IP_ADD&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; has made &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$COUNT&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; requests&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Whois Information&amp;quot;&lt;/span&gt;
    whois &lt;span class=&#34;nv&#34;&gt;$IP_ADD&lt;/span&gt; 
    &lt;span class=&#34;c1&#34;&gt;#lynx -dump http://who.cc/$IP_ADD # whois was blocked on the server i was using for some reason, use lynx as a work around&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;---------------------------------&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# set that back&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$IFS_BAK&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS_BAK&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You would use this to give you some idea of which IPs are hitting the server a lot.&lt;/p&gt;

&lt;p&gt;Usually you would expect to see a lot of these being search engines which you likely want to allow. However if you see any domestic or other IP addresses then you may choose to block these.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C-Panel Access using WHS/Root Password</title>
      <link>http://edmondscommerce.github.io/server/c-panel-access-using-whsroot-password.html</link>
      <pubDate>Thu, 05 Jan 2012 15:29:03 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/server/c-panel-access-using-whsroot-password.html</guid>
      <description>&lt;p&gt;Ever wondering how you could gain access into any Control panel(c-panel) account when you confidently know only the username of the c-panel account. I tried doing this by actually using the Web host manager (WHS) password, and it worked brilliantly for any c-panel user account.&lt;/p&gt;

&lt;p&gt;But the only gotcha I found out  was that I could not use Phpmyadmin. Nevertheless, you could still find a way around this by adding a PHP database management file on the web root directory which installs an alternative database management User interface which provides functions similar to Phpmyadmin.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Easy Filesharing in Linux (and Fast and Secure) using SSHFS</title>
      <link>http://edmondscommerce.github.io/linux/easy-filesharing-in-linux-and-fast-and-secure-using-sshfs.html</link>
      <pubDate>Wed, 05 Jan 2011 13:44:14 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/easy-filesharing-in-linux-and-fast-and-secure-using-sshfs.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are frustrated with Samba and would like something a bit more solid and speedier whilst being very easy to set up, check out SSHFS.&lt;/p&gt;

&lt;p&gt;To install it you simply need to do&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
sudo apt-get install sshfs

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once that&amp;rsquo;s done you can mount a remote filesystem in a very similar way to accessing a remote machine via SSH&lt;/p&gt;

&lt;p&gt;eg&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;

#Mount
sshfs  -p2020 -o idmap=user $USER@laptop.com:/home/joseph/Projects ~/Mounts/Laptop/Projects

#Unmount
fusermount -u ~/Mounts/Laptop/Projects


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You need to have previously created the local folder you are going to mount to (in this case /home/joseph/Mounts/Laptop/Projects)&lt;/p&gt;

&lt;p&gt;Note also I am using a non standard SSH port with the -p2020 bit (using port 2020). If you are using standard SSH ports you can remove this, or of course change the port number to whatever you prefer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.ubuntu.com/community/SSHFS&#34;&gt;&lt;a href=&#34;https://help.ubuntu.com/community/SSHFS&#34; target=&#34;_blank&#34;&gt;https://help.ubuntu.com/community/SSHFS&lt;/a&gt; for more info&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu ACL Access Control Lists</title>
      <link>http://edmondscommerce.github.io/ubuntu/ubuntu-acl-access-control-lists.html</link>
      <pubDate>Fri, 30 Jul 2010 09:37:15 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/ubuntu/ubuntu-acl-access-control-lists.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are working in Linux and need to set some more complex permissions than the straight user, group everyone RWX style, then you can.&lt;/p&gt;

&lt;p&gt;Working in Ubuntu, you need to first of all install ACL&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
sudo apt-get install acl

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now before you can use ACL, you need to enable it on whichever volumes you want to use it on. To do this you have to edit your fstab (which if you do it wrong can cause problems so make sure you back it up!)&lt;/p&gt;

&lt;p&gt;In the options column of the fstab for the volume you are working with, you need to add acl, eg:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
/dev/mapper/server-root /               ext4    errors=remount-ro 0 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;becomes&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
/dev/mapper/server-root /               ext4    acl,errors=remount-ro 0 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you need to remount&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
mount -o remount /

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you need to check acl is working:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
mount | grep acl

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;you should see a line with acl in there&lt;/p&gt;

&lt;p&gt;Now to recursively set an ACL for a particular user giving full access on a folder structure, use this command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
setfacl -Rm u:user:rwX,d:u:user:rwX /path/to/folder

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To fully understand ACL, hit the man pages&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
man acl

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>