<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sysadmin on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/sysadmin/</link>
    <description>Recent content in Sysadmin on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Nov 2014 12:35:43 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/sysadmin/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>atop quick start: an introduction to atop snapshotting</title>
      <link>https://edmondscommerce.github.io/atop-quick-start-an-introduction-to-atop-snapshotting.html</link>
      <pubDate>Wed, 12 Nov 2014 12:35:43 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/atop-quick-start-an-introduction-to-atop-snapshotting.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.atoptool.nl/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;atop&lt;/code&gt;&lt;/a&gt; is a server diagnostic tool to take snapshots of the server&amp;rsquo;s activity at specified intervals, so it&amp;rsquo;s useful for debugging intermitttent issues without watching the server constantly.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;atop&lt;/code&gt; is available to install from the repos with a &lt;code&gt;yum install atop&lt;/code&gt; or &lt;code&gt;apt-get install&lt;/code&gt; atop depending if you&amp;rsquo;re on a RedHat or Debian-based server. By default atop will take snapshots every 10 minutes.&lt;/p&gt;

&lt;p&gt;Omnce it&amp;rsquo;s been left running, you can view its snapshots by running &lt;code&gt;atop -r /var/log/atop/atop_&amp;lt;date&amp;gt;&lt;/code&gt; - you can see the dates that are logged by listing the &lt;code&gt;/var/log/atop&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Two key commands to use are &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;. Pressing &lt;code&gt;b&lt;/code&gt; will prompt for a time in the format hh:mm. Enter a time and it&amp;rsquo;ll jump to the nearest snapshot. From there &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt; (&lt;code&gt;shift-t&lt;/code&gt;) will jump you forwards and backwards through the logs respectively&lt;/p&gt;

&lt;p&gt;This is an example of atop&amp;rsquo;s output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
ATOP - ip-10-0-1-22                                                          2014/11/11  00:30:02                                                          -----------                                                           10m0s elapsed
PRC | sys    5.11s  | user  10.94s |               |              | #proc    104  | #trun      1 |               | #tslpi   149 |  #tslpu     0 |              |  #zombie    0 | clones    37 |               |              |  #exit     46 |
CPU | sys	1%  | user	2% |               | irq       0% |               | idle    197% |               | wait      0% |               |              |  steal     0% | guest     0% |  curf 2.50GHz |              |  curscal   ?% |
cpu | sys	1%  | user	1% |               | irq       0% |               | idle     98% |               | cpu001 w  0% |               |              |  steal     0% | guest     0% |  curf 2.50GHz |              |  curscal   ?% |
cpu | sys	0%  | user	0% |               | irq       0% |               | idle     99% |               | cpu000 w  0% |               |              |  steal     0% | guest     0% |  curf 2.50GHz |              |  curscal   ?% |
CPL | avg1    0.14  |              | avg5    0.09  |              | avg15   0.07  |              |               | csw   261923 |               | intr  279857 |               |              |               | numcpu     2 |               |
MEM | tot     7.3G  | free    5.8G | cache 176.1M  | dirty   0.8M | buff   14.2M  | slab   41.4M | slrec  20.1M  | shmem  36.9M |  shrss   0.0M | shswp   0.0M |               | vmbal   0.0M |               | hptot   0.0M |  hpuse   0.0M |
SWP | tot     0.0M  | free    0.0M |               |              |               |              |               |              |               |              |               |              |  vmcom   2.1G | vmlim   3.6G |               |
NET | transport     | tcpi   69012 | tcpo   74002  |              | udpi      93  | udpo      97 | tcpao     72  | tcppo    330 |               | tcprs    250 |  tcpie      0 | tcpor     24 |  udpnp      0 |              |  udpie	   0 |
NET | network       | ipi    69105 |               | ipo    74025 | ipfrw      0  |              | deliv  69105  |              |               |              |               |              |  icmpi      0 | icmpo	   0 |               |
NET | eth0    ----  | pcki   68732 |               | pcko   73654 | si  342 Kbps  | so  464 Kbps |               | coll       0 |  mlti       0 |              |  erri       0 | erro       0 |  drpi       0 |              |  drpo	   0 |
NET | lo      ----  | pcki     396 |               | pcko     396 | si   17 Kbps  | so   17 Kbps |               | coll       0 |  mlti       0 |              |  erri       0 | erro       0 |  drpi       0 |              |  drpo	   0 |
Window resized to 238x71...
  PID          TID         RUID             EUID              THR         SYSCPU         USRCPU          VGROW          RGROW          RDDSK          WRDSK         ST         EXC         S         CPUNR          CPU         CMD        1/3
 1335            -         root             root                7          2.51s          2.97s             0K             0K             0K             0K         --           -         S             1           1%         glusterfs
17247            -         apache           apache              1          0.40s          4.34s         46644K         66352K          3340K          3292K         --           -         S             1           1%         httpd
17274            -         apache           apache              1          0.36s          1.13s         35236K         54628K          1188K          2304K         --           -         S             0           0%         httpd
17267            -         apache           apache              1          0.24s          0.94s         55204K         83040K          2348K          2760K         --           -         S             1           0%         httpd
17310            -         apache           apache              1          0.26s          0.49s         961.9M         83508K           548K            12K         N-           -         S             1           0%         httpd
16708            -         varnish          varnish            19          0.28s          0.08s          4992K          5188K         32588K           448K         --           -         S             0           0%         varnishd
17248            -         apache           apache              1          0.11s          0.17s          7128K         24120K           364K          1788K         --           -         S             1           0%         httpd
17187            -         root             root                1          0.18s          0.04s           140K           140K             0K            24K         --           -         R             1           0%         atop
 1418            -         root             root                7          0.11s          0.10s             0K             0K             0K             0K         --           -         S             1           0%         glusterfs
17309            -         apache           apache              1          0.06s          0.10s         922.2M         25716K           820K             8K         N-           -         S             0           0%         httpd
 1460            -         root             root                7          0.07s          0.08s             0K             0K             0K             0K         --           -         S             1           0%         glusterfs

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>atop quick start: an introduction to atop snapshotting</title>
      <link>https://edmondscommerce.github.io/atop-quick-start-an-introduction-to-atop-snapshotting.html</link>
      <pubDate>Wed, 12 Nov 2014 12:35:43 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/atop-quick-start-an-introduction-to-atop-snapshotting.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.atoptool.nl/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;atop&lt;/code&gt;&lt;/a&gt; is a server diagnostic tool to take snapshots of the server&amp;rsquo;s activity at specified intervals, so it&amp;rsquo;s useful for debugging intermitttent issues without watching the server constantly.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;atop&lt;/code&gt; is available to install from the repos with a &lt;code&gt;yum install atop&lt;/code&gt; or &lt;code&gt;apt-get install&lt;/code&gt; atop depending if you&amp;rsquo;re on a RedHat or Debian-based server. By default atop will take snapshots every 10 minutes.&lt;/p&gt;

&lt;p&gt;Omnce it&amp;rsquo;s been left running, you can view its snapshots by running &lt;code&gt;atop -r /var/log/atop/atop_&amp;lt;date&amp;gt;&lt;/code&gt; - you can see the dates that are logged by listing the &lt;code&gt;/var/log/atop&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Two key commands to use are &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;. Pressing &lt;code&gt;b&lt;/code&gt; will prompt for a time in the format hh:mm. Enter a time and it&amp;rsquo;ll jump to the nearest snapshot. From there &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt; (&lt;code&gt;shift-t&lt;/code&gt;) will jump you forwards and backwards through the logs respectively&lt;/p&gt;

&lt;p&gt;This is an example of atop&amp;rsquo;s output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
ATOP - ip-10-0-1-22                                                          2014/11/11  00:30:02                                                          -----------                                                           10m0s elapsed
PRC | sys    5.11s  | user  10.94s |               |              | #proc    104  | #trun      1 |               | #tslpi   149 |  #tslpu     0 |              |  #zombie    0 | clones    37 |               |              |  #exit     46 |
CPU | sys	1%  | user	2% |               | irq       0% |               | idle    197% |               | wait      0% |               |              |  steal     0% | guest     0% |  curf 2.50GHz |              |  curscal   ?% |
cpu | sys	1%  | user	1% |               | irq       0% |               | idle     98% |               | cpu001 w  0% |               |              |  steal     0% | guest     0% |  curf 2.50GHz |              |  curscal   ?% |
cpu | sys	0%  | user	0% |               | irq       0% |               | idle     99% |               | cpu000 w  0% |               |              |  steal     0% | guest     0% |  curf 2.50GHz |              |  curscal   ?% |
CPL | avg1    0.14  |              | avg5    0.09  |              | avg15   0.07  |              |               | csw   261923 |               | intr  279857 |               |              |               | numcpu     2 |               |
MEM | tot     7.3G  | free    5.8G | cache 176.1M  | dirty   0.8M | buff   14.2M  | slab   41.4M | slrec  20.1M  | shmem  36.9M |  shrss   0.0M | shswp   0.0M |               | vmbal   0.0M |               | hptot   0.0M |  hpuse   0.0M |
SWP | tot     0.0M  | free    0.0M |               |              |               |              |               |              |               |              |               |              |  vmcom   2.1G | vmlim   3.6G |               |
NET | transport     | tcpi   69012 | tcpo   74002  |              | udpi      93  | udpo      97 | tcpao     72  | tcppo    330 |               | tcprs    250 |  tcpie      0 | tcpor     24 |  udpnp      0 |              |  udpie	   0 |
NET | network       | ipi    69105 |               | ipo    74025 | ipfrw      0  |              | deliv  69105  |              |               |              |               |              |  icmpi      0 | icmpo	   0 |               |
NET | eth0    ----  | pcki   68732 |               | pcko   73654 | si  342 Kbps  | so  464 Kbps |               | coll       0 |  mlti       0 |              |  erri       0 | erro       0 |  drpi       0 |              |  drpo	   0 |
NET | lo      ----  | pcki     396 |               | pcko     396 | si   17 Kbps  | so   17 Kbps |               | coll       0 |  mlti       0 |              |  erri       0 | erro       0 |  drpi       0 |              |  drpo	   0 |
Window resized to 238x71...
  PID          TID         RUID             EUID              THR         SYSCPU         USRCPU          VGROW          RGROW          RDDSK          WRDSK         ST         EXC         S         CPUNR          CPU         CMD        1/3
 1335            -         root             root                7          2.51s          2.97s             0K             0K             0K             0K         --           -         S             1           1%         glusterfs
17247            -         apache           apache              1          0.40s          4.34s         46644K         66352K          3340K          3292K         --           -         S             1           1%         httpd
17274            -         apache           apache              1          0.36s          1.13s         35236K         54628K          1188K          2304K         --           -         S             0           0%         httpd
17267            -         apache           apache              1          0.24s          0.94s         55204K         83040K          2348K          2760K         --           -         S             1           0%         httpd
17310            -         apache           apache              1          0.26s          0.49s         961.9M         83508K           548K            12K         N-           -         S             1           0%         httpd
16708            -         varnish          varnish            19          0.28s          0.08s          4992K          5188K         32588K           448K         --           -         S             0           0%         varnishd
17248            -         apache           apache              1          0.11s          0.17s          7128K         24120K           364K          1788K         --           -         S             1           0%         httpd
17187            -         root             root                1          0.18s          0.04s           140K           140K             0K            24K         --           -         R             1           0%         atop
 1418            -         root             root                7          0.11s          0.10s             0K             0K             0K             0K         --           -         S             1           0%         glusterfs
17309            -         apache           apache              1          0.06s          0.10s         922.2M         25716K           820K             8K         N-           -         S             0           0%         httpd
 1460            -         root             root                7          0.07s          0.08s             0K             0K             0K             0K         --           -         S             1           0%         glusterfs

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>MySQL 5.1 to 5.5 Migration</title>
      <link>https://edmondscommerce.github.io/mysql/mysql-5-1-to-5-5-migration.html</link>
      <pubDate>Tue, 18 Sep 2012 11:09:09 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/mysql/mysql-5-1-to-5-5-migration.html</guid>
      <description>&lt;p&gt;According to pretty much every source there&amp;rsquo;s only one sensible way to migrate from 5.0, 5.1 or 5.2 to 5.5 of mysql (or mariadb/percona for that matter), and it&amp;rsquo;s not pretty (for a server with only two active magento installations for instance, this will take about 3 hours).&lt;/p&gt;

&lt;p&gt;The answer is that you have to do an sql dump and restore.  This does take an age but does at least provide the reassurance that you are going to have nice clean databases after the upgrade.&lt;/p&gt;

&lt;p&gt;So the commands are :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;mysqldump --all-databases --routines --events &amp;gt; fulldump.sql
mysqldump mysql --tables user &amp;gt; users.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then upgrade mysql binaries to 5.5 and empty the database directory - such as /var/lib/mysql and start mysql with it&amp;rsquo;s script (e.g. /etc/init.d/mysql start).   Note, if you&amp;rsquo;re using a distribution that doesn&amp;rsquo;t come with start scripts, you may want to run mysql_install as root before starting mysql however you start it.&lt;/p&gt;

&lt;p&gt;Then the following will restore the databases and users :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;mysql -u root &lt;span class=&#34;c1&#34;&gt;# add -p if you set up a default password when upgrading/installing 5.5&lt;/span&gt;
&lt;span class=&#34;se&#34;&gt;\r&lt;/span&gt; mysql
&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; users.sql
&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; fulldump.sql
FLUSH PRIVILEGES&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;se&#34;&gt;\q&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Transfer Server Permissions</title>
      <link>https://edmondscommerce.github.io/linux/transfer-server-permissions.html</link>
      <pubDate>Mon, 17 Sep 2012 15:00:01 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/transfer-server-permissions.html</guid>
      <description>&lt;p&gt;So sometimes you might have a restored backup without the correct permissions (whether that be because the backup didn&amp;rsquo;t store the permissions, the file system refused to take them, or you simply forgot to add the -p flag to tar!) and you want to copy the permissions from one machine to another.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a little script to do just that that we found whilst browsing the internet to do just that (uses perl and find) :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;find / -type f -o -type d 2&amp;gt;/dev/null &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; FILE&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;   perl -le&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;    printf &amp;quot;chmod %o \&amp;quot;%s\&amp;quot;\n&amp;quot;, 07777 &amp;amp; (stat)[2], $_&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;    for @ARGV&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;  &amp;#39;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$FILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt; &amp;gt; /tmp/file_perms.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you run that on the server with the correct permissions, then transfer the file to the server with the wrong permissions and run the file with the following command, it will fix the perms on that server :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sh /tmp/file_perms.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which may save a lot of transfer time restoring a new backup.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Performance Problems</title>
      <link>https://edmondscommerce.github.io/magento/magento-performance-problems.html</link>
      <pubDate>Mon, 16 Apr 2012 08:56:48 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-performance-problems.html</guid>
      <description>&lt;p&gt;If you are having performance issues with your Magento store and you are running on a dedicated or VPS server that you think should be up to the task of running your store properly but you continue to have performance problems then this post is for you.&lt;/p&gt;

&lt;p&gt;Having decent server specification is only the first step on the road to having a high performance Magento store. Without proper configuration your server is not going to make the best use of its resources and that could make the difference of literally seconds or even tens of seconds of page load time.&lt;/p&gt;

&lt;p&gt;The first and most important thing to check is that you are running a PHP opcode cacher such as APC. Opcode caching takes your PHP source code and compiles it to opcodes and then stores this in a cache. This opcode is actually what is run when people visit your store and the process of creating it, especially if you have a very large application with lots of file (like Magento), can be a real performance bottleneck. This problem is easily resolved by having APC installed and configured. If you are not sure, ring your hosting company and find out and if you don&amp;rsquo;t have it running, ask them to set it up for you.&lt;/p&gt;

&lt;p&gt;The next thing to check is MySQL configuration. The standard MySQL configuration defaults were set when server hardware and memory was a tiny fraction of what it is today and that means that the configuration is generally way too sparse with allocation of memory for caching and other optimisations. Tweaking MySQL can be a little tricky, its definitely not something you should do if you are not sure, but it is well worth getting someone to optimise your MySQL configuration.&lt;/p&gt;

&lt;p&gt;After that, the next major performance gain with Magento is to make proper use of block caching. Magento has a brilliant built in feature where every block (page section) can be cached so that next time someone visits the page, the logic used to generate that section of page (for example a best sellers list) does not have to be run, we simply redisplay the cached copy of that block&amp;rsquo;s HTML.&lt;/p&gt;

&lt;p&gt;Beyond these three steps there are still many more things that can be done to improve the performance of your Magento store. If you would like professional help getting the best out of your server and Magento with a view to getting the lowest possible page load speeds then get in touch with Edmonds Commerce today.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing Robust Bash Shell Scripts</title>
      <link>https://edmondscommerce.github.io/bash/writing-robust-bash-shell-scripts.html</link>
      <pubDate>Sun, 15 Jan 2012 19:28:02 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash/writing-robust-bash-shell-scripts.html</guid>
      <description>&lt;p&gt;Found this great article on writing bash scripts defensively. Glad to say most of the advice we are already following with our bash scripts however there are a couple of new things I intend to roll in on Monday.&lt;/p&gt;

&lt;p&gt;Recommended reading for anyone scripting in Bash.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.davidpashley.com/articles/writing-robust-shell-scripts.html&#34;&gt;http://www.davidpashley.com/articles/writing-robust-shell-scripts.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Run mysql commands with plesk username</title>
      <link>https://edmondscommerce.github.io/plesk/run-mysql-commands-with-plesk-username.html</link>
      <pubDate>Wed, 14 Sep 2011 15:33:04 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/plesk/run-mysql-commands-with-plesk-username.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
There&amp;rsquo;s a little-known trick to using the plesk admin user password to access the mysql database that works on many a plesk machine.&lt;/p&gt;

&lt;p&gt;Effectively the plesk admin password is stored in /etc/psa/.psa.shadow - in plain text.&lt;/p&gt;

&lt;p&gt;This means that the following commands for instance work very well as root :
&lt;ul&gt;
    &lt;li&gt;mysql -uadmin -p&lt;code&gt;cat /etc/psa/.psa.shadow&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;mytop -uadmin -p&lt;code&gt;cat /etc/psa/.psa.shadow&lt;/code&gt; -d[databasename]&lt;/li&gt;
    &lt;li&gt;mysqldump &amp;ndash;user=admin &amp;ndash;password=&lt;code&gt;cat /etc/psa/.psa.shadow&lt;/code&gt; [databasename] &amp;gt; /dev/null&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;Enjoy automating mysql stuff on your plesk servers!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>