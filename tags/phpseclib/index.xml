<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phpseclib on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/phpseclib/</link>
    <description>Recent content in Phpseclib on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Aug 2016 11:49:53 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/phpseclib/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Magento 2 SSH Library</title>
      <link>https://edmondscommerce.github.io/magento-2-ssh-library/</link>
      <pubDate>Thu, 18 Aug 2016 11:49:53 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-2-ssh-library/</guid>
      <description>&lt;p&gt;One of the composer dependcies in Magento 2 is &lt;a href=&#34;https://github.com/phpseclib/phpseclib&#34; target=&#34;_blank&#34;&gt;phpseclib&lt;/a&gt;. This means for integrations using ssh you can use this instad of needing the php ssh module for your integration you can use this module.&lt;/p&gt;

&lt;p&gt;To run a remote ssh command you can use the following snippet as an example for either the straight echo or the callback way of dealing with the result:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;use phpseclib\Net\SSH2;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$ssh = new SSH2(&amp;#39;my-ssh-server.com&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$ssh-&amp;gt;login($username, $password);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;if($ssh-&amp;gt;isConnected()) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	echo $ssh-&amp;gt;exec(&amp;#39;ls -la&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	$ssh-&amp;gt;exec(&amp;#39;ls -la&amp;#39; function($result){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;		echo $result&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	});&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To do a file transfer use the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;use phpseclib\Net\SFTP;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$sftp = new SFTP(&amp;#39;my-ssh-server.com&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$sftp-&amp;gt;login($username, $password);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;if($sftp-&amp;gt;isConnected()) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	echo $sftp-&amp;gt;get(&amp;#39;file1.txt&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can also use the php streams with the libary by running the following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;use phpseclib\Net\SFTP\Stream;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;Stream::register()&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$txt = fopen(&amp;#39;sftp://user:pass@host.com:/home/user/file.txt&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>