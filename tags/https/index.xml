<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Https on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/https/</link>
    <description>Recent content in Https on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Feb 2012 17:11:45 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/https/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Mixed Content HTTPS Red Line SSL Google Chrome</title>
      <link>http://edmondscommerce.github.io/debugging/mixed-content-https-red-line-ssl-google-chrome.html</link>
      <pubDate>Mon, 13 Feb 2012 17:11:45 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/debugging/mixed-content-https-red-line-ssl-google-chrome.html</guid>
      <description>&lt;p&gt;If Chrome is displaying mix content errors this means that Chrome thinks that some of the resources on the page where loaded over HTTP rather than HTTPS. But one behaviour of Chrome that might catch you out is that if Chrome at any point on a domain encountered a page with mixed content, it will then treat the whole site as having mixed content even if a given single page does not have mixed content. Chrome is unlikely to tell you this is the reason a single page has mixed content, the best way to tell is to keep closing chrome, starting a new session and browse until you get mixed content.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Got the Insecure Content on a Secure HTTPs Page Problem - Easy Solution</title>
      <link>http://edmondscommerce.github.io/security/got-the-insecure-content-on-a-secure-https-page-problem-easy-solution.html</link>
      <pubDate>Thu, 12 Jan 2012 12:28:54 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/security/got-the-insecure-content-on-a-secure-https-page-problem-easy-solution.html</guid>
      <description>&lt;p&gt;Often you will see SSL warnings or errors related to insecure content being displayed on a secure page.&lt;/p&gt;

&lt;p&gt;This could be as simple as one javascript file or image that is being included via http rather than https, though some times this can be a bit tricky to track down.&lt;/p&gt;

&lt;p&gt;The easiest solution is to hit this site:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.whynopadlock.com/&#34;&gt;http://www.whynopadlock.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will give you a clear report of the problems and should help you quickly find and fix them.&lt;/p&gt;

&lt;p&gt;Alternatively if you use Chrome you may see the details in the Javascript console.&lt;/p&gt;

&lt;p&gt;Once you know what elements are being called by http as opposed to https, you simply need to make them use https or remove them altogether.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ajax Silently Failing in HTTPS but fine in HTTP</title>
      <link>http://edmondscommerce.github.io/javascript/ajax-silently-failing-in-https-but-fine-in-http.html</link>
      <pubDate>Mon, 07 Mar 2011 16:41:21 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/javascript/ajax-silently-failing-in-https-but-fine-in-http.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are struggling to debug why some ajax, perhaps using jquery etc is working fine when you access the page via http, but if you use https then it fails silently with very little error messaging to work on then this could be your solution.&lt;/p&gt;

&lt;p&gt;Basically, although you have accessed the page over HTTPS, if there are any insecure elements on the page then your ajax call will default to http and will then fail silently thanks to cross domain policy problems.&lt;/p&gt;

&lt;p&gt;If you debug in chrome, you do get a meaningful error message but if like me you generally prefer working in Firefox and Firebug then you are up the creek.&lt;/p&gt;

&lt;p&gt;Double check your source code for http:// and also check out live http headers for insecure calls.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>