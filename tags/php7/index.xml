<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php7 on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/php7/</link>
    <description>Recent content in Php7 on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 10:48:46 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/php7/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Test If Your Magento Site Is Php7 Ready</title>
      <link>https://edmondscommerce.github.io/test-if-your-magento-site-is-php7-ready/</link>
      <pubDate>Thu, 02 Mar 2017 10:48:46 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/test-if-your-magento-site-is-php7-ready/</guid>
      <description>

&lt;p&gt;After you&amp;rsquo;ve installed the &lt;a href=&#34;https://github.com/Inchoo/Inchoo_PHP7&#34; target=&#34;_blank&#34;&gt;Inchoo PHP7 module&lt;/a&gt; you&amp;rsquo;ll likely
want to check if your custom or 3rd party module code is also PHP7 compatible. In order to determine
this you can run a &lt;a href=&#34;https://en.wikipedia.org/wiki/Static_program_analysis&#34; target=&#34;_blank&#34;&gt;static analysis&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;phpcodesniffer&#34;&gt;PHPCodeSniffer&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34; target=&#34;_blank&#34;&gt;PHPCodeSniffer&lt;/a&gt; is a PHP static analysis tool which can
be used to test your code against a set of coding standards.&lt;/p&gt;

&lt;h1 id=&#34;phpcompatibility&#34;&gt;PHPCompatibility&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wimg/PHPCompatibility&#34; target=&#34;_blank&#34;&gt;PHPCompatibility&lt;/a&gt; is a coding standard which you can use
to test if your code is compatible with a certain (or range of) PHP versions. In our case we&amp;rsquo;re only
interested in PHP7.&lt;/p&gt;

&lt;h1 id=&#34;running-the-analysis&#34;&gt;Running the Analysis&lt;/h1&gt;

&lt;p&gt;Once you&amp;rsquo;ve install both PHPCodeSniffer and PHPCompatibility (by following the instructions on their
respective GitHub pages) we should be ready to run our analysis.&lt;/p&gt;

&lt;p&gt;Use the following command to run your analysis:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;./vendor/bin/phpcs -p --standard&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;PHPCompatibility --runtime-set testVersion 7.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As the command is running you should see a summary of the tested files. &lt;code&gt;W&lt;/code&gt; means warning and &lt;code&gt;E&lt;/code&gt;
means error.&lt;/p&gt;

&lt;p&gt;After the command has run you should see a detailed list of all the potential compatibility issues.&lt;/p&gt;

&lt;p&gt;Once these have been fixed or mitigated you should be ready for PHP7.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Libsodium and Pecl-libsodium on Centos7 and Php7</title>
      <link>https://edmondscommerce.github.io/installing-libsodium-and-pecl-libsodium-on-centos7-and-php7/</link>
      <pubDate>Wed, 02 Nov 2016 19:46:28 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/installing-libsodium-and-pecl-libsodium-on-centos7-and-php7/</guid>
      <description>&lt;p&gt;If you would like to work with state of the art encryption techniques in your PHP project then you need to check out &lt;a href=&#34;https://download.libsodium.org/doc/&#34; target=&#34;_blank&#34;&gt;libsodium&lt;/a&gt; and the corresponding PHP library, &lt;a href=&#34;https://pecl.php.net/package/libsodium&#34; target=&#34;_blank&#34;&gt;pecl-libsodium&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Getting it installed on your centos7 and PHP7 box though can be a little tricky&lt;/p&gt;

&lt;p&gt;Here is a bash script which will install all the required depencies and get it working:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env bash

if [[ &amp;quot;$(whoami)&amp;quot; != &amp;quot;root&amp;quot; ]]
then
    echo &amp;quot;please run this as root&amp;quot;
    exit 1
fi

yum install \
    php70w-pear \
    php70w-devel \
    gcc \
    curl-devel \
    libsodium \
    libsodium-devel

pecl install libsodium

echo &amp;quot;extension=libsodium.so&amp;quot; &amp;gt;&amp;gt; /etc/php.ini

php -i | grep sodium
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this package you can now do all kinds of enterprise level cryptography, suggest you have a read of this &lt;a href=&#34;https://paragonie.com/book/pecl-libsodium&#34; target=&#34;_blank&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>