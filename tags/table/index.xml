<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Table on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/tags/table/</link>
    <description>Recent content in Table on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Jan 2013 16:27:02 +0000</lastBuildDate>
    <atom:link href="http://example.com/tags/table/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>&#34;Base table or view already exists: 1050 Table ‘*’ already exists&#34; After Deleting Tables</title>
      <link>http://example.com/magento/base-table-or-view-already-exists-1050-table-already-exists-after-deleting-tables.html</link>
      <pubDate>Tue, 08 Jan 2013 16:27:02 +0000</pubDate>
      
      <guid>http://example.com/magento/base-table-or-view-already-exists-1050-table-already-exists-after-deleting-tables.html</guid>
      <description>&lt;p&gt;If for example you&amp;rsquo;re removing an extension and want to clear out its information from the database, you&amp;rsquo;ll need to establish the rows and tables it&amp;rsquo;s inserted, as well as some standard Magento table entries.&lt;/p&gt;

&lt;p&gt;So you&amp;rsquo;ve removed everything, cleared your cache and now you go to the homepage to check everything is all good, and boom, PDOException:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Base table or view already exists: 1050 Table ‘*’ already exists
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In my case it was &lt;code&gt;salesrule&lt;/code&gt;, which made me question why it was trying to create the table afresh. The reason I got this is that I&amp;rsquo;d erroneously removed salesrule_setup from core_resource, and therefore Magento was reinstalling the module. Reinstating the row, and clearing my cache solved the issue&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Run Multiple MySQL Queries in a Single Function</title>
      <link>http://example.com/php/run-multiple-mysql-queries-in-a-single-function.html</link>
      <pubDate>Wed, 14 Nov 2012 12:45:09 +0000</pubDate>
      
      <guid>http://example.com/php/run-multiple-mysql-queries-in-a-single-function.html</guid>
      <description>&lt;p&gt;If you want to be able to run multiple queries in a single function call, for example doing the classic drop table blah; create table blah; then you might like this function.&lt;/p&gt;

&lt;p&gt;The use case is for things like database migration systems which you might copy and paste chunks of SQL including multiple queries from things like phpMyAdmin&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Run multiple queries passed in as a single string&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * This is optimised for copying and pasting from phpMyAdmin&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Handy for things like database migration systems&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * @param string $sql  multiple queries terminated with ; and a new line&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;function multiQuery($sql)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $sqls = preg_split(&amp;#39;%;$%m&amp;#39;, trim($sql));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    foreach ($sqls as $q) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (empty($q)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            continue;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        mysql_query($q); //suggest you replace this with your custom query function or if not throw in some extra error checking at least&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Inline Translate Not Working &#43; Solution</title>
      <link>http://example.com/magento/magento-inline-translate-not-working-solution.html</link>
      <pubDate>Fri, 04 May 2012 09:04:03 +0000</pubDate>
      
      <guid>http://example.com/magento/magento-inline-translate-not-working-solution.html</guid>
      <description>&lt;p&gt;If you are puzzled as to why inline translate in Magento is not saving a particular translation, this could be your issue.&lt;/p&gt;

&lt;p&gt;Inline translate uses the table core_translation to store the translations.&lt;/p&gt;

&lt;p&gt;The fields that store the data are set to VARCHAR(255) fields.&lt;/p&gt;

&lt;p&gt;If your source string is longer than 255 characters, it will fail silently to save the translation.&lt;/p&gt;

&lt;p&gt;The simplest solution is to shorten the source string and stick to using inline translate on strings that are shorter than 255 characters.&lt;/p&gt;

&lt;p&gt;You could alternatively modify the table but we prefer not to do that kind of thing unless we really have to.&lt;/p&gt;

&lt;p&gt;Another workaround for text sections that need to be long is to simply use a static block instead.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Copying Text from PDF table is not formatted correctly &#43; solution</title>
      <link>http://example.com/ubuntu/copying-text-from-pdf-table-is-not-formatted-correctly-solution.html</link>
      <pubDate>Fri, 02 Dec 2011 17:41:53 +0000</pubDate>
      
      <guid>http://example.com/ubuntu/copying-text-from-pdf-table-is-not-formatted-correctly-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you need to extract the information from a PDF table sometimes when you copy and paste it into a text editor the formatting is incorrect making the information useless.&lt;/p&gt;

&lt;p&gt;In cases like this, you can use pdfedit to extract the text in the correct formatting and then do what you need with it.&lt;/p&gt;

&lt;p&gt;To use the program first make sure it&amp;rsquo;s installed. If not install it like this&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
sudo apt-get install pdfedit
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;then use it to open the PDF. Click through the the correct page and then click Page -&amp;gt; Extract Text From Page&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Very High Speed Batch Update Multiple Rows of a Table in Single Query</title>
      <link>http://example.com/mysql/very-high-speed-batch-update-multiple-rows-of-a-table-in-single-query.html</link>
      <pubDate>Thu, 13 Oct 2011 14:00:26 +0000</pubDate>
      
      <guid>http://example.com/mysql/very-high-speed-batch-update-multiple-rows-of-a-table-in-single-query.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you need to update a large number of rows on a single table then your first reaction may be to write a loop that updates one row at a time.&lt;/p&gt;

&lt;p&gt;Of course if the table is large then this can result in a very large number of SQL queries.&lt;/p&gt;

&lt;p&gt;Taking a bit of inspiration from &lt;a href=&#34;http://www.kavoir.com/2009/05/mysql-update-multiple-rows-with-one-single-query.html&#34;&gt;this post&lt;/a&gt; I have put together this simple PHP function that will allow you to update as many rows as you want.&lt;/p&gt;

&lt;p&gt;The trade off is basically memory usage as you build up a big array of row update information preparing for the batch. For this reason you may want to tune the number of rows you update per query.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function bulkUpdateSingleColumn($table, $id_column, $update_column, array &amp;amp;$idstovals){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $sql = &amp;quot;update $table set $update_column = CASE $id_column &amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        foreach($idstovals as $id=&amp;gt;$val){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $sql .= &amp;quot; WHEN &amp;#39;$id&amp;#39; THEN &amp;#39;$val&amp;#39; \n&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $sql .= &amp;quot; END &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        WHERE $id_column in (&amp;quot; . implode(&amp;#39;,&amp;#39;, array_keys($idstovals)) . &amp;quot;)&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;//debugging info&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        echo &amp;#39;&amp;lt;small&amp;gt;&amp;#39;.$sql.&amp;#39;&amp;lt;/small&amp;gt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $idstovals=array();        &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        db_query($sql);       &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        done();        &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>osCommerce Checkout Problems &#43; Solution</title>
      <link>http://example.com/oscommerce/oscommerce-checkout-problems-solution.html</link>
      <pubDate>Tue, 19 Jan 2010 10:33:14 +0000</pubDate>
      
      <guid>http://example.com/oscommerce/oscommerce-checkout-problems-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If your osCommerce checkout starts behaving badly and bits of info seem to go missing eg billing address then you should definitely try this fix before you tear your hair out completely.&lt;/p&gt;

&lt;p&gt;Most osCommerce installs store session information to a MySQL table called (suprisingly) sessions.&lt;/p&gt;

&lt;p&gt;Sometimes (I have only seen this twice on umpteen osCommerce sites) the sessions table will become corrupted. The irritating thing is that if this happens it seems that the site will not stop working completely with a useful error message, but instead will continue to work but will behave very strangely.&lt;/p&gt;

&lt;p&gt;If your osCommerce site is behaving strangely then try this fix.&lt;/p&gt;

&lt;p&gt;Open phpMyAdmin and select your SQL database and then copy and paste the following into the SQL section and hit run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;REPAIR TABLE `sessions`;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Build Table from File PHP Function</title>
      <link>http://example.com/php/build-table-from-file-php-function.html</link>
      <pubDate>Thu, 03 Sep 2009 12:27:39 +0000</pubDate>
      
      <guid>http://example.com/php/build-table-from-file-php-function.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
This little PHP function will allow you to import a csv or tab etc delimited text file into a database table. Handy if you need it :)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function build_table_from_file($tablename, $filepath, $delim=&amp;quot;\t&amp;quot;) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    db_query(&amp;quot;DROP TABLE IF EXISTS $tablename&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $fp=fopen($filepath, &amp;#39;r&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $headers=false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    while($r=(($delim==&amp;#39;csv&amp;#39;)?fgetcsv($fp):fgets($fp))) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if($delim!=&amp;#39;csv&amp;#39;){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $r=explode($delim, $r);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if(!$headers) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            foreach($r as $h){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                $headers[]=trim($h);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $sql = &amp;quot;CREATE TABLE $tablename&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                         (&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                            `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            foreach($headers as $h) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                $sqls[]=&amp;quot; `&amp;quot; . db_in($h) . &amp;quot;` TEXT NOT NULL &amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $sql .= implode(&amp;#39;, &amp;#39;, $sqls) . &amp;quot;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                        ) ENGINE = MYISAM &amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            db_query($sql);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            continue;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $sql = &amp;quot;insert into $tablename set &amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $sqls=array();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        foreach($headers as $k=&amp;gt;$h) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $sqls[] = &amp;quot;`$h` = &amp;#39;&amp;quot; . db_in($r[$k]) . &amp;quot;&amp;#39;&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $sql .= implode(&amp;#39;, &amp;#39;, $sqls);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        db_query($sql);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        pbar();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>MySQL Desc Table</title>
      <link>http://example.com/mysql/web-development/php/ecommerce/mysql-desc-table.html</link>
      <pubDate>Wed, 11 Feb 2009 15:22:34 +0000</pubDate>
      
      <guid>http://example.com/mysql/web-development/php/ecommerce/mysql-desc-table.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are feeling lazy, or would like to build in some future proofness into your system, you can use the MySQL Desc query to get table column information and then use this information to create dynamic SQL insertion strings.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$cols_query = db_query(&amp;quot;desc table&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;while($cq = mysql_fetch_assoc($cols_query)){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	$cols[]=$cq;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($cols as $c){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	if(!empty($_POST[$c[&amp;#39;Field&amp;#39;]])){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;		$sets[] = $c[&amp;#39;Field&amp;#39;] . &amp;quot; = &amp;#39;&amp;quot; . mysql_real_escape_string($_POST[$c[&amp;#39;Field&amp;#39;]]) . &amp;quot;&amp;#39;&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;mysql_query(&amp;quot;insert into table set &amp;quot; . implode(&amp;#39;, &amp;#39;, $sets));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Check if MySQL Table Exists</title>
      <link>http://example.com/php/check-if-mysql-table-exists.html</link>
      <pubDate>Tue, 27 Jan 2009 16:23:29 +0000</pubDate>
      
      <guid>http://example.com/php/check-if-mysql-table-exists.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Sometime you need a PHP script to check for the existence of a MySQL table. This function achieves that for you.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function db_table_exists($table){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	$exists = false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	$tables_query = db_query(&amp;quot;SHOW TABLES FROM &amp;quot; . MYSQL_DB);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	while($t = mysql_fetch_assoc($tables_query)){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;		foreach($t as $k=&amp;gt;$v){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;			if($v == $table){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;				$exists = true;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;				break;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;			}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;		}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;	return $exists;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>