<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Netbeans on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/netbeans/</link>
    <description>Recent content in Netbeans on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Dec 2012 17:00:20 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/netbeans/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PHPStorm: Get More Info on Auto-Complete (like netbeans)</title>
      <link>https://edmondscommerce.github.io/phpstorm/phpstorm-get-more-info-on-auto-complete-like-netbeans.html</link>
      <pubDate>Thu, 13 Dec 2012 17:00:20 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm/phpstorm-get-more-info-on-auto-complete-like-netbeans.html</guid>
      <description>&lt;p&gt;All developers love code completion, but sometimes the minimalist info that can come up in PHPStorm can be not quite enough.&lt;/p&gt;

&lt;p&gt;Netbeans gave an excerpt that gave plenty of information from the docblock, and PHPStorm can do too, it just defaults to off.&lt;/p&gt;

&lt;p&gt;The setting is under Editor-&amp;gt;Code Completion and is &amp;ldquo;Show full signatures&amp;rdquo;.  The good news is it is an &amp;ldquo;IDE Setting&amp;rdquo; so it persists for all projects, the bad news is that that means the setting will be forgotten about before you next reinstall and want it again.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tip: PhpStorm &#34;Select in Projects&#34; - Easier version</title>
      <link>https://edmondscommerce.github.io/phpstorm/tip-phpstorm-select-in-projects-easier-version.html</link>
      <pubDate>Thu, 08 Nov 2012 18:26:28 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm/tip-phpstorm-select-in-projects-easier-version.html</guid>
      <description>&lt;p&gt;Followers of this blog will remember the &lt;a title=&#34;Replicate Netbeans “Select in project” in phpstorm&#34; href=&#34;http://www.edmondscommerce.co.uk/phpstorm/replicate-netbeans-select-in-project-in-phpstorm/&#34;&gt;Replicate Netbeans “Select in project” in phpstorm&lt;/a&gt; post which gave a handy key combo to select the current file in the project window.&lt;/p&gt;

&lt;p&gt;It has been brought to our attention that there&amp;rsquo;s also a button to do this with the mouse in one click!  At the top of the Project window, there&amp;rsquo;s a cross-hair/target icon labelled a rather cryptic &amp;ldquo;Scroll from Source&amp;rdquo;.  Click that and it does what netbeans users will be looking for as &amp;ldquo;Select in Projects&amp;rdquo;&lt;/p&gt;

&lt;p&gt;So there you have it, &amp;ldquo;Scroll from Source&amp;rdquo;, is the magic words that you want.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHPStorm 5 Released</title>
      <link>https://edmondscommerce.github.io/phpstorm/phpstorm-5-released.html</link>
      <pubDate>Thu, 13 Sep 2012 09:07:03 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm/phpstorm-5-released.html</guid>
      <description>&lt;p&gt;At Edmonds Commerce we were staunch Netbeans users for years but we always struggled with large scale projects (&lt;a href=&#34;https://edmondscommerce.github.io/platforms/magento/&#34; title=&#34;Magento Platform Overview&#34;&gt;Magento&lt;/a&gt; I&amp;rsquo;m looking at you) meaning that Netbeans would sometimes really crawl as it tried to reindex thousands of PHP files.&lt;/p&gt;

&lt;p&gt;After a recent upgrade of our Linux desktop environment to the Mate edition of Linux Mint 13, Netbeans seemed to perform even worse and had a few bugs as well. At the same time we had been evaluating other IDE options including Eclipse and Zend Studio (which we all have free licences for thanks to being Zend Certified Developers).&lt;/p&gt;

&lt;p&gt;In the end though, the one we tried that really impressed was PHPStorm. It isn&amp;rsquo;t free open source but it isn&amp;rsquo;t too expensive, especially considering it is perhaps the single most important and highly used tool of a professional PHP developer.&lt;/p&gt;

&lt;p&gt;Now a new version has come out. Downloading and upgrading took all of 5 minutes and we are now going to enjoy better performance and some nice new features. I have yet to really test out the new version so I can&amp;rsquo;t really report on them but they look good. You can read about all the new features in version 5 &lt;a href=&#34;http://www.jetbrains.com/phpstorm/whatsnew/&#34; title=&#34;PHPStorm 5 Features&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Replicate Netbeans &#34;Select in project&#34; in phpstorm</title>
      <link>https://edmondscommerce.github.io/phpstorm/replicate-netbeans-select-in-project-in-phpstorm.html</link>
      <pubDate>Mon, 10 Sep 2012 14:41:36 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm/replicate-netbeans-select-in-project-in-phpstorm.html</guid>
      <description>&lt;p&gt;Netbeans has a handy feature when you right-click a file in the editor window to take you to the file in the project (file manager tab) view.&lt;/p&gt;

&lt;p&gt;To get phpstorm to do this is not as simple but is handily mappable to a shortcut key.&lt;/p&gt;

&lt;p&gt;To enable this, go to Settings-&amp;gt;Keymap-&amp;gt;Main menu-&amp;gt;Navigate-&amp;gt;Select in&amp;hellip; and choose a key.  I set it to Alt+P, so now I press Alt+P then press enter to go to the current file in the project view.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Netbeans Xdebug &#34;Waiting for connection&#34; Ubuntu 12.04 Mint13 &#43;SOLUTION</title>
      <link>https://edmondscommerce.github.io/netbeans/netbeans-xdebug-waiting-for-connection-ubuntu-12-04-mint13-solution.html</link>
      <pubDate>Thu, 21 Jun 2012 17:07:20 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/netbeans/netbeans-xdebug-waiting-for-connection-ubuntu-12-04-mint13-solution.html</guid>
      <description>&lt;p&gt;If you have issues with netbeans and xdebug not connecting on recent distros, you might find that netbeans is listening on tcp6 and xdebug connecting on plain tcp.&lt;/p&gt;

&lt;p&gt;To check if this is the case, run the following command whilst netbeans is &amp;ldquo;waiting for connection&amp;rdquo; (change 9000 if you&amp;rsquo;ve set a different port) :-&lt;/p&gt;

&lt;p&gt;&lt;code&gt;netstat -aln | grep 9000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;if you get a line similar to the following (specifically tcp6 and not just tcp), it may well be that xdebug can&amp;rsquo;t connect over ipv6 :-
&lt;code&gt;tcp6       0      0 :::9000                 :::*                    LISTEN&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;One solution is to disable ipv6, which can be done by creating the file /etc/sysctl.d/10-disable-ipv6.conf with the following contents :-
&lt;code&gt;net.ipv6.conf.all.disable_ipv6=1
net.ipv6.conf.default.disable_ipv6=1
net.ipv6.conf.lo.disable_ipv6=1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;then run (as root or sudo)
&lt;code&gt;sysctl -p /etc/sysctl.d/10-disable-ipv6.conf&lt;/code&gt;
and restart netbeans.  Suddenly, netbeans will listen on tcp (ipv4) and xdebug will connect.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux Mint 13 (MATE) Fix Ugly Netbeans (or other Java)</title>
      <link>https://edmondscommerce.github.io/netbeans/linux-mint-13-mate-fix-ugly-netbeans-or-other-java.html</link>
      <pubDate>Tue, 12 Jun 2012 16:26:12 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/netbeans/linux-mint-13-mate-fix-ugly-netbeans-or-other-java.html</guid>
      <description>&lt;p&gt;If you are using a Java application on your nice new Linux Mint desktop and are wondering why its so damn ugly, this might be your solution.&lt;/p&gt;

&lt;p&gt;It looks like there is an issue with Java detecting your standard system style, fonts etc so it reverts to something pretty hideous.&lt;/p&gt;

&lt;p&gt;One easy solution to at least get it looking alright (and also fixing a bug with menus and maximisation) is to set your netbeans conf to the following.&lt;/p&gt;

&lt;p&gt;Simply go to your netbeans folder and look for an etc folder.&lt;/p&gt;

&lt;p&gt;Inside there is a file called netbeans.conf&lt;/p&gt;

&lt;p&gt;Back that up (rename to netbeans.conf.backup) and create a new file called netbeans.conf&lt;/p&gt;

&lt;p&gt;Then paste this in:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;

# ${HOME} will be replaced by JVM user.home system property
netbeans_default_userdir=&amp;quot;${HOME}/.netbeans/7.1.2&amp;quot;

# Options used by NetBeans launcher by default, can be overridden by explicit
# command line switches:
netbeans_default_options=&amp;quot;-J-client -J-Xss2m -J-Xms32m -J-XX:PermSize=32m -J-Dapple.laf.useScreenMenuBar=true -J-Dapple.awt.graphics.UseQuartz=true -J-Dsun.java2d.noddraw=true -J-Dsun.zip.disableMemoryMapping=true&amp;quot;

#trying to fix teh UGLY
netbeans_default_options=&amp;quot;${netbeans_default_options} --laf Nimbus -J-Dswing.aatext=true -J-Dawt.useSystemAAFontSettings=lcd&amp;quot;

# Note that default -Xmx and -XX:MaxPermSize are selected for you automatically.
# You can find these values in var/log/messages.log file in your userdir.
# The automatically selected value can be overridden by specifying -J-Xmx or
# -J-XX:MaxPermSize= here or on the command line.

# If you specify the heap size (-Xmx) explicitly, you may also want to enable
# Concurrent Mark &amp;amp; Sweep garbage collector. In such case add the following
# options to the netbeans_default_options:
# -J-XX:+UseConcMarkSweepGC -J-XX:+CMSClassUnloadingEnabled -J-XX:+CMSPermGenSweepingEnabled
# (see http://wiki.netbeans.org/FaqGCPauses)

# Default location of JDK, can be overridden by using --jdkhome &amp;lt;dir&amp;gt;:
netbeans_jdkhome=&amp;quot;/opt/java/64/jre1.7.0_04&amp;quot;

# Additional module clusters, using ${path.separator} (&#39;;&#39; on Windows or &#39;:&#39; on Unix):
#netbeans_extraclusters=&amp;quot;/absolute/path/to/cluster1:/absolute/path/to/cluster2&amp;quot;

# If you have some problems with detect of proxy settings, you may want to enable
# detect the proxy settings provided by JDK5 or higher.
# In such case add -J-Djava.net.useSystemProxies=true to the netbeans_default_options.

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Netbeans Uppercase, Lowercase and Switch Case - useful key combo</title>
      <link>https://edmondscommerce.github.io/netbeans/netbeans-uppercase-lowercase-and-switch-case-useful-key-combo.html</link>
      <pubDate>Mon, 14 May 2012 11:34:13 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/netbeans/netbeans-uppercase-lowercase-and-switch-case-useful-key-combo.html</guid>
      <description>&lt;p&gt;So, this is documented in the manual, but isn&amp;rsquo;t obvious in any menu :-&lt;/p&gt;

&lt;p&gt;To uppercase a selection, press Control+U then U.
To lowercase a selection, press Control+U then L.
and to reverse case in the selection (for when you have typed a whole line of code without checking your caps lock!), press Control+U then S.&lt;/p&gt;

&lt;p&gt;Really useful but not well known.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Netbeans AutoComplete on Magento Objects called by Mage::getModel()</title>
      <link>https://edmondscommerce.github.io/magento/netbeans-autocomplete-on-magento-objects-called-by-magegetmodel.html</link>
      <pubDate>Thu, 01 Mar 2012 11:00:05 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/netbeans-autocomplete-on-magento-objects-called-by-magegetmodel.html</guid>
      <description>&lt;p&gt;As we have been working with the various versions of Magento its nice to see more and more use of DocBlock notation to help IDEs auto suggest and auto complete methods etc when working with objects.&lt;/p&gt;

&lt;p&gt;However the style is inconsistent and with a few subtle tweaks would be much, much better.&lt;/p&gt;

&lt;h3&gt;Template Files, What is $this?&lt;/h3&gt;

&lt;p&gt;First one is the @see syntax often used in .phtml files to describe which block object is in play as $this. Whilst that is useful to read, it is totally useless to the IDE.&lt;/p&gt;

&lt;p&gt;For example have a look at
&lt;b&gt;&lt;a href=&#34;https://github.com/LokeyCoding/magento-mirror/blob/magento-1.6/app/design/frontend/base/default/template/catalog/product/view.phtml&#34;&gt;app/design/frontend/base/default/template/catalog/product/view.phtml&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Product view template&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * @see Mage_Catalog_Block_Product_View&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * @see Mage_Review_Block_Product_View&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;All we need to do is add this underneath&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;/*&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * @var $this Mage_Catalog_Block_Product_View&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And now when working with in the .phtml file, $this will auto complete for you.&lt;/p&gt;

&lt;blockquote&gt;&lt;i&gt;Eagle eyed readers may think that as $this could be either this is perhaps a bad idea, however the Review one actually extends the Catalog one overriding some functionality, it is basically the same.&lt;/i&gt;&lt;/blockquote&gt;

&lt;h3&gt;$Model = Mage::getModel() why always the Abstract?&lt;/h3&gt;

&lt;p&gt;Another one that I have just finally figured out is the correct way to get Netbeans to recognise exactly what class an object is when called with Mage::getModel() or Mage::getSingleton().&lt;/p&gt;

&lt;p&gt;You might have auto complete suggesting that this is an instance of Mage_Core_Model_Abstract.&lt;/p&gt;

&lt;p&gt;Whilst effectively true, this is unlikely to be useful for you in your context, you need to know exactly what Model class it is.&lt;/p&gt;

&lt;p&gt;The reason that Netbeans thinks its Mage_Core_Model_Abstract is because the docblock in
&lt;b&gt;&lt;a href=&#34;https://github.com/LokeyCoding/magento-mirror/blob/magento-1.6/app/Mage.php&#34;&gt;app/Mage.php&lt;/a&gt;&lt;/b&gt;
describes this as the return value of this method.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;    /**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * Retrieve model object&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @link    Mage_Core_Model_Config::getModelInstance&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param   string $modelClass&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param   array $arguments&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @return  Mage_Core_Model_Abstract&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public static function getModel($modelClass = &amp;#39;&amp;#39;, $arguments = array())&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        return self::getConfig()-&amp;gt;getModelInstance($modelClass, $arguments);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I often see blocks of code where the author is attempting to get auto complete working properly by using this syntax&lt;/p&gt;

&lt;p&gt;see
&lt;b&gt;&lt;a href=&#34;https://github.com/LokeyCoding/magento-mirror/blob/magento-1.6/app/code/core/Mage/Customer/controllers/AccountController.php&#34;&gt;app/code/core/Mage/Customer/controllers/AccountController.php&lt;/a&gt;&lt;/b&gt;
createPostAction()&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;/* @var $customerForm Mage_Customer_Model_Form */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$customerForm = Mage::getModel(&amp;#39;customer/form&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is generally the right way to do it, however I think the docblock specifying the return value on Mage:getModel clobbers it.&lt;/p&gt;

&lt;p&gt;The simple solution is to move the docblock from above the Mage::getModel call to below it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$customerForm = Mage::getModel(&amp;#39;customer/form&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;/* @var $customerForm Mage_Customer_Model_Form */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;And it works!&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://edmondscommerce.github.io/images/screenshot4-600x475.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Netbeans Disable Transparent Undocked Windows</title>
      <link>https://edmondscommerce.github.io/netbeans/netbeans-disable-transparent-undocked-windows.html</link>
      <pubDate>Tue, 07 Feb 2012 17:14:39 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/netbeans/netbeans-disable-transparent-undocked-windows.html</guid>
      <description>&lt;p&gt;If you have a dual monitor setup you might decide to undock some of your Netbeans windows, for example for running XDebug sessions or PHPUnit testing.&lt;/p&gt;

&lt;p&gt;However you will find that by default, Netbeans sets the transparency of these windows to unreadable levels when they are not active.&lt;/p&gt;

&lt;p&gt;This really defeats the object and is quite irritating.&lt;/p&gt;

&lt;p&gt;I spent a long time under the false impression that this was some errant compiz setting and trying to figure it out that way.&lt;/p&gt;

&lt;p&gt;Turns out that this is a Netbeans &amp;ldquo;feature&amp;rdquo; and you can disable it with a single untick of a box.&lt;/p&gt;

&lt;p&gt;Tools-&amp;gt;Options-&amp;gt;Miscellaneous-&amp;gt;Appearance&lt;/p&gt;

&lt;p&gt;untick the &amp;ldquo;Transparent floating windows&amp;rdquo; box&lt;/p&gt;

&lt;p&gt;Enjoy lots of usable desk space in Netbeans!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Netbeans Error Wavy Line - Alternative</title>
      <link>https://edmondscommerce.github.io/netbeans/netbeans-error-wavy-line-alternative.html</link>
      <pubDate>Thu, 19 Jan 2012 14:07:23 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/netbeans/netbeans-error-wavy-line-alternative.html</guid>
      <description>&lt;p&gt;If you use Netbeans then you have no doubt seen the red wavy underline that pops under lines that have errors.&lt;/p&gt;

&lt;p&gt;Unfortunatley if your errors relate to punctuation, eg concatenation full stops, then the red wavy line can actually obscure these making finding and fixing the error tricky.&lt;/p&gt;

&lt;p&gt;An nice alternative is to set Netbeans to use a red strikethrough instead of the wavy line. This is just as visilble but does not obscure punctuation in any way making finding and fixing the error a lot easier.&lt;/p&gt;

&lt;p&gt;To change this simply go to Tools-&amp;gt;Options-&amp;gt;Fonts &amp;amp; Colors&lt;/p&gt;

&lt;p&gt;Then Set Language to All Languages&lt;/p&gt;

&lt;p&gt;Then select Error in the category drop down&lt;/p&gt;

&lt;p&gt;Simply change the Effects: drop down from Wave Underlined line to Strike Through&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sun Java 1.6.0.30 packages for Ubuntu « « Flexion.Org Blog Flexion.Org Blog</title>
      <link>https://edmondscommerce.github.io/linux/sun-java-1-6-0-30-packages-for-ubuntu-%C2%AB-%C2%AB-flexion-org-blog-flexion-org-blog.html</link>
      <pubDate>Fri, 13 Jan 2012 08:10:47 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/sun-java-1-6-0-30-packages-for-ubuntu-%C2%AB-%C2%AB-flexion-org-blog-flexion-org-blog.html</guid>
      <description>&lt;p&gt;If you want or need sun java for your Linux Ubuntu desktop, perhaps for running Netbeans, then you will like this link&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.flexion.org/2012/01/10/updated-sun-java6-packages-for-ubuntu/&#34;&gt;http://blog.flexion.org/2012/01/10/updated-sun-java6-packages-for-ubuntu/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is a PPA for sun java. Problem solved.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHPUnit, LAMP, Magento and Netbeans</title>
      <link>https://edmondscommerce.github.io/netbeans/phpunit-lamp-magento-and-netbeans.html</link>
      <pubDate>Tue, 10 Jan 2012 13:11:10 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/netbeans/phpunit-lamp-magento-and-netbeans.html</guid>
      <description>&lt;p&gt;When using PHPUnit with xampp the first the to do is install PHPUnit through pear. You usually need to update pear first, after that you should be able to follow the instructions &lt;a href=&#34;http://pear.phpunit.de/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Getting PHPUnit working with Magento is fairly straight forward. It&amp;rsquo;s just a case of including Mage.php and then calling Mage::app(); in the setup method of your test class:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;require_once&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../app/Mage.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;TemplateTest&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;PHPUnit_Framework_TestCase&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setUp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;Mage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;testExample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$helper&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Mage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;helper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;core&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;assertTrue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$helper&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Mage_Core_Helper_Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Magento isn&amp;#39;t running!&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you use NetBeans as your IDE you&amp;rsquo;ll be glad to know that it has support for running your tests directly without having to use a terminal. This does require a bit of configuration. You need to tell NetBeans where the PHPUnit script is under Tools &amp;gt; Options &amp;gt; PHP &amp;gt; Unit Testing. If you are using it with XAMPP it will be located at /opt/lampp/bin/phpunit. To begin running the tests you then go Run &amp;gt; Test Project and NetBeans will ask you where your tests are. After that you will get a &amp;ldquo;Test File&amp;rdquo; source folder in the Projects pane. You can now right click each test file and choose &amp;ldquo;Run file&amp;rdquo; and netbeans will run it. If you have xdebug setup the debug option also works nicely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Netbeans &#43; Xdebug Not Highlighting Lines or Opening Files when Step Through Debugging &#43; Solution</title>
      <link>https://edmondscommerce.github.io/php/netbeans-xdebug-not-highlighting-lines-or-opening-files-when-step-through-debugging-solution.html</link>
      <pubDate>Fri, 14 Oct 2011 10:27:39 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/netbeans-xdebug-not-highlighting-lines-or-opening-files-when-step-through-debugging-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you use Netbeans along with Xdebug to facilitate step through debugging when coding PHP then you may come across this issue.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s possible to get it into a semi working scenario where you can have working breakpoints and see variable values but you have no idea which bit of code you are actually stepped up to.&lt;/p&gt;

&lt;p&gt;This can happen if your server path and project path are not correctly configured.&lt;/p&gt;

&lt;p&gt;To resolve this simply go to your project properties, run configuration and then hit the advanced button.&lt;/p&gt;

&lt;p&gt;The server path should be the absolute path to the project root on the server (eg /home/server/sites/blah/) and the project path should be the path on your local machine to the project files (eg /home/joseph/projects/blah/).&lt;/p&gt;

&lt;p&gt;Stop any debugging sessions and then start another one up and if you have the paths set right, you should get the behaviour you expect where Netbeans highlights the current line of code and allows you to step through the code to figure out what&amp;rsquo;s going on.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quickly Comment Code in Netbeans</title>
      <link>https://edmondscommerce.github.io/netbeans/quickly-comment-code-in-netbeans.html</link>
      <pubDate>Mon, 03 Oct 2011 17:08:30 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/netbeans/quickly-comment-code-in-netbeans.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you want to quickly comment out a block of code in netbeans you might find the following really useful&lt;/p&gt;

&lt;p&gt;Simply highlight the block of code and then hit [ctrl]+[shift]+[c]&lt;/p&gt;

&lt;p&gt;The same key combination will uncomment it again.&lt;/p&gt;

&lt;p&gt;Handy!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NetBeans PHP Comments</title>
      <link>https://edmondscommerce.github.io/netbeans/netbeans-php-comments.html</link>
      <pubDate>Thu, 08 Sep 2011 10:35:22 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/netbeans/netbeans-php-comments.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Comments your code are essential to help both other developers and, in some cases, yourself understand what the code is meant to be doing.&lt;/p&gt;

&lt;p&gt;When developing PHP in NetBeans there are two types of comments to consider. The first type of comments are the normal type of comments that are for a human to read and understand. This type of comments will say thing like &amp;ldquo;// This section is here to&amp;hellip;&amp;rdquo; and &amp;ldquo;// This is necessary because&amp;hellip;&amp;rdquo;. While human readable are definitely good, one of the issues when developing PHP is that it is difficult for IDEs to maintain the type of variables, the return types of methods and the type of variables that a method excepts. This is mainly because PHP is loosely typed but also because IDEs often can&amp;rsquo;t follow the inheritance hierarchy for what ever reason.&lt;/p&gt;

&lt;p&gt;To get around the issues of type hierarchy and PHP been a loosely typed language, NetBeans supports type definition comments. This type of comment is intended to help the user of the IDE know what type a variable should be and also what types of variables a method expects and allow auto completion to function.&lt;/p&gt;

&lt;p&gt;Example:
&lt;code&gt;
    /**
     * Remove item from cart
     *
     * @param   int $itemId This is the id of the item to remove
     * @return  Mage_Checkout_Model_Cart
     */
    public function removeItem($itemId)
    {
        $this-&amp;gt;getQuote()-&amp;gt;removeItem($itemId);
        return $this;
    }
&lt;/code&gt;
This example lets NetBeans know that removeItem&amp;rsquo;s one parameter should be an integer and that it returns an object of type Mage_Checkout_Model_Cart.
&lt;img src=&#34;https://edmondscommerce.github.io/images/autocompleate1.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The other type of type comment tells NetBeans that a particular variable is of a specific type.
For example:
&lt;code&gt;
class RemeberNumber {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/** @var $theNumber int */
protected $theNumber;

public function __construct($number) {
    $this-&amp;gt;theNumber = $number;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Because of the /** @var $theNumber int */ auto completion will now use that as the type else where with in the scope of that variable definition.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://edmondscommerce.github.io/images/autocompleate2.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>