<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Errors on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/errors/</link>
    <description>Recent content in Errors on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Jun 2011 14:40:29 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/errors/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PHP CLI</title>
      <link>https://edmondscommerce.github.io/php/php-cli.html</link>
      <pubDate>Wed, 08 Jun 2011 14:40:29 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/php-cli.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Running PHP on the command line, via cron etc there are a few common problems you can hit and from experience this my recommendations to avoid them.&lt;/p&gt;

&lt;p&gt;It seems that (on CentOS at least) PHP does not display errors by default on the command line. You will want it to I assume so you can understand what has gone wrong with the cron task etc.&lt;/p&gt;

&lt;p&gt;You can use php.ini files but its not always easy to know exactly which ini file is going to to be used. If certain settings are required, use the -d flag to set specific ini directives directly when you run PHP.&lt;/p&gt;

&lt;p&gt;I have just had an issue where a script was running out of memory but no error message was displayed, despite the fact that display errors was turned on. However digging around showed that memory usage was hitting the limit and the script died silently. Increasing the memory limit fixed it.&lt;/p&gt;

&lt;p&gt;Here is my standard PHP CLI runner:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
/usr/bin/php -d display_errors -d memory_limit=512M /path/to/php/file.php

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>