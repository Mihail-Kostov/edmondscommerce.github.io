<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Convert on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/tags/convert/</link>
    <description>Recent content in Convert on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Oct 2011 11:02:59 +0000</lastBuildDate>
    <atom:link href="http://example.com/tags/convert/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Generic XML to CSV Converter</title>
      <link>http://example.com/php/generic-xml-to-csv-converter.html</link>
      <pubDate>Wed, 12 Oct 2011 11:02:59 +0000</pubDate>
      
      <guid>http://example.com/php/generic-xml-to-csv-converter.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Some times you might have a legacy system that is built around csv or similar and you need to import an XML data source into this system.&lt;/p&gt;

&lt;p&gt;Of course one possibility is to build full XML handling capabilities into the system. Perhaps a more sane solution is to simply convert the XML to CSV so that the legacy system does not have to be touched.&lt;/p&gt;

&lt;p&gt;This little snippet will generally take an XML file and create a CSV file that should be useable. Of course its impossible to guarantee this for every XML file as its such a widely varied format, however in general this should work.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$xml = simplexml_load_file(&amp;#39;feed.xml&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$outstream = fopen(&amp;#39;feed.csv&amp;#39;,&amp;#39;w&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$header=false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($xml as $k=&amp;gt;$details){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if(!$header){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        fputcsv($outstream,array_keys(get_object_vars($details)));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $header=true;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    fputcsv($outstream,get_object_vars($details));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;fclose($outstream);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>