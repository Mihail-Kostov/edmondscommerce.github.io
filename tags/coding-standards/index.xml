<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding Standards on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/tags/coding-standards/</link>
    <description>Recent content in Coding Standards on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Oct 2014 11:27:40 +0000</lastBuildDate>
    <atom:link href="http://example.com/tags/coding-standards/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PHP error checking in Vim with Syntastic</title>
      <link>http://example.com/vim/php-error-checking-in-vim-with-syntastic.html</link>
      <pubDate>Thu, 16 Oct 2014 11:27:40 +0000</pubDate>
      
      <guid>http://example.com/vim/php-error-checking-in-vim-with-syntastic.html</guid>
      <description>&lt;p&gt;If you are using Vim for any kind of PHP development work, then you may miss the sanity checking that is included in some IDEs.&lt;/p&gt;

&lt;p&gt;However, it possible to add this in using the &lt;a href=&#34;https://github.com/scrooloose/syntastic&#34; target=&#34;_blank&#34;&gt;Syntastic&lt;/a&gt;
plug-in. Installation is quite simple and can be handled by any of the common plug-in managers.&lt;/p&gt;

&lt;p&gt;It should be noted that the plug-in just calls external checkers, so you will need to have these setup and configured,
but you should have this done already&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automatically convert old PHP file to camelCase </title>
      <link>http://example.com/bash/automatically-convert-old-php-file-to-camelcase.html</link>
      <pubDate>Thu, 17 Oct 2013 10:53:15 +0000</pubDate>
      
      <guid>http://example.com/bash/automatically-convert-old-php-file-to-camelcase.html</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently been working with an old project that uses a combination of different coding styles.&lt;/p&gt;

&lt;p&gt;One of the more trivial annoyances with this is that the variables used through the project are a combination of $camelCase and $snake_case which throws of the coding standards tools that I use.&lt;/p&gt;

&lt;p&gt;To get round this I have put a little script together that will convert $snake_case to $camelCase automatically.&lt;/p&gt;

&lt;p&gt;Obviously, you will need to check the results of this to make sure that there are not variables that should not be changed, but it has saved me a lot of time doing this manually.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve added this to my .bash_allias file, though it could easily be turned into a standalone script if required&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#Fix legacy code&lt;/span&gt;
 cammelCase&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
   vim -E -s &lt;span class=&#34;nv&#34;&gt;$@&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;-EOF&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :%s#\%($\%(\k\+\)\)\@&amp;lt;=_\(\k\)#\u\1#g&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :update&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;   :quit&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
 
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>