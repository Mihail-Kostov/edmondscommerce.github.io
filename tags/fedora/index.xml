<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fedora on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/fedora/</link>
    <description>Recent content in Fedora on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Sep 2016 09:39:04 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/fedora/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Lxc Bash Completion For Fedora</title>
      <link>https://edmondscommerce.github.io/lxc-bash-completion-for-fedora/</link>
      <pubDate>Thu, 15 Sep 2016 09:39:04 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/lxc-bash-completion-for-fedora/</guid>
      <description>&lt;p&gt;LXC is great, I&amp;rsquo;m really loving it.&lt;/p&gt;

&lt;p&gt;However I also love Fedora and work almost exclusively in the Red Hat, Centos, Fedora ecosphere - so the Ubuntu centric nature of LXC is sometimes a bit of a hindrance.&lt;/p&gt;

&lt;p&gt;One thing is that the LXC implementation on Ubuntu and Fedora differs in how the commands are run, eg Ubuntu: &lt;code&gt;lxc start -n containerName&lt;/code&gt; and Fedora: &lt;code&gt;lxc-start -n containerName&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This means that I can&amp;rsquo;t easily use the LXC bash completion I found &lt;a href=&#34;https://github.com/arges/lxd/blob/7a33c43deeca38cd77ed38eb84f12a2f4efa90ca/config/bash/lxc.in&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I love bash completion, it&amp;rsquo;s awesome and really quite easy to get working&lt;/p&gt;

&lt;p&gt;Here is something quick I threw together for working with LXC on Fedora:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
#!/usr/bin/env bash

_lxc-containers(){
    local cur
    local -a toks
    cur=&amp;quot;${COMP_WORDS[COMP_CWORD]}&amp;quot;
    toks=( $(  ls /var/lib/lxc | grep &amp;quot;$cur&amp;quot; ))
    COMPREPLY=( &amp;quot;${toks[@]}&amp;quot; )
    return 0
}
complete -F _lxc-containers -o nospace lxc-start
complete -F _lxc-containers -o nospace lxc-stop
complete -F _lxc-containers -o nospace lxc-attach

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I also use the following aliases to make life a bit easier:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias lxc-start=&amp;quot;lxc-start -n &amp;quot;
alias lxc-stop=&amp;quot;lxc-stop -n &amp;quot;
alias lxc-attach=&amp;quot;lxc-attach -n &amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And now if I add both of the above to my &lt;code&gt;~/.bashrc&lt;/code&gt; file, I get completion on start, stop and attach. I&amp;rsquo;ve deliberately excluded the destroy command from this, just in case.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fedora 24 Lxc Multiple /dev/pts Instances: Missing</title>
      <link>https://edmondscommerce.github.io/fedora-24-lxc-multiple-/dev/pts-instances-missing/</link>
      <pubDate>Wed, 14 Sep 2016 18:58:49 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/fedora-24-lxc-multiple-/dev/pts-instances-missing/</guid>
      <description>&lt;p&gt;If you are finding that when you run &lt;code&gt;lxc-checkconfig&lt;/code&gt; then you will probably get output like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Kernel configuration not found at /proc/config.gz; searching...
Kernel configuration found at /boot/config-4.7.3-200.fc24.x86_64
--- Namespaces ---
Namespaces: enabled
Utsname namespace: enabled
Ipc namespace: enabled
Pid namespace: enabled
User namespace: enabled
Network namespace: enabled
Multiple /dev/pts instances: missing

--- Control groups ---
Cgroup: enabled
Cgroup clone_children flag: enabled
Cgroup device: enabled
Cgroup sched: enabled
Cgroup cpu account: enabled
Cgroup memory controller: enabled
Cgroup cpuset: enabled

--- Misc ---
Veth pair device: enabled
Macvlan: enabled
Vlan: enabled
Bridges: enabled
Advanced netfilter: enabled
CONFIG_NF_NAT_IPV4: enabled
CONFIG_NF_NAT_IPV6: enabled
CONFIG_IP_NF_TARGET_MASQUERADE: enabled
CONFIG_IP6_NF_TARGET_MASQUERADE: enabled
CONFIG_NETFILTER_XT_TARGET_CHECKSUM: enabled
FUSE (for use with lxcfs): enabled

--- Checkpoint/Restore ---
checkpoint restore: enabled
CONFIG_FHANDLE: enabled
CONFIG_EVENTFD: enabled
CONFIG_EPOLL: enabled
CONFIG_UNIX_DIAG: enabled
CONFIG_INET_DIAG: enabled
CONFIG_PACKET_DIAG: enabled
CONFIG_NETLINK_DIAG: enabled
File capabilities: enabled

Note : Before booting a new kernel, you can check its configuration
usage : CONFIG=/path/to/config /usr/bin/lxc-checkconfig


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The good news is that the error about dev/pts is a false alarm.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.spinics.net/lists/kernel/msg2283133.html&#34; target=&#34;_blank&#34;&gt;Apparently&lt;/a&gt;, more up to date Kernels don&amp;rsquo;t have a kernel flag that is clearly being used by &lt;code&gt;lxc-checkconfig&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However I can confirm that lxc seems to be working fine on Fedora 24&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lenovo Carbon X1 Fedora 24 Wifi Issues &#43; Solution</title>
      <link>https://edmondscommerce.github.io/lenovo-carbon-x1-fedora-24-wifi-issues-&#43;-solution/</link>
      <pubDate>Wed, 20 Jul 2016 19:28:43 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/lenovo-carbon-x1-fedora-24-wifi-issues-&#43;-solution/</guid>
      <description>&lt;p&gt;So my new Lenovo ultrabook is very nice, but trying to transfer a database dump over SCP was failing, every, time.&lt;/p&gt;

&lt;p&gt;In my trade, transferring large files around is pretty much a requirement so I had to find a solution. A lot of Googling later and I did the following that seemed to fix it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo bash -c &lt;span class=&#34;s1&#34;&gt;&amp;#39; echo &amp;quot;options iwlwifi 11n_disable=1&amp;quot;  &amp;gt;&amp;gt;  /etc/modprobe.d/iwlwifi.conf &amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In order to test if the above fix works, I wrote this little script and placed in my ~/bin directory (called fixwifi)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env bash
echo &amp;quot;f******g linux wifi...&amp;quot;
sudo bash -c &amp;quot;modprobe -r iwlmvm; modprobe -r iwlwifi; modprobe iwlwifi 11n_disable=1; modprobe iwlmvm&amp;quot;
echo &amp;quot;sorted&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Something else I did which I&amp;rsquo;m not sure if it has helped is to symlink the firmware specified in &lt;code&gt;modinfo iwlwifi&lt;/code&gt; to what seems to be a more up to date verion.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[joseph@josephlaptop ~] $ ll /lib/firmware/ | grep 8000C
lrwxrwxrwx. 1 root root      22 Jul 20 17:06 iwlwifi-8000C-13.ucode -&amp;gt; iwlwifi-8000C-21.ucode
-rw-r--r--. 1 root root 1745176 Jul 20 17:05 iwlwifi-8000C-13.ucode.bak
-rw-r--r--. 1 root root 2351636 Jun  9 14:17 iwlwifi-8000C-16.ucode
-rw-r--r--. 1 root root 2394060 Jun  9 14:17 iwlwifi-8000C-21.ucode
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When I did this, things did seem to improve but its hard to know if its just a coincidence. Its working fine now though so I&amp;rsquo;m leaving it that way.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve now repeatedly transferred large amounts of data using SCP and it has worked fine every time, so regarding this as solved :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fedora 24 Bash Script to Change Desktop Background</title>
      <link>https://edmondscommerce.github.io/fedora-24-bash-script-to-change-desktop-background/</link>
      <pubDate>Tue, 19 Jul 2016 20:05:32 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/fedora-24-bash-script-to-change-desktop-background/</guid>
      <description>

&lt;h2 id=&#34;bash-script-to-change-desktop-on-gnome-shell&#34;&gt;Bash Script to Change Desktop on Gnome Shell&lt;/h2&gt;

&lt;p&gt;Previously on this blog I had a script that will change your desktop background and can be used on cron&lt;/p&gt;

&lt;p&gt;This is an updated version of that script, mainly the pgrep no longer works as the gdm login is matching as well so we need to be more specific when pulling out the process ID.&lt;/p&gt;

&lt;p&gt;Here is the script, copy paste into a bash script, edit the path for images and then add to your crontab and enjoy nice backgrounds of your choosing.&lt;/p&gt;

&lt;p&gt;I like to combine this with a transparent top panel for something a bit less bland and depressing than the solid black bar that we have by default. You can install this &lt;a href=&#34;https://extensions.gnome.org/extension/358/activities-configurator/&#34; target=&#34;_blank&#34;&gt;gnome shell extension&lt;/a&gt; to easily set transparency and also other tweaks.`&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;ps waux &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;g&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;nome-session-binary &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -v gdm &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -d &lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; -f 5&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;DBUS_SESSION_BUS_ADDRESS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;grep -z DBUS_SESSION_BUS_ADDRESS /proc/&lt;span class=&#34;nv&#34;&gt;$PID&lt;/span&gt;/environ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;cut -d&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -f2-&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GSETTINGS_BACKEND&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;dconf 
gsettings &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; org.gnome.desktop.background picture-uri &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;quot;file://&amp;#39;&lt;/span&gt;/home/joseph/Pictures/Wallpapers/&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;ls /home/joseph/Pictures/Wallpapers/ &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; shuf -n 1&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Fedora Drive Space Regain Tip</title>
      <link>https://edmondscommerce.github.io/fedora-drive-space-regain-tip/</link>
      <pubDate>Fri, 15 Jul 2016 15:45:00 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/fedora-drive-space-regain-tip/</guid>
      <description>&lt;p&gt;I recently discovered a huge amount of drive space being used up in /var/cache&lt;/p&gt;

&lt;p&gt;On closer inspection the vast majority of this usage was in var/cache/packagekit&lt;/p&gt;

&lt;p&gt;For me there was 8GB of files in there, not great when you only have a relatively small SSD as your primary drive.&lt;/p&gt;

&lt;p&gt;To clean this up, the following command will do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo pkcon refresh force -c -1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SELinux and connecting to Mysql databases on Red Hat based distributions</title>
      <link>https://edmondscommerce.github.io/linux/se-linux-and-connecting-to-a-mysql-database.html</link>
      <pubDate>Fri, 07 Nov 2014 10:53:06 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/se-linux-and-connecting-to-a-mysql-database.html</guid>
      <description>&lt;p&gt;SELinux can be restrictive by defult but prevent alot of security issues. One thing we found while trying it is that by default it will block network connections from being made via the httpd daemon. This is an issue if say on a development system you are running php via the apache module.&lt;/p&gt;

&lt;p&gt;To resolve this simply login via root or sudo to root privilige and run the following command:
    setsebool -P httpd_can_network_connect on
You should now be able to connect to connect to your database. This will also enable things like web api, curl calls and other php that requires network access.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fedora Live USB Key Creation</title>
      <link>https://edmondscommerce.github.io/fedora/fedora-live-usb-key-creation.html</link>
      <pubDate>Wed, 10 Sep 2014 17:38:09 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/fedora/fedora-live-usb-key-creation.html</guid>
      <description>&lt;p&gt;I have had continual problems getting most of my USB keys to work as liveusb drives.&lt;/p&gt;

&lt;p&gt;This is pretty awkward however it looks like I have now found a solution that works. Instead of using the official Fedora live USB creator, we are going to use something called livecd-iso-to-disk&lt;/p&gt;

&lt;p&gt;First of all install it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo yum -y install livecd-tools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then this is your command to create the liveusb. Note you need to set the sdX to whichever your USB key is using, and of course make sure the path to the iso file is correct&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo livecd-iso-to-disk --format --msdos --reset-mbr --overlay-size-mb &lt;span class=&#34;m&#34;&gt;512&lt;/span&gt; --home-size-mb &lt;span class=&#34;m&#34;&gt;512&lt;/span&gt; ~/Downloads/Fedora-Live-Desktop-x86_64-20-1.iso /dev/sdc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that&amp;rsquo;s it&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Skype Working on Fedora 20</title>
      <link>https://edmondscommerce.github.io/fedora/getting-skype-working-on-fedora-20.html</link>
      <pubDate>Fri, 17 Jan 2014 14:45:29 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/fedora/getting-skype-working-on-fedora-20.html</guid>
      <description>&lt;p&gt;I recently needed to get Skype working on Fedora 20 and unfortunately the process wasn&amp;rsquo;t completely smooth, there were a few hoops I had to jump through.&lt;/p&gt;

&lt;p&gt;I am making a note of these here for my own future reference and to help out any one else hitting problems like these.&lt;/p&gt;

&lt;p&gt;To install Skype on Fedora 20 64bit, the first thing you need to do is download the &lt;a href=&#34;http://www.skype.com/en/download-skype/skype-for-linux/&#34; target=&#34;_blank&#34;&gt;Fedora 32bit RPM from Skype&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To install this you should use Yum so that dependancies are handled properly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install ~/Downloads/skype-4.2.0.11-fedora.i586.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However I hit issues around the libvpx package. I have Chromium installed however it packages an incompatible version of libvpx which was blocking the installation.
After a load of messing around the solution for me was so use Yum to remove that package, install the correct package and then install skype.
One issue was that removing the package also removed programs that had it as a dependancy so after installing the correct version of libvpx, I had to reinstall those programs as well.&lt;/p&gt;

&lt;p&gt;Here is the process in commands:&lt;/p&gt;

&lt;p&gt;Firstly remove the package and install the i686 version&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum remove libvpx.x86_64
yum install libvpx.i686
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then install Skype&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; yum install ~/Downloads/skype-4.2.0.11-fedora.i586.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then reinstall the 64 bit version of libvpx&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; yum install libvpx.x86_64 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then reinstall the programs that were removed when I removed libvpx&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; yum install firefox.x86_64 pidgin.x86_64 pidgin-libnotify.x86_64 php-gd.x86_64 shotwell.x86_64 gnome-shell-extension-pidgin.x86_64 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That got Skype installed however testing it the audio was terrible. There is one last tweak that fixed this for me:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gnome-open /usr/share/applications/skype.desktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Change the line that reads &lt;strong&gt;Exec=skype %U&lt;/strong&gt; to the following:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exec=env PULSE_LATENCY_MSEC=30 skype %U&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Restart Skype and the audio issues should be resolved.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrading from Fedora 19 to 20 using FedUp</title>
      <link>https://edmondscommerce.github.io/fedora/upgrading-from-fedora-19-to-20-using-fedup.html</link>
      <pubDate>Fri, 03 Jan 2014 19:32:48 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/fedora/upgrading-from-fedora-19-to-20-using-fedup.html</guid>
      <description>&lt;p&gt;I decided to upgrade to the latest version because why not, its the first Friday of the year.&lt;/p&gt;

&lt;p&gt;The first thing to do is head over to &lt;a href=&#34;https://fedoraproject.org/wiki/FedUp&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt; which explains how to use the tool.&lt;/p&gt;

&lt;p&gt;I spotted the note about the 19-20 upgrade not working unless you install the bleeding edge version of the tool so thats to do first:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum -y --enablerepo=updates-testing install fedup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You also need to make sure that your system is fully up to date so lets do that. Once this is done you probably want to reboot to be on the safe side.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum -y update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once that is all done then you need to run the fedup command itself:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum -y update fedup fedora-release
sudo fedup --network 20
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;I did this though and had an issue with RMPFusion. To fix that you need to run this command, then run the fedup command again:&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-rpmfusion-nonfree-fedora-20
sudo fedup --network 20
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once fedup completes successfully you can reboot and will have an upgrade option as your first GRUB option when booting up. Select that to start the main upgrade.
It takes a while, make a brew or something.&lt;/p&gt;

&lt;p&gt;Once you log in, you will no doubt notice some of your Gnome Shell Extensions are not working. Thankfully the process of upgrading these is pretty painless, just head over to
&lt;a href=&#34;https://extensions.gnome.org/local/&#34; target=&#34;_blank&#34;&gt;https://extensions.gnome.org/local/&lt;/a&gt; and you will see all your extensions. Any that are not compatible with your new version of Gnome Shell will have OUTDATED written where the on/off slider usually resides. Those with upgraded versions will have an upgrade button. Click that for each one, accepting the prompt.
When that&amp;rsquo;s done, refresh the page and you should see all your upgraded extensions are now working.&lt;/p&gt;

&lt;p&gt;For me the only one I&amp;rsquo;m really going to miss is the &lt;a href=&#34;https://extensions.gnome.org/extension/352/middle-click-to-close-in-overview/&#34; target=&#34;_blank&#34;&gt;Quick Close in Overview&lt;/a&gt; which is really handy, hopefully will be updated soon.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>