<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Magento on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/magento/</link>
    <description>Recent content in Magento on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Aug 2017 10:43:25 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/magento/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Magento Image Optimisation</title>
      <link>https://edmondscommerce.github.io/magento-image-optimisation/</link>
      <pubDate>Fri, 18 Aug 2017 10:43:25 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-image-optimisation/</guid>
      <description>

&lt;h2 id=&#34;the-problem&#34;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;One of our clients recently needed a simple solution for automatically optimising their
&lt;code&gt;media/&lt;/code&gt; and &lt;code&gt;skin/&lt;/code&gt; images. After trying a reputable module we decided it would be
simpler and give us more control if we completed this using &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;cron&lt;/code&gt;, &lt;code&gt;jpegoptim&lt;/code&gt;
and &lt;code&gt;optipng&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;the-solution&#34;&gt;The Solution&lt;/h2&gt;

&lt;script src=&#34;https://gist.github.com/edmondscommerce/405f1e4a684c3b1d0fd75cd690709b01.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Set the path to your &lt;code&gt;media/&lt;/code&gt; and &lt;code&gt;skin/&lt;/code&gt; directories. This is relative to the scripts
location.&lt;/li&gt;
&lt;li&gt;Install &lt;code&gt;jpegoptim&lt;/code&gt; and &lt;code&gt;optipng&lt;/code&gt;. These will likely be available in your package manager
if you use Linux.&lt;/li&gt;
&lt;li&gt;Backup your current &lt;code&gt;media/&lt;/code&gt; and &lt;code&gt;skin/&lt;/code&gt; directories.&lt;/li&gt;
&lt;li&gt;Set arguments for &lt;code&gt;jpegoptim&lt;/code&gt; and &lt;code&gt;optipng&lt;/code&gt; in the &lt;code&gt;optimiseJpeg()&lt;/code&gt; and &lt;code&gt;optimisePng()&lt;/code&gt;
functions respectively. In the end we were able to get the results we needed using only lossless
compression. This is what the script is currently configured for.&lt;/li&gt;
&lt;li&gt;Make a first pass through all the images so that existing images are compressed. This
can be done by running the script with a large period. I used &lt;code&gt;5256000&lt;/code&gt; for a period
of 10 years.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;bash img_optimiser.bash &lt;span class=&#34;m&#34;&gt;5256000&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&amp;gt;&amp;gt; img_optimiser.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Setup &lt;code&gt;cron&lt;/code&gt; to run the script regularly and optimise any new images as they&amp;rsquo;re
added. You&amp;rsquo;ll need to set the period (in minutes) to match the period of your &lt;code&gt;cron&lt;/code&gt;
job. I&amp;rsquo;m running the script every hour with a period of 60.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; * * * * bash /path/to/img_optimiser.bash &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt; 2&amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &amp;gt;&amp;gt; /path/to/img_optimiser.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt; allows you to log &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; into one file from cron.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Module Version Checker</title>
      <link>https://edmondscommerce.github.io/magento-module-version-checker/</link>
      <pubDate>Thu, 11 May 2017 07:43:39 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-module-version-checker/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/edmondscommerce/magento-module-version-checker&#34; target=&#34;_blank&#34;&gt;Magento Module Version Checker&lt;/a&gt;
(mmv) is a simple script to check
&lt;a href=&#34;https://www.magentocommerce.com/magento-connect/&#34; target=&#34;_blank&#34;&gt;Magento Connect&lt;/a&gt;
(or other custom sources) for the latest version of a module.&lt;/p&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;p&gt;Install via composer&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;git clone git@github.com:edmondscommerce/magento-module-version-checker.git
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; magento-module-version-checker
composer install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;You need to configure the modules you wish to check and the page from which
to get the modules version. You do this in a &lt;code&gt;json&lt;/code&gt; file with the following
format:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;https://www.magentocommerce.com/magento-connect/&amp;lt;module&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;lt;Module_Name&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;https://www.magentocommerce.com/magento-connect/aoe-scheduler.html&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Aoe_Scheduler&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;

    &lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;running&#34;&gt;Running&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;./mmv &amp;lt;path/to/config.json&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;custom-sources&#34;&gt;Custom Sources&lt;/h3&gt;

&lt;p&gt;In order to add a custom source you need implement a &lt;code&gt;Module&lt;/code&gt; class and add the class to the &lt;code&gt;ModuleFactory&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;implementing-module&#34;&gt;Implementing Module&lt;/h4&gt;

&lt;p&gt;I&amp;rsquo;ve created a template &lt;code&gt;Module&lt;/code&gt; class for you to base yours on &lt;a href=&#34;https://github.com/edmondscommerce/magento-module-version-checker/blob/master/src/Module.php.template&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You simply need to make the following changes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;EdmondsCommerce\MagentoModuleVersions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;YourSource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Module&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AbstractModule&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// Here you need to add a css selector to grab the&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// version data from the page.&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;cleanVersionNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$versionNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// Here you need to add some clean up code that takes the&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// selected version and strips out only the version number.&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$versionNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see an example of this
&lt;a href=&#34;https://github.com/edmondscommerce/magento-module-version-checker/blob/master/src/MagentoConnectModule.php&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;adding-module-to-module-factory&#34;&gt;Adding Module to Module Factory&lt;/h4&gt;

&lt;p&gt;Once you&amp;rsquo;ve implemented a &lt;code&gt;Module&lt;/code&gt; class you need to add it to the
&lt;a href=&#34;https://github.com/edmondscommerce/magento-module-version-checker/blob/master/src/ModuleFactory.php&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;ModuleFactory&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ModuleFactory&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;www.magentocommerce.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;MagentoConnectModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;www.your-modules-domain.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;YourSource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Invalid host &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$host&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once that&amp;rsquo;s done you should be able to add your new modules to the config &lt;code&gt;json&lt;/code&gt; and run the script.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento 1 Php7 Core Bug and Fix</title>
      <link>https://edmondscommerce.github.io/magento-1-php7-core-bug-and-fix/</link>
      <pubDate>Thu, 23 Mar 2017 12:23:44 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-1-php7-core-bug-and-fix/</guid>
      <description>&lt;p&gt;We recently came across an issue with a client that had previously upgraded to PHP7 from PHP5.x for their Magento 1 CE store.
The issue came to light when the client tried to create a new store in the admin and found that their store name was left blank when they hit the save button.&lt;/p&gt;

&lt;p&gt;No errors were displayed as the site was in production mode and the logs did not give any useful information.
After looking in to this locally with developer mode I found that a core Magento class was still using deprecated code even after using a PHP7 compatibility module.&lt;/p&gt;

&lt;p&gt;Unfortunately there are only two ways of fixing the issue discovered, the first and correct option is to update Magento as the bug is present in all versions of Magento prior to Magento 1.9.1.0,
there does not seem to be any patches that resolve the issue officially.&lt;/p&gt;

&lt;p&gt;The second faster (and possibly safer depending on how big your site is) is to directly edit the core file (!!).&lt;/p&gt;

&lt;p&gt;As all developers know, editing the core is taboo but in this case we are looking at bringing code from a later version of Magento that has fixed the issue.&lt;/p&gt;

&lt;p&gt;The issue boils down to the use of the &lt;code&gt;preg_replace&lt;/code&gt; function with the &lt;code&gt;e&lt;/code&gt; modifier, the code is used across the entire installation when calling the &lt;code&gt;removeTags&lt;/code&gt; method on any helper that extends from &lt;code&gt;Mage_Core_Helper_Abstract&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To fix the issue without doing a Magento upgrade, replace the &lt;code&gt;removeTags()&lt;/code&gt; method with the updated version&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    public function removeTags($html)
    {
        $html = preg_replace_callback(
            &amp;quot;# &amp;lt;(?![/a-z]) | (?&amp;lt;=\s)&amp;gt;(?![a-z]) #xi&amp;quot;,
            function ($matches) {
                return htmlentities($matches[0]);
            },
            $html
        );
        $html =  strip_tags($html);
        return htmlspecialchars_decode($html);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Always be sure to test your changes before deploying to production, it is also recommended you comment your edit loudly so the change is not overlooked.
E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;############### Edit Made #################
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Test If Your Magento Site Is Php7 Ready</title>
      <link>https://edmondscommerce.github.io/test-if-your-magento-site-is-php7-ready/</link>
      <pubDate>Thu, 02 Mar 2017 10:48:46 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/test-if-your-magento-site-is-php7-ready/</guid>
      <description>

&lt;p&gt;After you&amp;rsquo;ve installed the &lt;a href=&#34;https://github.com/Inchoo/Inchoo_PHP7&#34; target=&#34;_blank&#34;&gt;Inchoo PHP7 module&lt;/a&gt; you&amp;rsquo;ll likely
want to check if your custom or 3rd party module code is also PHP7 compatible. In order to determine
this you can run a &lt;a href=&#34;https://en.wikipedia.org/wiki/Static_program_analysis&#34; target=&#34;_blank&#34;&gt;static analysis&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;phpcodesniffer&#34;&gt;PHPCodeSniffer&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34; target=&#34;_blank&#34;&gt;PHPCodeSniffer&lt;/a&gt; is a PHP static analysis tool which can
be used to test your code against a set of coding standards.&lt;/p&gt;

&lt;h1 id=&#34;phpcompatibility&#34;&gt;PHPCompatibility&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wimg/PHPCompatibility&#34; target=&#34;_blank&#34;&gt;PHPCompatibility&lt;/a&gt; is a coding standard which you can use
to test if your code is compatible with a certain (or range of) PHP versions. In our case we&amp;rsquo;re only
interested in PHP7.&lt;/p&gt;

&lt;h1 id=&#34;running-the-analysis&#34;&gt;Running the Analysis&lt;/h1&gt;

&lt;p&gt;Once you&amp;rsquo;ve install both PHPCodeSniffer and PHPCompatibility (by following the instructions on their
respective GitHub pages) we should be ready to run our analysis.&lt;/p&gt;

&lt;p&gt;Use the following command to run your analysis:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;./vendor/bin/phpcs -p --standard&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;PHPCompatibility --runtime-set testVersion 7.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As the command is running you should see a summary of the tested files. &lt;code&gt;W&lt;/code&gt; means warning and &lt;code&gt;E&lt;/code&gt;
means error.&lt;/p&gt;

&lt;p&gt;After the command has run you should see a detailed list of all the potential compatibility issues.&lt;/p&gt;

&lt;p&gt;Once these have been fixed or mitigated you should be ready for PHP7.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrade From Magento Magemonkey to Mailchimp</title>
      <link>https://edmondscommerce.github.io/upgrade-from-magento-magemonkey-to-mailchimp/</link>
      <pubDate>Tue, 21 Feb 2017 14:13:42 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/upgrade-from-magento-magemonkey-to-mailchimp/</guid>
      <description>&lt;p&gt;Upgrading from MageMonkey to MailChimp unfortunately isn&amp;rsquo;t as simple as just installing the new module.&lt;/p&gt;

&lt;p&gt;You need to purge the old module completely using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Remove all MageMonkey files (taken from https://www.dropbox.com/s/fx9p0w7hqeb0zwi/uninstall_magemonkey.sh?dl=0)&lt;/span&gt;
rm app/etc/modules/Ebizmarts_MageMonkey.xml
rm app/etc/modules/Ebizmarts_Mandrill.xml
rm app/etc/modules/Ebizmarts_Autoresponder.xml
rm app/etc/modules/Ebizmarts_AbandonedCart.xml
rm app/etc/modules/Ebizmarts_SweetMonkey.xml
rm -r app/locale/nl_NL/template/email/ebizmarts
rm app/locale/nl_NL/Ebizmarts_MageMonkey.csv
rm app/locale/nl_NL/Ebizmarts_SweetMonkey.csv
rm app/locale/nl_NL/Ebizmarts_AbandonedCart.csv
rm app/locale/en_US/Ebizmarts_Mandrill.csv
rm -r app/locale/en_US/template/email/ebizmarts
rm app/locale/en_US/Ebizmarts_Autoresponder.csv
rm app/locale/en_US/Ebizmarts_MageMonkey.csv
rm app/locale/en_US/Ebizmarts_SweetMonkey.csv
rm app/locale/en_US/Ebizmarts_AbandonedCart.csv
rm -r app/code/community/Ebizmarts
rm app/design/adminhtml/default/default/layout/magemonkey.xml
rm -r app/design/adminhtml/default/default/layout/ebizmarts
rm -r app/design/adminhtml/default/default/template/ebizmarts
rm -r app/design/adminhtml/default/default/template/magemonkey
rm -r app/design/adminhtml/default/default/template/sweetmonkey
rm app/design/frontend/base/default/layout/magemonkey.xml
rm -r app/design/frontend/base/default/layout/ebizmarts
rm -r app/design/frontend/base/default/template/ebizmarts
rm -r app/design/frontend/base/default/template/magemonkey
rm -r app/design/frontend/base/default/template/ebizmarts_abandonedcart
rm -r js/ebizmarts
rm -r skin/adminhtml/default/default/abandonedcart
rm -r skin/adminhtml/default/default/ebizmarts
rm -r skin/adminhtml/default/default/magemonkey
rm -r skin/frontend/base/default/magemonkey
rm -r lib/Mandrill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This was taken from &lt;a href=&#34;https://www.dropbox.com/s/fx9p0w7hqeb0zwi/uninstall_magemonkey.sh?dl=0&#34; target=&#34;_blank&#34;&gt;uninstall_magemonkey.sh&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You also need to drop the following tables.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Drop all MageMonkey tables (taken from https://ebizmarts.com/forums/topics/view/19381#19491)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;dbname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;declare&lt;/span&gt; -a &lt;span class=&#34;nv&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_mails_sent&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_abandonedcart_popup&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_abandonedcart_abtesting&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_unsubscribe&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_visited&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_review&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_backtostock&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_backtostock_alert&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_api_debug&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_ecommerce360&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_bulksync_export&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_bulksync_import&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_async_subscribers&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_async_orders&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_last_order&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; table in &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[@]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    mysql -h &lt;span class=&#34;nv&#34;&gt;$host&lt;/span&gt; -u &lt;span class=&#34;nv&#34;&gt;$user&lt;/span&gt; --password&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dbname&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;drop table &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$table&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These tables were taken from the following &lt;a href=&#34;https://ebizmarts.com/forums/topics/view/19381#19491&#34; target=&#34;_blank&#34;&gt;Ebizmarts post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you&amp;rsquo;ve done this you can install the new module by following the instructions contained within it&amp;rsquo;s
README.md.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introducing UI Components</title>
      <link>https://edmondscommerce.github.io/introducing-ui-components/</link>
      <pubDate>Mon, 09 Jan 2017 15:05:32 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/introducing-ui-components/</guid>
      <description>

&lt;h1 id=&#34;contents&#34;&gt;Contents&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#intro&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_ui_comp&#34;&gt;What is a UI Component&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#structure&#34;&gt;Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#important_to_note&#34;&gt;Important to Note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tech_to_understand&#34;&gt;Technologies You Need to Understand&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#xml&#34;&gt;XML, XHTML and XSD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#knockoutjs&#34;&gt;KnockoutJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#requirejs&#34;&gt;RequireJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pestle&#34;&gt;Pestle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#much_components&#34;&gt;Javascript, KnockoutJS + Magento and UI Components&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_js_component&#34;&gt;What is a Javascript (JS) Component?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_ko_mage_component&#34;&gt;What is a KnockoutJS + Magento component?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_the_diff&#34;&gt;What&amp;rsquo;s the difference between the three?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ui_comp_flow&#34;&gt;UI Component Process Flow&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#the_players&#34;&gt;The Players&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#process_flow_chart&#34;&gt;Process Flow Chart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#video&#34;&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mage_core_comps&#34;&gt;Magento Core UI Component Examples&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#form&#34;&gt;Form&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#listing&#34;&gt;Listing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&#34;intro&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Over the course of this article I will give you a whistle stop tour of UI Components.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;what_is_ui_comp&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;what-is-a-ui-component&#34;&gt;What is a UI Component?&lt;/h1&gt;

&lt;p&gt;In a nutshell a UI Component is an easily reusable collection of PHP, Javascript and HTML code that
provides one user interface functionality. A UI component can easily be used anywhere within your
layout files using only this small snippet.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;uiСomponent&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;some_ui_component_instance_name&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will make more sense &lt;a href=&#34;#knockoutjs&#34;&gt;later&lt;/a&gt;, but it also looks like UI Components add the M (model)
to KnockoutJS&amp;rsquo;s &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/hh848246.aspx&#34; target=&#34;_blank&#34;&gt;MVVM&lt;/a&gt;
(or really VVM) architecture. This architecture is used to build all of Magento 2&amp;rsquo;s front end.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;structure&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;structure&#34;&gt;Structure&lt;/h2&gt;

&lt;p&gt;UI Components are made up of &amp;lsquo;Basic Components&amp;rsquo; and &amp;lsquo;Secondary components&amp;rsquo;. The Basic Components are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/components/ui-listing-grid.html&#34; target=&#34;_blank&#34;&gt;Listing Component&lt;/a&gt; - Visualising and filtering data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/components/ui-form.html&#34; target=&#34;_blank&#34;&gt;Form Component&lt;/a&gt; - CRUD&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Secondary Components can be used to extend the functionality of the Basic Components. Each Basic
Component has it&amp;rsquo;s own set of Secondary Components. The latest devdocs (2.1) have a partial list of
all components &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/ui_comp_list_concept.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.
You can also find all the available UI Components listed in
this &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml#L8&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;definition.xml&lt;/code&gt;&lt;/a&gt;
(more on that later).&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;important_to_note&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;important-to-note&#34;&gt;Important to Note&lt;/h2&gt;

&lt;h3 id=&#34;you-can-t-create-custom-ui-components&#34;&gt;You Can&amp;rsquo;t Create Custom UI Components&lt;/h3&gt;

&lt;p&gt;According to the official &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/bk-ui_comps.html&#34; target=&#34;_blank&#34;&gt;devdocs&lt;/a&gt;,
extension developers &lt;em&gt;cannot&lt;/em&gt; create custom UI Components. You can only customise existing ones. However,
Alan Storm does have a &lt;a href=&#34;http://alanstorm.com/magento_2_simplest_xsd_valid_ui_component/&#34; target=&#34;_blank&#34;&gt;solution&lt;/a&gt; (hack) for getting around this.&lt;/p&gt;

&lt;h3 id=&#34;ui-components-are-only-really-for-the-admin&#34;&gt;UI Components Are Only Really for the Admin&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/bk-ui_comps.html&#34; target=&#34;_blank&#34;&gt;devdocs&lt;/a&gt;
state that UI Components can be used on the storefront as well as within the admin. However,
you will need to provide all your own styling and the Magento core team have not themselves used any
UI Components on the storefront.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;tech_to_understand&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;technologies-you-need-to-understand&#34;&gt;Technologies You Need to Understand&lt;/h1&gt;

&lt;p&gt;Before I dive into any UI Component details there are a number of technologies you &lt;em&gt;must&lt;/em&gt; understand
first.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;xml&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;xml-xhtml-and-xsd&#34;&gt;XML, XHTML and XSD&lt;/h2&gt;

&lt;h3 id=&#34;what-are-these&#34;&gt;What Are These?&lt;/h3&gt;

&lt;p&gt;If you&amp;rsquo;ve already worked with Magento 1 then you&amp;rsquo;ll already be (very) familiar with XML. If not,
then here&amp;rsquo;s a short description from &lt;a href=&#34;https://en.wikipedia.org/wiki/XML&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Extensible Markup Language (XML) is a markup language that defines a set of rules for
encoding documents in a format that is both human-readable and machine-readable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;XML is used for configuration files as well as the XHTML templates used by UI Components.&lt;/p&gt;

&lt;p&gt;So what&amp;rsquo;s XHTML? From &lt;a href=&#34;https://en.wikipedia.org/wiki/XHTML&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Extensible Hypertext Markup Language (XHTML) is part of the family of XML markup languages.
It mirrors or extends versions of the widely used Hypertext Markup Language (HTML)
&amp;hellip;
XHTML documents are well-formed and may therefore be parsed using standard XML parsers, unlike
HTML, which requires a lenient HTML-specific parser.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The TL;DR here is that unlike standard HTML, XHTML is strict. You can&amp;rsquo;t use anything that isn&amp;rsquo;t
defined within it&amp;rsquo;s XSD schema. &lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Ui/view/base/ui_component/templates/form/default.xhtml&#34; target=&#34;_blank&#34;&gt;UI Component templates&lt;/a&gt;
are all defined using XHTML.&lt;/p&gt;

&lt;p&gt;So what&amp;rsquo;s an XSD schema? From &lt;a href=&#34;https://en.wikipedia.org/wiki/XML_Schema_(W3C)&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;XSD (XML Schema Definition), a recommendation of the World Wide Web Consortium (W3C), specifies
how to formally describe the elements in an Extensible Markup Language (XML) document.
It can be used by programmers to verify each piece of item content in a document.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So the &lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Ui/etc/ui_components.xsd&#34; target=&#34;_blank&#34;&gt;XSD file&lt;/a&gt;
defines the valid XML nodes and their structure within a given document. This is used to
validate the XHTML templates and XML configuration files within Magento 2 as well as create a DSL
(&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain-specific_language&#34; target=&#34;_blank&#34;&gt;Domain Specific Language&lt;/a&gt;)
for &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Customer/view/base/ui_component/customer_form.xml&#34; target=&#34;_blank&#34;&gt;defining UI Components&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/XML&#34; target=&#34;_blank&#34;&gt;Wikipedia - XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/XHTML&#34; target=&#34;_blank&#34;&gt;Wikipedia - XHTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/XML_Schema_(W3C)&#34; target=&#34;_blank&#34;&gt;Wikipedia - XSD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;knockoutjs&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;knockoutjs&#34;&gt;KnockoutJS&lt;/h2&gt;

&lt;p&gt;From the KnockoutJS site:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Knockout is a JavaScript library that helps you to create rich, responsive display and editor user
interfaces with a clean underlying data model.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;what-is-knockoutjs&#34;&gt;What is KnockoutJS?&lt;/h3&gt;

&lt;p&gt;KnockoutJS uses an MVVM (&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/hh848246.aspx&#34; target=&#34;_blank&#34;&gt;model&amp;ndash;view&amp;ndash;view-Model&lt;/a&gt;)
architecture to create interfaces that update when an underlying data model is changed.&lt;/p&gt;

&lt;p&gt;Knockout&amp;rsquo;s MVVM looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://edmondscommerce.github.io/images/MVVM.svg&#34; alt=&#34;KnockoutJS MVVM&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The Javascript view-model is bound to the HTML view using Knockouts custom &lt;code&gt;data-bind&lt;/code&gt; attribute.
An example of this can be seen &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/form/collapsible.xhtml#L14&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.
Now, when the Javascript
data model within the view-model changes any HTML elements which are observing this view-model will
be updated. The view-model itself is triggered to update by the same HTML elements. The view-model will
update it&amp;rsquo;s temporary data model and pull data from / trigger updates within the Magento Model as required.&lt;/p&gt;

&lt;h3 id=&#34;what-s-it-used-for&#34;&gt;What&amp;rsquo;s It Used For?&lt;/h3&gt;

&lt;p&gt;KnockoutJS is used to power the UI Component interfaces (and all other Magento 2 interfaces).
It handles templating as well as user interface updates.&lt;/p&gt;

&lt;h3 id=&#34;knockoutjs-customisations-made-for-magento-2&#34;&gt;KnockoutJS Customisations made for Magento 2&lt;/h3&gt;

&lt;h4 id=&#34;custom-templating-engine&#34;&gt;Custom Templating Engine&lt;/h4&gt;

&lt;p&gt;The standard KnockoutJS templating engine expects the HTML templates to be present within the current page
like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;text/html&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;template_id&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The Magento core team have &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/template/engine.js&#34; target=&#34;_blank&#34;&gt;customised the KnockoutJS templating engine&lt;/a&gt;
so that it can now load templates from a remote source.&lt;/p&gt;

&lt;p&gt;This feature makes it easier to reuse templates as they are no longer embedded within &lt;code&gt;.phtml&lt;/code&gt; files.&lt;/p&gt;

&lt;h4 id=&#34;scope&#34;&gt;Scope&lt;/h4&gt;

&lt;p&gt;The Magento core team have also added a &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bindings/scope.js&#34; target=&#34;_blank&#34;&gt;custom &lt;code&gt;scope&lt;/code&gt;&lt;/a&gt;
binding. This binding allows you to easily
bind a view-model to a template (HTML) element on a per template basis. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;data-bind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;scope: &amp;#39;some_view_model.some_view_model&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This knockout view-model (listed under the &lt;code&gt;&amp;quot;components&amp;quot;&lt;/code&gt; key within the JSON configuration) is
instantiated using the &lt;code&gt;Magento_Ui/js/core/app&lt;/code&gt; Javascript component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
{
    &amp;quot;*&amp;quot;: {
        &amp;quot;Magento_Ui/js/core/app&amp;quot;: {
            &amp;quot;components&amp;quot;: {
                &amp;quot;some_view_model&amp;quot;: {
                    &amp;quot;component&amp;quot;: &amp;quot;&amp;lt;Namespace&amp;gt;_&amp;lt;Module&amp;gt;/js/view/someViewModel&amp;quot;
                }
            }
        }
    }
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;further-reading-1&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/knockoutjs_primer_for_magento_developers/&#34; target=&#34;_blank&#34;&gt;Alan Storm - KnockoutJS Primer for Magento Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_knockoutjs_integration/&#34; target=&#34;_blank&#34;&gt;Alan Storm - KnockoutJS Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&#34; target=&#34;_blank&#34;&gt;KnockoutJS - benefits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://knockoutjs.com/documentation/observables.html&#34; target=&#34;_blank&#34;&gt;KnockoutJS - MVVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel&#34; target=&#34;_blank&#34;&gt;Wikipedia - MVVM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;requirejs&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;requirejs&#34;&gt;RequireJS&lt;/h2&gt;

&lt;p&gt;From the RequireJS site:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;RequireJS is a JavaScript file and module loader. It is optimized for in-browser use, but it can be
used in other JavaScript environments, like Rhino and Node. Using a modular script loader like
RequireJS will improve the speed and quality of your code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;what-is-requirejs&#34;&gt;What is RequireJS?&lt;/h3&gt;

&lt;p&gt;RequireJS uses the AMD (&lt;a href=&#34;https://github.com/amdjs/amdjs-api/blob/master/AMD.md&#34; target=&#34;_blank&#34;&gt;Asynchronous Module Definition&lt;/a&gt;)
standard to provide dependency management and modules. RequireJS uses lazy loading to only load a module
when it&amp;rsquo;s required, this can speed up page load times. By implementing the AMD standard it can also load
dependencies asynchronously and provides no guarantees about the order in which a modules dependencies
will be fetched.&lt;/p&gt;

&lt;p&gt;The asynchronous nature of RequireJS can be an issue for non AMD compliant modules. For example, JQuery
plugins that depend on JQuery itself. In these cases RequireJS can be configured to load one (or more)
of a modules dependencies after a subset of the other dependencies have loaded using the
&lt;a href=&#34;http://requirejs.org/docs/api.html#config-shim&#34; target=&#34;_blank&#34;&gt;shim&lt;/a&gt; configuration value.&lt;/p&gt;

&lt;h3 id=&#34;what-s-it-used-for-1&#34;&gt;What&amp;rsquo;s It Used For?&lt;/h3&gt;

&lt;p&gt;All Magento 2 Javascript code (modules) make use of RequireJS to load their dependencies.&lt;/p&gt;

&lt;h3 id=&#34;further-reading-2&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/amdjs/amdjs-api/blob/master/AMD.md&#34; target=&#34;_blank&#34;&gt;AMD specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://requirejs.org/docs/whyamd.html&#34; target=&#34;_blank&#34;&gt;RequireJS - AMD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://requirejs.org/docs/api.html#config-shim&#34; target=&#34;_blank&#34;&gt;RequireJS - Shim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_and_requirejs/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Magento 2 and RequireJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/javascript-dev-guide/javascript/js-resources.html&#34; target=&#34;_blank&#34;&gt;Magento 2 devdocs - RequireJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;pestle&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;pestle&#34;&gt;Pestle&lt;/h2&gt;

&lt;p&gt;If you don&amp;rsquo;t want to spend your time creating module boiler plate code / configuration then you&amp;rsquo;ll want
to check out Pestle. Pestle is a static code generator which provides a number of
templates / helpful functions for Magento 2.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;$ php pestle list
  ...
  magento2:generate:acl
  magento2:generate:command
  magento2:generate:config_helper
  magento2:generate:crud_model
  magento2:generate:di
  magento2:generate:install
  magento2:generate:menu
  magento2:generate:module
  magento2:generate:observer
  magento2:generate:plugin_xml
  magento2:generate:preference
  magento2:generate:psr_log_level
  magento2:generate:registration
  magento2:generate:route
  magento2:generate:theme
  magento2:generate:ui:add-column-actions
  magento2:generate:ui:add-column-sections
  magento2:generate:ui:grid
  magento2:generate:view
  ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;further-reading-3&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/astorm/pestle&#34; target=&#34;_blank&#34;&gt;GitHub Pestle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento2_pestle_code_generation/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Code Generation with Pestle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;much_components&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;javascript-knockoutjs-magento-and-ui-components&#34;&gt;Javascript, KnockoutJS + Magento and UI Components&lt;/h1&gt;

&lt;p&gt;Did you know there are three types of component used within the Magento 2 front end?&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;what_is_js_component&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-is-a-javascript-js-component&#34;&gt;What is a Javascript (JS) Component?&lt;/h2&gt;

&lt;p&gt;A JS Component is a subtype of RequireJS module. It&amp;rsquo;s a RequireJS module that is loaded using a
&lt;code&gt;text/x-magento-init&lt;/code&gt; script tag and that always returns a function.
This function is then called by core Magento code which passes any configuration values you set
within the &lt;code&gt;text/x-magento-init&lt;/code&gt; script tag as arguments. &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/core/app.js&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento_UI/js/core/app&lt;/code&gt;&lt;/a&gt;
that we saw above is a good example of this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
{
    &amp;quot;*&amp;quot;: {
        &amp;quot;Magento_Ui/js/core/app&amp;quot;: { &amp;lt;---- Module to be instantiate
            &amp;quot;components&amp;quot;: {       ^------ Object with all values to be passed as function arguments
                &amp;quot;some_view_model&amp;quot;: {
                    &amp;quot;component&amp;quot;: &amp;quot;&amp;lt;Namespace&amp;gt;_&amp;lt;Module&amp;gt;/js/view/someViewModel&amp;quot;
                }
            }
        }
    }
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;further-reading-4&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_javascript_init_scripts/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Javascript Init Scripts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;what_is_ko_mage_component&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-is-a-knockoutjs-magento-component&#34;&gt;What is a KnockoutJS + Magento component?&lt;/h2&gt;

&lt;p&gt;A plain KnockoutJS component is the grouping of a KnockoutJS template (HTML) and view-model (JS). This
component is then registered with KnockoutJS and provided a unique key. This key can then be used within
your standard HTML markup to instantiate the component.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;data-bind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;component:&amp;#39;some-component-key&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Due to the KnockoutJS customisations listed &lt;a href=&#34;#knockoutjs&#34;&gt;above&lt;/a&gt; this process is not quite the same
in Magento. Within Magento the template is loaded via a URL and the view-model is pulled from the
registered view-models using the scope binding. These are then linked together and registered as
a component.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;what_is_the_diff&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-s-the-difference-between-the-three&#34;&gt;What&amp;rsquo;s the difference between the three?&lt;/h2&gt;

&lt;p&gt;The naming is unfortunate here but to keep this straight in your head it&amp;rsquo;s probably best to remember:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JS Components - provide additional &lt;em&gt;behavioural&lt;/em&gt; functionality.&lt;/li&gt;
&lt;li&gt;KnockoutJS + Magento Components - provide additional &lt;em&gt;user interface&lt;/em&gt; functionality.&lt;/li&gt;
&lt;li&gt;UI Components - provide &lt;em&gt;building blocks&lt;/em&gt; for creating Admin interfaces (and utilise the above two component types).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;further-reading-5&#34;&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_javascript_init_scripts/&#34; target=&#34;_blank&#34;&gt;Alan Storm - JS Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/knockoutjs_primer_for_magento_developers/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Knockout Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/javascript-dev-guide/javascript/js_init.html&#34; target=&#34;_blank&#34;&gt;Magneto 2 devdocs - JS Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;ui_comp_flow&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;ui-component-process-flow&#34;&gt;UI Component Process Flow&lt;/h1&gt;

&lt;p&gt;&lt;a name=&#34;the_players&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-players&#34;&gt;The Players&lt;/h2&gt;

&lt;h3 id=&#34;layout&#34;&gt;Layout&lt;/h3&gt;

&lt;p&gt;This is your standard &lt;code&gt;&amp;lt;handle&amp;gt;.xml&lt;/code&gt; layout file. You add the UI Component to the layout using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;uiСomponent&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;some_ui_component_instance_name&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;module-agnostic-configuration&#34;&gt;Module Agnostic Configuration&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;definition.xml&lt;/code&gt;&lt;/a&gt;
file contains all default configuration for all the UI Components available in Magento 2. It
also defines the PHP classes used to generate any JSON configuration which eventually gets passed
to KnockoutJS. Any configuration set within the &lt;code&gt;definition.xml&lt;/code&gt; are global and effect all modules.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;...
&lt;span class=&#34;nt&#34;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Magento\Ui\Component\Form&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;argument&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;js_config&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;component&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Magento_Ui/js/form/form&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;template&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;templates/form/default&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The XML above basically says; instantiate the &lt;code&gt;Magento\Ui\Component\Form&lt;/code&gt; class by passing
the array of arguments contained within &lt;code&gt;&amp;lt;argument&amp;gt;&lt;/code&gt; to it&amp;rsquo;s constructor.&lt;/p&gt;

&lt;p&gt;The first argument:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;...
&lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;component&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Magento_Ui/js/form/form&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Says use &lt;code&gt;magento/module-ui/view/base/web/js/form/form.js&lt;/code&gt; as the KnockoutJS view-model for this
component.&lt;/p&gt;

&lt;p&gt;The second argument:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;template&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;templates/form/default&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Means use &lt;code&gt;magento/module-ui/view/base/templates/form/default.phtml&lt;/code&gt; as the default template for
this UI Component.&lt;/p&gt;

&lt;h3 id=&#34;top-level-configuration&#34;&gt;Top Level Configuration&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Customer/view/base/ui_component/customer_form.xml#L8&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;&amp;lt;component_name&amp;gt;.xml&lt;/code&gt;&lt;/a&gt;
file contains any configuration you wish to set on a UI Component at the module level.&lt;/p&gt;

&lt;p&gt;This will usually include the arguments to be passed to the UI Components PHP constructor
&lt;code&gt;&amp;lt;arguments&amp;gt;&lt;/code&gt;, the data source to be used by the UI Component &lt;code&gt;&amp;lt;dataSource&amp;gt;&lt;/code&gt; and any
Secondary Components to be included.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:noNamespaceSchemaLocation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;argument&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        ...
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dataSource&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;customer_form_data_source&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Covered in more detail below --&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dataSource&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;fieldset&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;customer&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Secondary Component --&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;fieldset&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;address&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        ...
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Any nodes added within the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; node here which are not either
&lt;code&gt;&amp;lt;argument&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;dataSource&amp;gt;&lt;/code&gt; are considered to be a new Secondary Component instance.
These can be recursively nested so a Secondary Component can contain another etc.&lt;/p&gt;

&lt;p&gt;Any arguments set here will override the default values set within &lt;code&gt;definition.xml&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;abstractcomponent&#34;&gt;AbstractComponent&lt;/h3&gt;

&lt;p&gt;Each UI Component is backed by a
&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/Form.php&#34; target=&#34;_blank&#34;&gt;PHP class&lt;/a&gt;
extending from
&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/AbstractComponent.php&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento\Ui\Component\AbstractComponent&lt;/code&gt;&lt;/a&gt;.
This class processes both the top level and module agnostic &lt;code&gt;&amp;lt;argument&amp;gt;&lt;/code&gt; values and generates the
JSON configuration later used to instantiate a KnockoutJS view-model and assign a template.&lt;/p&gt;

&lt;h3 id=&#34;view-model-constructor&#34;&gt;View-Model Constructor&lt;/h3&gt;

&lt;p&gt;In the module agnostic configuration above we configured a view-model. This view-model is a RequireJS
module that extends from &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/core/element/element.js&#34; target=&#34;_blank&#34;&gt;uiElement&lt;/a&gt;.
This extended uiElement is then returned from the module to be used as a view-model constructor.&lt;/p&gt;

&lt;p&gt;Default values can be set within this constructor; top level and module agnostic configuration values
take precedence over these.&lt;/p&gt;

&lt;p&gt;If you require KnockoutJS you can also start adding state for your templates to observe and functions
to update / manage that state.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;uiElement&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;ko&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ko&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;extend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;quot;defaults&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;Namespace&amp;gt;_&amp;lt;ModuleName&amp;gt;/path/to/template&amp;#39;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;quot;some_value&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ko&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;observable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;template&#34;&gt;Template&lt;/h3&gt;

&lt;p&gt;UI Component templates like &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/form/collapsible.xhtml&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;collapsible.xhtml&lt;/code&gt;&lt;/a&gt;
are set within either the view-model constructor or the module agnostic or top level configurations.&lt;/p&gt;

&lt;p&gt;For the template to be rendered correctly it also needs to include the following comment:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;!-- ko template: getTemplate() --&amp;gt;&amp;lt;!-- /ko --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This calls the getTemplate() function on our view-model. This is inherited from
&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/core/element/element.js#L262&#34; target=&#34;_blank&#34;&gt;uiElement&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;uiregistry&#34;&gt;uiRegistry&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/registry/registry.js&#34; target=&#34;_blank&#34;&gt;uiRegistry&lt;/a&gt;
is a Magento 2 RequireJS module that&amp;rsquo;s used (as global state) to store all the currently
instantiated view-models. These models are stored as key value pairs. The key here maps to a
KnockoutJS scope binding value.&lt;/p&gt;

&lt;h3 id=&#34;engine-js-magento-ui-js-lib-knockout-template-engine&#34;&gt;engine.js (Magento_UI/js/lib/knockout/template/engine)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/template/engine.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
implements Magento 2&amp;rsquo;s custom KnockoutJS templating engine.&lt;/p&gt;

&lt;h3 id=&#34;bootstrap-js-magento-ui-js-lib-knockout-bootstrap&#34;&gt;bootstrap.js (Magento_UI/js/lib/knockout/bootstrap)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bootstrap.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
requires Magento 2&amp;rsquo;s custom templating engine and sets it as KnockoutJS&amp;rsquo;s
current templating engine.&lt;/p&gt;

&lt;h3 id=&#34;layout-js-magento-ui-js-core-renderer-layout&#34;&gt;layout.js (Magento_UI/js/core/renderer/layout)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/core/renderer/layout.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
is required by the the app module (see below) and handles the
instantiation of view-model objects. It adds these view-models to the
uiRegistry.&lt;/p&gt;

&lt;h3 id=&#34;app-js-magento-ui-js-core-app&#34;&gt;app.js (Magento_UI/js/core/app)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/core/app.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
requires the bootstrap module as well as the layout module. It calls the
function returned by the layout module starting the instantiation
of view-models.&lt;/p&gt;

&lt;h3 id=&#34;scope-js-magento-ui-js-lib-knockout-bindings-scope&#34;&gt;scope.js (Magento_UI/js/lib/knockout/bindings/scope)&lt;/h3&gt;

&lt;p&gt;This final &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bindings/scope.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
implements Magento 2&amp;rsquo;s custom scope binding. This module handles the linking
of view-models and views using it&amp;rsquo;s &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bindings/scope.js#L21&#34; target=&#34;_blank&#34;&gt;applyComponents()&lt;/a&gt;
function.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;process_flow_chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;process-flow-chart&#34;&gt;Process Flow Chart&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;
&lt;img src=&#34;https://edmondscommerce.github.io/images/UI Component Flow.svg&#34; alt=&#34;UI Component Process Flow&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;video&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;video&#34;&gt;Video&lt;/h2&gt;

&lt;p&gt;Here&amp;rsquo;s a video of me stepping through the above flow in PHPStorm and Chrome.&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/oN67ZdLat7Q&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;I&amp;rsquo;ve extracted the PHPStorm breakpoints and added them to &lt;a href=&#34;https://github.com/edmondscommerce/UI_Components_Breakpoints&#34; target=&#34;_blank&#34;&gt;this&lt;/a&gt;
GitHub repo (just in case you want to have a go yourself).&lt;/p&gt;

&lt;h3 id=&#34;further-reading-6&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;See all Alan Storm links above&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/concepts/ui_comp_config_flow_concept.html&#34; target=&#34;_blank&#34;&gt;Magento 2 devdocs - UI Component Configuration Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/bk-ui_comps.html&#34; target=&#34;_blank&#34;&gt;Magento 2 devdocs - Overview of UI Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;mage_core_comps&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;magento-core-ui-component-examples&#34;&gt;Magento Core UI Component Examples&lt;/h1&gt;

&lt;p&gt;Here are some links to the Magento 2 GitHub repo for you to investigate further.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;form&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;form&#34;&gt;Form&lt;/h2&gt;

&lt;p&gt;This is a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; used in the &lt;a href=&#34;https://github.com/magento/magento2/tree/develop/app/code/Magento/Theme&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento_Theme&lt;/code&gt;&lt;/a&gt;
module.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Theme/view/adminhtml/layout/theme_design_config_edit.xml#L18&#34; target=&#34;_blank&#34;&gt;Layout XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml&#34; target=&#34;_blank&#34;&gt;Module Agnostic Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Theme/view/adminhtml/ui_component/design_config_form.xml&#34; target=&#34;_blank&#34;&gt;Top Level Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/Form.php&#34; target=&#34;_blank&#34;&gt;AbstractComponent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/form/form.js&#34; target=&#34;_blank&#34;&gt;View-Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/form/collapsible.xhtml&#34; target=&#34;_blank&#34;&gt;Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;listing&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;listing&#34;&gt;Listing&lt;/h2&gt;

&lt;p&gt;This is a &lt;code&gt;&amp;lt;listing&amp;gt;&lt;/code&gt; used in the &lt;a href=&#34;https://github.com/magento/magento2/tree/develop/app/code/Magento/Customer&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento_Customer&lt;/code&gt;&lt;/a&gt;
module.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Customer/view/adminhtml/layout/customer_index_index.xml#L12&#34; target=&#34;_blank&#34;&gt;Layout XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml&#34; target=&#34;_blank&#34;&gt;Module Agnostic Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Customer/view/adminhtml/ui_component/customer_listing.xml&#34; target=&#34;_blank&#34;&gt;Top Level Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/Listing.php&#34; target=&#34;_blank&#34;&gt;AbstractComponent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/core/collection.js&#34; target=&#34;_blank&#34;&gt;View-Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/listing/default.xhtml&#34; target=&#34;_blank&#34;&gt;Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Magento 2 Vendor Module and App/code Issues</title>
      <link>https://edmondscommerce.github.io/magento-2-vendor-module-and-app/code-issues/</link>
      <pubDate>Tue, 29 Nov 2016 10:31:29 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-2-vendor-module-and-app/code-issues/</guid>
      <description>&lt;p&gt;We recently came across a recurring (and annoying) problem with some of our Magento 2 modules.
The issue was that when ever composer install/update was called the module would be copied to app/code and thus cause class name conflicts with the canonical module in vendor.&lt;/p&gt;

&lt;p&gt;The fix for this was hard to find and it turns out the Magento 2&amp;rsquo;s documentation needs updating.&lt;/p&gt;

&lt;p&gt;To fix the problem, look to your module&amp;rsquo;s &lt;code&gt;composer.json&lt;/code&gt; and find the &lt;code&gt;extra&lt;/code&gt; field.&lt;/p&gt;

&lt;p&gt;If it is present and contains a &lt;code&gt;map&lt;/code&gt; directive like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;s2&#34;&gt;&amp;quot;extra&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;map&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
            &lt;span class=&#34;s2&#34;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;s2&#34;&gt;&amp;quot;VendorName/ModuleName&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then remove it, but ensure that your PSR-4 namespacing is set up correctly.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;autoload&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;quot;files&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
            &lt;span class=&#34;s2&#34;&gt;&amp;quot;registration.php&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;quot;psr-4&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;VendorName\\ModuleName\\&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See the following &lt;a href=&#34;https://github.com/edmondscommerce/magento2-migrations/commit/ba6e5976873d73a817624e35f062d47da0537a99&#34;&gt;commit&lt;/a&gt; and &lt;a href=&#34;https://github.com/edmondscommerce/magento2-migrations/blob/master/composer.json&#34;&gt;composer.json&lt;/a&gt; for a full example&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Admins Black Friday Survival Public Service Announcement</title>
      <link>https://edmondscommerce.github.io/magento-admins-black-friday-survival-public-service-announcement/</link>
      <pubDate>Fri, 25 Nov 2016 11:25:47 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-admins-black-friday-survival-public-service-announcement/</guid>
      <description>

&lt;h1 id=&#34;magento-site-being-flooded-with-buyers-struggling-with-server-load&#34;&gt;Magento Site Being Flooded with Buyers, Struggling with Server Load?&lt;/h1&gt;

&lt;p&gt;If your Magento site is currently being flooded with orders and visitors and the server is struggling to cope then I have one simple and easy to action tip for you:&lt;/p&gt;

&lt;h3 id=&#34;do-as-little-as-possible-in-the-admin&#34;&gt;&lt;em&gt;Do as little as possible in the admin&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Did you know that every time you update product details and other wise change things in the admin then you are likely to cause one or both of the indexes and caches to require a flush?&lt;/p&gt;

&lt;p&gt;In normal operation that is not a big deal, but if your server is being maxed out then you really don&amp;rsquo;t want to force it to stop serving requests and spend precious seconds rebuilding caches and indexes.&lt;/p&gt;

&lt;p&gt;Furthermore, the admin is in itself a heavy beast that your webserver has to do a lot of work to prepare each page load. As a total &lt;em&gt;finger in the air estimate&lt;/em&gt; I&amp;rsquo;d say a single admin page view is worth around &lt;em&gt;10&lt;/em&gt; front end page views. If you are making good use of caching then that could be more like &lt;em&gt;100&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This means that if you want your site to continue working on the front end through Black Friday then I really suggest you restrict admin usage to the minimum.&lt;/p&gt;

&lt;h3 id=&#34;stuck-for-something-to-do&#34;&gt;Stuck for something to do?&lt;/h3&gt;

&lt;p&gt;Why not fire up Google Analytics real time stats, put your feet up and drink tea whilst watching people flood through your checkout process :)&lt;/p&gt;

&lt;h3 id=&#34;commercial-bit&#34;&gt;&lt;em&gt;Commercial Bit:&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Of course, if you are realising that you really could have been better prepared for today&amp;hellip;&lt;/p&gt;

&lt;p&gt;That you are losing sales because your site and server are not performing at their best..&lt;/p&gt;

&lt;p&gt;You are starting to think that you could do with some high quality professional Magento expertise&amp;hellip;&lt;/p&gt;

&lt;p&gt;Then why not get in touch with &lt;a href=&#34;https://www.edmondscommerce.co.uk&#34; target=&#34;_blank&#34;&gt;Edmonds Commerce&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;0044 113 880 5654&lt;/p&gt;

&lt;p&gt;Cheers&lt;/p&gt;

&lt;p&gt;Joseph&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Supee-8788 Supee-1533 Conflict Fixed</title>
      <link>https://edmondscommerce.github.io/magento-supee-8788-supee-1533-conflict-fixed/</link>
      <pubDate>Thu, 13 Oct 2016 10:19:52 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-supee-8788-supee-1533-conflict-fixed/</guid>
      <description>

&lt;p&gt;TL;DR Run the script at the bottom.&lt;/p&gt;

&lt;h1 id=&#34;the-issue&#34;&gt;The Issue&lt;/h1&gt;

&lt;p&gt;If you&amp;rsquo;ve previously applied the SUPEE-1533 patch to your Magento site, then when you
try to apply the SUPEE-8788 patch you&amp;rsquo;ll see the following error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;checking file app/code/core/Mage/Adminhtml/controllers/DashboardController.php
Hunk #1 FAILED at 91.
1 out of 1 hunk FAILED
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is caused by the fact that the SUPEE-8788 patch seems to have been taken against an
un-patched version of Magento. This can be seen from the following:&lt;/p&gt;

&lt;p&gt;The SUPEE-8788 patch contains:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@@ -91,7 +91,7 @@ class Mage_Adminhtml_DashboardController extends Mage_Adminhtml_Controller_Actio
         if ($gaData &amp;amp;&amp;amp; $gaHash) {
             $newHash = Mage::helper(&#39;adminhtml/dashboard_data&#39;)-&amp;gt;getChartDataHash($gaData);
-            if ($newHash == $gaHash) {
+            if (hash_equals($newHash, $gaHash)) {
                 if ($params = unserialize(base64_decode(urldecode($gaData)))) {
                     $response = $httpClient-&amp;gt;setUri(Mage_Adminhtml_Block_Dashboard_Graph::API_URL)
                             -&amp;gt;setParameterGet($params)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The important line here is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                 if ($params = unserialize(base64_decode(urldecode($gaData)))) {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which is supposed to match up with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        if ($gaData &amp;amp;&amp;amp; $gaHash) {
            $newHash = Mage::helper(&#39;adminhtml/dashboard_data&#39;)-&amp;gt;getChartDataHash($gaData);
            if ($newHash == $gaHash) {
                $params = json_decode(base64_decode(urldecode($gaData)), true);
                if ($params) {
                    $response = $httpClient-&amp;gt;setUri(Mage_Adminhtml_Block_Dashboard_Graph::API_URL)
                            -&amp;gt;setParameterGet($params)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The important lines here are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                $params = json_decode(base64_decode(urldecode($gaData)), true);
                if ($params) {

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now they don&amp;rsquo;t match because of the change made in SUPEE-1533:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;         if ($gaData &amp;amp;&amp;amp; $gaHash) {
             $newHash = Mage::helper(&#39;adminhtml/dashboard_data&#39;)-&amp;gt;getChartDataHash($gaData);
             if ($newHash == $gaHash) {
-                if ($params = unserialize(base64_decode(urldecode($gaData)))) {
+                $params = json_decode(base64_decode(urldecode($gaData)), true);
+                if ($params) {
                     $response = $httpClient-&amp;gt;setUri(Mage_Adminhtml_Block_Dashboard_Graph::API_URL)
                             -&amp;gt;setParameterGet($params)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;the-fix&#34;&gt;The Fix&lt;/h1&gt;

&lt;p&gt;In order to apply SUPEE-8788 we need to temporarily revert the changes made to
&lt;code&gt;DashboardController.php&lt;/code&gt; by SUPEE-1533. We can then apply the patch and restore
the SUPEE-1533 changes.&lt;/p&gt;

&lt;p&gt;[NOTE: It&amp;rsquo;s really important you restore the SUPEE-1533 changes as the use of
json_encode here protects against the &lt;a href=&#34;https://magento.com/security-patch&#34; target=&#34;_blank&#34;&gt;Shoplift Bug&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;To install the patch copy the following script into a .sh file in the root of your
Magento install (along with the SUPEE-8788 patch) and run the script.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;dashboard_controller&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;app/code/core/Mage/Adminhtml/controllers/DashboardController.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Remove &amp;#39;if ($params) {&amp;#39;&lt;/span&gt;
sed -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;96d&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dashboard_controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Replace json_encode line with serialize line&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;json_encode_line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$params = json_decode(base64_decode(urldecode($gaData)), true);&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;serialize_line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;if ($params = unserialize(base64_decode(urldecode($gaData)))) {&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
sed -i -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;s/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$json_encode_line&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$serialize_line&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&amp;quot;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dashboard_controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# This now puts the code in the state expected by the patch&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Apply SUPEE-8788 patch&lt;/span&gt;
sh PATCH_SUPEE-8788_CE_1.8.1.0_v1-2016-10-11-06-54-44.sh

&lt;span class=&#34;c1&#34;&gt;# Add back &amp;#39;if ($params) {&amp;#39;&lt;/span&gt;
sed -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;96i\                if ($params) {&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dashboard_controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Add back json_encode line&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;serialize_line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;if ($params = unserialize(base64_decode(urldecode($gaData)))) {&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;json_encode_line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$params = json_decode(base64_decode(urldecode($gaData)), true);&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
sed -i -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;s/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$serialize_line&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$json_encode_line&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&amp;quot;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dashboard_controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;handy-links&#34;&gt;Handy Links&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://magento.stackexchange.com/questions/140550/security-patch-supee-8788-possible-problems&#34; target=&#34;_blank&#34;&gt;SUPEE-8788 Stackoverflow thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://magento.com/security/patches/supee-8788&#34; target=&#34;_blank&#34;&gt;Official SUPEE-8788 page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Magento Smtppro Gmail Issue Solution</title>
      <link>https://edmondscommerce.github.io/magento-smtppro-gmail-issue-solution/</link>
      <pubDate>Tue, 04 Oct 2016 14:52:11 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-smtppro-gmail-issue-solution/</guid>
      <description>&lt;p&gt;If you Magento site has stopped sending emails via SMTP Pro then you will want to have a look in your exception log - &lt;code&gt;var/log/exception.log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you see messages in there along the lines of&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2016-10-04T14:27:52+00:00 ERR (3): 
exception &#39;Zend_Mail_Protocol_Exception&#39; with message &#39;5.7.14 &amp;lt;https://accounts.google.com/signin/continue?AKgnsbu-
 5.7.14 Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123
 5.7.14 Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123
 5.7.14 Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123Abc123
 5.7.14 Abc123Abc123Abc123&amp;gt; Please log in via your web browser and
 5.7.14 then try again.
 5.7.14  Learn more at
 5.7.14  https://support.google.com/mail/answer/78754 103sm1699291ioi.29 - gsmtp
&#39; in /var/www/vhosts/www.domain.com/public/lib/Zend/Mail/Protocol/Abstract.php:431
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then the solution is to log into the gmail web interface, but via your server&amp;rsquo;s IP address.&lt;/p&gt;

&lt;p&gt;Not really the easiest thing to do, and there are a few ways of approaching this. The one that worked for me was to install Squid and use this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum -y install squid

sudo echo &amp;quot;
acl ec src 194.12.9.18
http_access allow ec
&amp;quot; &amp;gt;&amp;gt; /etc/squid/squid.conf

sudo systemctl start squid

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;note you might need to open up firewall ports as well&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once that is running then you can connect to your squid proxy using a local browser.&lt;/p&gt;

&lt;p&gt;Using firefox, you need to go to preferences / advanced / network and the proxy&lt;/p&gt;

&lt;p&gt;Set up your server IP as the proxy IP, set the port to &lt;code&gt;3128&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You should now be able to browse the web via firefox and the requests are routed via your server.&lt;/p&gt;

&lt;p&gt;You can check this by searching google for &lt;code&gt;ip&lt;/code&gt; and you should get your servers IP address.&lt;/p&gt;

&lt;p&gt;Once you have this working, simply sign into gmail itself and then the issue should be sorted.&lt;/p&gt;

&lt;p&gt;Once it is working, then make sure you remember to close down squid and close down any firewall ports you opended&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo systemctl stop squid

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Adding new less imports in Magento 2 in Development mode</title>
      <link>https://edmondscommerce.github.io/adding-new-less-imports-in-magento-2-in-development-mode/</link>
      <pubDate>Mon, 03 Oct 2016 18:54:20 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/adding-new-less-imports-in-magento-2-in-development-mode/</guid>
      <description>&lt;p&gt;Importing a new less file when extending a Magento theme needs a few steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create the new file in your theme (in the &lt;code&gt;app/design/frontend/&amp;lt;vendor&amp;gt;/&amp;lt;theme&amp;gt;/web/css/source/&lt;/code&gt; folder)&lt;/li&gt;
&lt;li&gt;Add an import directive for that file in your normal &lt;code&gt;_extend.less&lt;/code&gt; file with &lt;code&gt;//@magento_import &#39;_newfile.less&#39;;&lt;/code&gt; (yes, with the &lt;code&gt;//&lt;/code&gt; - &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/css-topics/css-preprocess.html#fedg_css-magento-import&#34; target=&#34;_blank&#34;&gt;see here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;development&lt;/strong&gt; mode, build the files using the &lt;code&gt;grunt exec&lt;/code&gt; command†. This creates symlinks in your &lt;code&gt;pub/static/frontend/&amp;lt;vendor&amp;gt;/&amp;lt;theme&amp;gt;/&amp;lt;locale&amp;gt;/css/source/&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;production&lt;/strong&gt; mode, build the files using the &lt;code&gt;bin/magento setup:source-theme:deploy&lt;/code&gt; command. This copies the less files into the &lt;code&gt;pub/static/frontend/&amp;lt;vendor&amp;gt;/&amp;lt;theme&amp;gt;/&amp;lt;locale&amp;gt;/css/source/&lt;/code&gt; folder&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That should be it.&lt;/p&gt;

&lt;p&gt;† - I&amp;rsquo;m pretty sure the &lt;code&gt;bin/magento dev:source-theme:deploy&lt;/code&gt; command should cover this, but for some reason it didn&amp;rsquo;t work for me&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento 2 - Creating a New Blank Template Block</title>
      <link>https://edmondscommerce.github.io/magento-2---creating-a-new-blank-template-block/</link>
      <pubDate>Mon, 19 Sep 2016 14:52:10 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-2---creating-a-new-blank-template-block/</guid>
      <description>&lt;p&gt;If you want to insert some custom HTML into a page in Magento 2, you&amp;rsquo;ll need to add some layout XML and a template file.&lt;/p&gt;

&lt;p&gt;The equivalent in Magento 1 is a &lt;code&gt;&amp;lt;block type=&amp;quot;core/template&amp;quot; template=&amp;quot;path/to/template.phtml&amp;quot; name=&amp;quot;block_name&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In Magento 2 you achieve this by adding a &lt;code&gt;&amp;lt;container&amp;gt;&lt;/code&gt; in your &lt;code&gt;default.xml&lt;/code&gt; (or other layout file) with the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;referenceContainer name=&amp;quot;container_name&amp;quot;&amp;gt; &amp;lt;!-- the name of the container you want to insert into --&amp;gt;
    &amp;lt;container name=&amp;quot;new_container&amp;quot; htmlClass=&amp;quot;container_css_class&amp;quot; htmlTag=&amp;quot;div&amp;quot;&amp;gt;
        &amp;lt;block class=&amp;quot;Magento\Framework\View\Element\Template&amp;quot; template=&amp;quot;Magento_Theme::path/to/template.phtml&amp;quot; name=&amp;quot;block_name&amp;quot; /&amp;gt;
    &amp;lt;/container&amp;gt;
&amp;lt;/referenceContainer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then create a template in &lt;code&gt;app/design/frontend/&amp;lt;your_vendor&amp;gt;/&amp;lt;your_theme&amp;gt;/Magento_Theme/path/to/template.phtml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Remember to flush all caches.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento 2 Quick Start and Common Gotchas</title>
      <link>https://edmondscommerce.github.io/magento-2-quick-start-and-common-gotchas/</link>
      <pubDate>Mon, 05 Sep 2016 10:40:56 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-2-quick-start-and-common-gotchas/</guid>
      <description>

&lt;p&gt;This post is actually the content for a &lt;a href=&#34;http://www.meetup.com/PHP-E-Commerce-Leeds-Bradford-Meetup/events/233554811/&#34; target=&#34;_blank&#34;&gt;presentation&lt;/a&gt; I gave recently at the &lt;a href=&#34;http://www.meetup.com/PHP-E-Commerce-Leeds-Bradford-Meetup/&#34; target=&#34;_blank&#34;&gt;PHP E-Commerce Leeds/Bradford Meetup&lt;/a&gt;.
&lt;a name=&#34;contents&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;contents&#34;&gt;Contents&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#intro&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#installing_dependencies&#34;&gt;Installing Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#preparing_install&#34;&gt;Preparing to Install Magento 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#installing_magento2&#34;&gt;Installing and Configuring Magento 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#further&#34;&gt;Further Notes and Tips&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;intro&#34;&gt;&lt;/a&gt;&lt;a href=&#34;#contents&#34;&gt;back to top&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;In this presentation, we will be getting &lt;a href=&#34;https://magento.com/developers/magento2&#34; target=&#34;_blank&#34;&gt;Magento 2&lt;/a&gt; installed and working. There are many ways you can approach this including choice of Linux distribution, database, web server, PHP version and many more. The following is by no means the only way to approach this task, but it is the way we have chosen at &lt;a href=&#34;https://www.edmondscommerce.co.uk&#34; target=&#34;_blank&#34;&gt;Edmonds Commerce&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In summary here are our choices:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Choice&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Linux Distribution&lt;/td&gt;
&lt;td&gt;CentOS 7&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Web Server&lt;/td&gt;
&lt;td&gt;Nginx&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Database&lt;/td&gt;
&lt;td&gt;Percona 5.6&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PHP Version&lt;/td&gt;
&lt;td&gt;7 (not less than 7.0.6)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PHP SAPI&lt;/td&gt;
&lt;td&gt;PHP-FPM&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PHP OPcache&lt;/td&gt;
&lt;td&gt;Zend OPcache&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Magento Version&lt;/td&gt;
&lt;td&gt;Latest (2.1 at time of writing)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Magento Installation Type&lt;/td&gt;
&lt;td&gt;Integrator&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Magento Installation Method&lt;/td&gt;
&lt;td&gt;Command Line&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;We will write the article on the basis of you already having a clean Centos 7 installation. This could be a Virtual Machine, LXC container or an actual virtual or dedicated server. If you aren&amp;rsquo;t sure, I&amp;rsquo;d suggest starting out with &lt;a href=&#34;https://www.virtualbox.org/&#34; target=&#34;_blank&#34;&gt;VirtualBox&lt;/a&gt; as the easiest cross platform way to create local Virtual Machines.&lt;/p&gt;

&lt;p&gt;Unless otherwise specified, you can assume the commands provided are to be entered onto a BASH command line terminal on your Linux server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Where a command has a clear placeholder for your own value, you might want to copy/paste into a text editor and edit the command before you paste it into your terminal&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;installing_dependencies&#34;&gt;&lt;/a&gt;&lt;a href=&#34;#contents&#34;&gt;back to top&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;installing-dependencies&#34;&gt;Installing Dependencies&lt;/h1&gt;

&lt;p&gt;This section is all about getting you form a basic Linux installation (CentOS in this case) and installing everything that you will need to run Magento 2.&lt;/p&gt;

&lt;p&gt;Magento provide some good documentation on &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/install-gde/system-requirements-tech.html&#34; target=&#34;_blank&#34;&gt;Magento 2 requirements&lt;/a&gt; which clearly describe what needs to be available. Here we are going to take our basic CentOS machine and get it ready with all the requirements in place.&lt;/p&gt;

&lt;h2 id=&#34;basic-centos-setup&#34;&gt;Basic CentOS Setup&lt;/h2&gt;

&lt;p&gt;The first thing I&amp;rsquo;d suggest you do with your CentoOS machine is run a full yum upgrade&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;yum -y upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once this is done, it&amp;rsquo;s time to start installing some basics:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;  the below is not a complete CentOS setup guide, its a taste of the kinds of things you might want to do. A full guide is beyond the scope of this article.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# some basics&lt;/span&gt;
yum -y install epel-release

yum -y install &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    htop &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    iftop &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    curl &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    wget &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    tar &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    vim &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    bash_completion &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    sudo &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    logrotate &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    p7zip &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    yum-utils &lt;span class=&#34;se&#34;&gt;\&lt;/span&gt;
    openssl    

&lt;span class=&#34;c1&#34;&gt;# cron install and start&lt;/span&gt;
yum -y install crontabs
service crond start
chkconfig crond on

&lt;span class=&#34;c1&#34;&gt;# install SSH - I leave securing it etc to you&lt;/span&gt;
yum install openssh-server
systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; sshd
systemctl start sshd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; For a production server, you will need to make sure that sufficient time and effort is put into &lt;strong&gt;properly locking it down and securing it&lt;/strong&gt;, or ensuring that your hosting company has done this for you.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;magento2-user&#34;&gt;Magento2 User&lt;/h2&gt;

&lt;p&gt;We now need to create a user that will be the owner of the files of the Magento 2 site. For our purposes, I&amp;rsquo;m going to call this user magento2.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;useradd magento2 -p YOUR_PASSWORD_HERE

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We will use this user later on.&lt;/p&gt;

&lt;h2 id=&#34;mysql&#34;&gt;MySQL&lt;/h2&gt;

&lt;p&gt;Magento requires MySQL 5.6&lt;/p&gt;

&lt;p&gt;This is quite a specific requirement and if you try to run it on another version you will see issues so it makes sense just to do what is recommended.&lt;/p&gt;

&lt;p&gt;Rather than use original MySQL, we tend to prefer to use Percona which has a reputation for high performance.&lt;/p&gt;

&lt;p&gt;Here are some commands to install Percona 5.6&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;yum -y install http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm

yum -y install Percona-Server-server-56
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we need to fix an issue with the MySQL socket permissions.&lt;/p&gt;

&lt;p&gt;Copy and paste all of the following into your terminal in one go:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;mv /usr/lib/systemd/system/mysqld.service /usr/lib/systemd/system/mysqld.orig

&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;# Systemd service file for Percona Server&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;#&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;# # This service file is to start PS just with mysqld_safe&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;#&lt;/span&gt;

&lt;span class=&#34;s1&#34;&gt;[Unit]&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;Description=MySQL Percona Server&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;After=network.target&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;After=syslog.target&lt;/span&gt;

&lt;span class=&#34;s1&#34;&gt;[Install]&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;WantedBy=multi-user.target&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;Alias=mysql.service&lt;/span&gt;

&lt;span class=&#34;s1&#34;&gt;[Service]&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;# Needed to create system tables etc.&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;ExecStartPre=/usr/bin/mysql-systemd pre&lt;/span&gt;

&lt;span class=&#34;s1&#34;&gt;# Start main service&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;ExecStart=/usr/bin/mysqld_safe&lt;/span&gt;

&lt;span class=&#34;s1&#34;&gt;# Dont signal startup success before a ping works&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;ExecStartPost=/usr/bin/mysql-systemd post&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;ExecStartPost=/bin/bash -c &amp;quot;chmod 777 /var/lib/mysql/mysql.sock&amp;quot;&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;# Give up if ping dont get an answer&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;TimeoutSec=600&lt;/span&gt;

&lt;span class=&#34;s1&#34;&gt;Restart=always&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;RestartSec=3&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;PrivateTmp=false&amp;#39;&lt;/span&gt; &amp;gt; /usr/lib/systemd/system/mysqld.service

systemctl daemon-reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then get MySQL running&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; mysqld

systemctl start mysqld

systemctl status mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then you need to secure your MySQL installation, set a root password etc. There is a simple way to do this, just run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can just hit return for most quesions and accept the (sensible) default actions. The only thing you need to put in is the root password.&lt;/p&gt;

&lt;p&gt;Keep track of your root password as you will need that next.&lt;/p&gt;

&lt;p&gt;One you have done the MySQL secure installation, you should create a &lt;code&gt;.my.cnf&lt;/code&gt; file in the home folder of any users you want to be able to connect to mysql easily. For example &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;magento&lt;/code&gt; users.&lt;/p&gt;

&lt;p&gt;First - create a BASH variable with your MySQL root password.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;mysqlRootPassword&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;PUT_YOUR_ROOT_PASSWORD_HERE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then run the following to create your &lt;code&gt;.my.cnf&lt;/code&gt; files&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;[client]&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;user=root&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;password=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$mysqlRootPassword&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;   &amp;gt; ~/.my.cnf
chmod &lt;span class=&#34;m&#34;&gt;600&lt;/span&gt; ~/.my.cnf

&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;[client]&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;user=root&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;password=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$mysqlRootPassword&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;   &amp;gt; /home/magento2/.my.cnf
chown magento2:magento2 /home/magento2/.my.cnf
chmod &lt;span class=&#34;m&#34;&gt;600&lt;/span&gt; /home/magento2/.my.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;php-fpm&#34;&gt;PHP-FPM&lt;/h2&gt;

&lt;p&gt;PHP-FPM (Fast Process Manager) is currently the best practice approach for installing PHP. Also, if you want to use Nginx then it is basically essential as there is no equivalent of Apache&amp;rsquo;s mod_php for Nginx.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm

yum -y install php70w-fpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;extensions&#34;&gt;Extensions&lt;/h3&gt;

&lt;p&gt;We also need to make sure that a variety of PHP extensions are also installed. The following code snippet creates an array of extensions and then loops through and installs them. You need to copy and paste the whole snippet into your terminal.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;extensions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;
curl
dom
gd
mbstring
mcrypt
imap
cli
mysql
opcache
pdo
soap
xml
intl
bcmath
process
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; extension in &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;extensions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[@]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    yum -y install php70w-&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;extension&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We now have PHP installed and can run the following command to confirm:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;php -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We should see something along the lines of:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;PHP 7.0.10 (cli) (built: Aug 20 2016 07:47:25) ( NTS )
Copyright (c) 1997-2016 The PHP Group
Zend Engine v3.0.0, Copyright (c) 1998-2016 Zend Technologies
    with Zend OPcache v7.0.10, Copyright (c) 1999-2016, by Zend Technologies
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The important thing to note here is that we have a version of PHP 7 higher than 7.0.5&lt;/p&gt;

&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;We now need to modify PHP configuration to make sure the correct settings are in place.&lt;/p&gt;

&lt;h4 id=&#34;timezone&#34;&gt;Timezone&lt;/h4&gt;

&lt;p&gt;This needs to be set. If you are in the UK you probably want this to be set to
Europe/London&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;date.timezone = Europe/London&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/php.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;memory-limit&#34;&gt;Memory Limit&lt;/h4&gt;

&lt;p&gt;For development, compilation and other complex tasks, Magento needs a hefty memory limit. 2 GB is recommended. Obviously this means that you should be running this on a machine that has plenty of memory. If you are using Virtualbox or other virtualisation, make sure you allocate enough memory to your machine to be able to support it. We also need to get PHP configured with this memory limit.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;memory_limit = 2G&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/php.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;errors&#34;&gt;Errors&lt;/h4&gt;

&lt;p&gt;For development, you need to get error reporting and displaying of errors set up. To do this you will need to open the file &lt;code&gt;/etc/php.ini&lt;/code&gt; and find the line &lt;code&gt;display_errors = Off&lt;/code&gt; and change the &lt;code&gt;Off&lt;/code&gt; to &lt;code&gt;On&lt;/code&gt;. There are other development related settings you might want to adjust as well.&lt;/p&gt;

&lt;h3 id=&#34;php-fpm-backend&#34;&gt;PHP-FPM backend&lt;/h3&gt;

&lt;p&gt;We need to have PHP-FPM listening for connections. There is a default &lt;code&gt;www&lt;/code&gt; pool however I generally prefer to create my own with just the config I need.&lt;/p&gt;

&lt;p&gt;To create a pool, simply make a new file in &lt;code&gt;/etc/php-fpm.d/&lt;/code&gt; called &lt;code&gt;php-fpm-backend.conf&lt;/code&gt;. In this file you can put your own choice of configuration options.&lt;/p&gt;

&lt;p&gt;You need to edit this file and enter in your chosen configuration. If you are not sure how to do this, you should probably install nano and use that as a command line text editor which is the easiest one to get started with.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;yum -y install nano
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /etc/php-fpm.d/
nano php-fpm-backend.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then for the file contents you can put something along the lines of:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;[php-fpm-backend]

listen = &amp;#39;/var/run/php-fcgi-php-fpm-backend.sock&amp;#39;
listen.allowed_clients = 127.0.0.1
listen.owner = nginx
listen.group = nginx
listen.mode = 0660

user = magento2
group = magento2

pm = ondemand
pm.max_children = 500
pm.start_servers = 50
pm.min_spare_servers = 50
pm.max_spare_servers = 50
pm.max_requests = 500

request_terminate_timeout = 600
;request_slowlog_timeout = 1
;slowlog = /var/log/php-fpm/php-fpm-backend-slow.log

catch_workers_output = yes

php_admin_value[error_log] = /var/log/php-fpm/php-fpm-backend-error.log
php_admin_flag[log_errors] = on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; The user/group has been set to the magento2 user we created earlier&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;d generally rename the default www pool so that it is disabled:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /etc/php-fpm.d
mv www.conf www.conf.disabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can&amp;rsquo;t start PHP-FPM until we have installed Nginx, lets do that now.&lt;/p&gt;

&lt;h2 id=&#34;nginx&#34;&gt;Nginx&lt;/h2&gt;

&lt;p&gt;For the web server, the thing that actually receives and serves HTTP requests, we are going to use Nginx&lt;/p&gt;

&lt;p&gt;To get the latest version, we will need to install the official Nginx repository&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;wget http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
yum -y install nginx-release-centos-7-0.el7.ngx.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then to install Nginx we simply&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;yum -y install nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;configuration-1&#34;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;Nginx requires the correct configuration to properly run a site and access PHP-FPM.&lt;/p&gt;

&lt;p&gt;Nginx has a nice file include syntax which allows you to keep your configuration organised and stick to the DRY principle, especially if you are configuring more than one site.&lt;/p&gt;

&lt;p&gt;I prefer to create a folder inside &lt;code&gt;/etc/nginx/&lt;/code&gt; called &lt;code&gt;includes&lt;/code&gt; which contains config files in the formant &lt;code&gt;filename.conf&lt;/code&gt;and then any configuration for specific vhosts can be included with the syntax &lt;code&gt;include includes/filename.conf;&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;magento-2&#34;&gt;Magento 2&lt;/h4&gt;

&lt;p&gt;Configuring Nginx can be a bit tricky if you are not used to it. Thankfully Magento have provided a pretty good &lt;a href=&#34;https://github.com/magento/magento2/blob/develop/nginx.conf.sample&#34; target=&#34;_blank&#34;&gt;baseline Nginx configuration template&lt;/a&gt; to use for your sites. This configuration file requires you to define a variable value and then the rest of the configuration is based upon that. You can save this file to your includes directory. Note there are things in there that you might want to adjust as you see fit, for example the memory limit, so open it and have a look.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /etc/nginx/includes

&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /etc/nginx/includes

wget https://raw.githubusercontent.com/magento/magento2/develop/nginx.conf.sample -O magento2.conf

vim magento2.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;php-fpm-backend-1&#34;&gt;PHP-FPM backend&lt;/h4&gt;

&lt;p&gt;We need to let Nginx know about our PHP-FPM service, and we can add this with an &lt;code&gt;upstream&lt;/code&gt; block.&lt;/p&gt;

&lt;p&gt;Edit &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; and somewhere before  &amp;lsquo;include /etc/nginx/conf.d/*.conf&amp;rsquo; we need to add the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;    upstream fastcgi_backend {
            server unix:/var/run/php-fcgi-php-fpm-backend.sock;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; the path to the socket is as you configured in your custom PHP-FPM pool above.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;vhost&#34;&gt;Vhost&lt;/h4&gt;

&lt;p&gt;Finally we need to set Nginx up to actually serve a site on a particular domain name. Thanks to the fact that the majority of required config is handled by the Magento include, our Vhost configuration can be quite sparse.&lt;/p&gt;

&lt;p&gt;The vhost configuration files live in &lt;code&gt;/etc/nginx/conf.d&lt;/code&gt; and by conventtion, the domain name should be reflected in the filename. For our purposes lets say the domain name is &lt;code&gt;www.magento2.local&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /etc/nginx/conf.d

cat &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt; &amp;#39;EOF&amp;#39; &amp;gt;  www.magento2.local.conf&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;server {&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;    listen 80;&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;    server_name www.magento2.local;&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;    set $MAGE_ROOT /var/www/vhosts/www.magento2.local;&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;    include includes/magento2.conf;&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;    error_log /var/log/nginx/www.magento2.local.error.log info;&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;    access_log /var/log/nginx/www.magento2.local.access.log main;&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can disable the default Nginx site by doing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;mv default.conf default.conf.disabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then you can make sure your Nginx configuration is correct by doing:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;nginx -t
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;h3 id=&#34;gotcha-nginx-pid-file-inconsistency&#34;&gt;&lt;em&gt;GOTCHA: Nginx PID file inconsistency&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Unfortunatley the official Nginx repository installation has a mismatch between the &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt; configuration and the systemd configuration in &lt;code&gt;/usr/lib/systemd/system/nginx.service&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;grep &lt;span class=&#34;s1&#34;&gt;&amp;#39;nginx.pid&amp;#39;&lt;/span&gt; /etc/nginx/nginx.conf
&lt;span class=&#34;c1&#34;&gt;# pid        /var/run/nginx.pid;&lt;/span&gt;

grep &lt;span class=&#34;s1&#34;&gt;&amp;#39;nginx.pid&amp;#39;&lt;/span&gt; /usr/lib/systemd/system/nginx.service
&lt;span class=&#34;c1&#34;&gt;# PIDFile=/run/nginx.pid&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We need the path the PID file to be the same in both files otherwise it won&amp;rsquo;t work. So to do this lets edit &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;, find the line &lt;code&gt;pid        /var/run/nginx.pid;&lt;/code&gt; and remove &lt;code&gt;/var&lt;/code&gt; so it becomes: &lt;code&gt;pid               /run/nginx.pid;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can do this using your choice of editor, eg nano&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nano /etc/nginx/nginx.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;start-the-nginx-and-php-fpm-services&#34;&gt;Start the Nginx and PHP-FPM Services&lt;/h3&gt;

&lt;p&gt;Start Nginx&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; nginx
systemctl start nginx
systemctl status nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then finally we need to start PHP-FPM&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;systemctl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; php-fpm
systemctl start php-fpm
systemctl status php-fpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;create-vhost-folder-and-test&#34;&gt;Create Vhost Folder and Test&lt;/h3&gt;

&lt;p&gt;We need to make sure everything so far is working, so lets just do a phpinfo file.&lt;/p&gt;

&lt;p&gt;Lets make the document root and create an index file that calls &lt;code&gt;phpinfo();&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /var/www/vhosts/www.magento2.local/pub
echo &#39;&amp;lt;?php phpinfo();&#39; &amp;gt; /var/www/vhosts/www.magento2.local/pub/index.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now on your &lt;strong&gt;local machine&lt;/strong&gt;, you need to create a HOSTS file entry to point to this installation. That is platform dependent but on linux you might do something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo echo &amp;quot;192.168.1.123 www.magento2.local&amp;quot; &amp;gt;&amp;gt; /etc/hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where &lt;code&gt;192.168.1.123&lt;/code&gt; is whatever IP address your CentOS machine has. To see the IP address of your CentOS machine you can run &lt;code&gt;ip addr&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You should now be able to go to &lt;a href=&#34;http://www.magento2.local/&#34; target=&#34;_blank&#34;&gt;http://www.magento2.local/&lt;/a&gt; and see the PHP info page.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;preparing_install&#34;&gt;&lt;/a&gt;&lt;a href=&#34;#contents&#34;&gt;back to top&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;preparing-to-install-magento-2&#34;&gt;Preparing to Install Magento 2&lt;/h1&gt;

&lt;p&gt;This section is all about getting ready to actually install your Magento 2 site. There are a few options for installing Magento 2 however I have taken the liberty of choosing the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/install-gde/prereq/integrator_install.html&#34; target=&#34;_blank&#34;&gt;Integrator option&lt;/a&gt; using composer as that is the one that is most relevant to us.&lt;/p&gt;

&lt;h2 id=&#34;composer&#34;&gt;Composer&lt;/h2&gt;

&lt;p&gt;We are now nearly ready to start installing Magento 2 itself, there is one last tool we need to install: &lt;a href=&#34;https://getcomposer.org/&#34; target=&#34;_blank&#34;&gt;composer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Composer has basically revolutionised PHP development, bringing us a solid and reliable dependency management system. It&amp;rsquo;s great that Magento haved decided to use it with Magento 2.&lt;/p&gt;

&lt;p&gt;In the spirit of getting this done quickly, here are the commands to install Composer, just run them:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;expectedSignature&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;wget https://composer.github.io/installer.sig -O - -q&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
php -r &lt;span class=&#34;s2&#34;&gt;&amp;quot;copy(&amp;#39;https://getcomposer.org/installer&amp;#39;, &amp;#39;composer-setup.php&amp;#39;);&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;actualSignature&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;php -r &lt;span class=&#34;s2&#34;&gt;&amp;quot;echo hash_file(&amp;#39;SHA384&amp;#39;, &amp;#39;composer-setup.php&amp;#39;);&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$expectedSignature&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$actualSignature&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    php composer-setup.php
    rm composer-setup.php
    mv composer.phar /bin/composer
    composer --version
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
    &amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;ERROR: Invalid installer signature&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; 1
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;marketplace-authentication&#34;&gt;Marketplace Authentication&lt;/h2&gt;

&lt;p&gt;Before you can download Magento, you need to get access keys. There are full instructions &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/install-gde/prereq/connect-auth.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ultimately, you need to log in and get to &lt;a href=&#34;https://marketplace.magento.com/customer/accessKeys/list/&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt; where you will see a Public Key and a Private Key.&lt;/p&gt;

&lt;p&gt;You have one set of keys by default. However you can generate as many as you need and I suggest you use this feature to give you a new set of keys for each project. This way, if ever a set of keys is compromised then you can simply remove the keys from your account.&lt;/p&gt;

&lt;p&gt;For our purposes, lets hit the big orange Create a New Access Key button and for the name put - www.magento2.local.&lt;/p&gt;

&lt;p&gt;This will then generate new keys for you. Take a note of these as we will need them later.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Strongly advise you use separate access keys for each project. Why not just use the intended primary domain of the project as the key name.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;magento-file-owner&#34;&gt;Magento File Owner&lt;/h2&gt;

&lt;p&gt;So far, the guide has assumed that you are running commands as the root user of your machine. However, any Linux or Unix user will tell you that doing everything as root is definitely not a good idea.&lt;/p&gt;

&lt;p&gt;We need to change the owner of the vhost directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/www/vhosts/www.magento2.local
chown -R magento2:magento2 .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then we need to become the magento2 user:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;su magento2
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;_&lt;strong&gt;Note:&lt;/strong&gt; Read these &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/config-guide/prod/prod_file-sys-perms.html&#34; target=&#34;_blank&#34;&gt;official docs&lt;/a&gt; which describe how to properly lock down permissions in production_&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From here on we are now running as the magento2 Linux user and can move onto installing Magento 2.&lt;/p&gt;

&lt;p&gt;First make sure you are the correct user:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;whoami
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should be your magento2 user.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember, from here you should not be running any commands as root, you should be the magento2 user&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;using-composer-create-project&#34;&gt;Using Composer Create Project&lt;/h2&gt;

&lt;p&gt;Get your access keys on hand (otherwise known as username and password).&lt;/p&gt;

&lt;p&gt;Firstly we need to clear out our pub directory and phpinfo file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/www/vhosts/www.magento2.local
rm -rf pub
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we are ready to use the composer create project to set up Magento 2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will be asked for a username and password.&lt;/p&gt;

&lt;p&gt;The username is your &lt;strong&gt;Public Key&lt;/strong&gt; and the password is your &lt;strong&gt;Private Key&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Reminder, you can get these from &lt;a href=&#34;https://marketplace.magento.com/customer/accessKeys/list/&#34; target=&#34;_blank&#34;&gt;https://marketplace.magento.com/customer/accessKeys/list/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you run the command, you will have the option to store these credentials which I&amp;rsquo;d suggest is probably a good idea.&lt;/p&gt;

&lt;p&gt;You should then see a load of composer output along the lines of:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Installing magento/project-community-edition (2.1.1)
  - Installing magento/project-community-edition (2.1.1)
    Downloading: 100%         

Created project in .
Loading composer repositories with package information
Updating dependencies (including require-dev)
  - Installing magento/magento-composer-installer (0.1.11)
    Downloading: 100%         

  - Installing symfony/process (v2.8.10)
    Downloading: 100%         

  - Installing magento/framework (100.1.1)
    Downloading: 100%         

  - Installing magento/language-zh_hans_cn (100.1.0)
    Downloading: 100%         

# ...(continues for quite some time)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And once that has completed you will see lots of suggestions of other things you might want to install with Composer, eg&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;magento/framework suggests installing ext-imagick (Use Image Magick &amp;gt;=3.0.0 as an optional alternative image processing library)
magento/module-theme suggests installing magento/module-theme-sample-data (Sample Data version:100.1.*)
magento/module-catalog suggests installing magento/module-catalog-sample-data (Sample Data version:100.1.*)
# ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can ignore this for now&lt;/p&gt;

&lt;h2 id=&#34;magento-2-database&#34;&gt;Magento 2 Database&lt;/h2&gt;

&lt;p&gt;We need to create a MySQL database for Magento2 to use. Assuming you created a .my.cnf file in the home directory of your magento2 user, you can just run the following on the terminal:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;mysql -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;CREATE DATABASE magento2_database CHARACTER SET utf8 COLLATE utf8_general_ci;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we need to create a user for this database, feel free to set usernames and passwords as you see fit, and make sure you take note as you will need them later.&lt;/p&gt;

&lt;p&gt;First set some variable values:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;dbUser&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;magento2_dbuser
 &lt;span class=&#34;nv&#34;&gt;dbPass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;YOUR_DB_USER_PASSWORD_HERE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then use them to create the user&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt; mysql -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;CREATE USER &amp;#39;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dbUser&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dbPass&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39; &amp;quot;&lt;/span&gt;
 mysql -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;     GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EVENT, TRIGGER &lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;     ON magento2_database.* &lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;     TO &amp;#39;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dbUser&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dbPass&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;     flush privileges;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt; &amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then double check its worked&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt; mysql -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;SHOW GRANTS FOR &amp;#39;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dbUser&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;@&amp;#39;localhost&amp;#39;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you want to change the database name to something more meaningful then of course you are free to replace &lt;code&gt;magento2_database&lt;/code&gt; with whatever you would like, same goes for the user &lt;code&gt;magento2_dbuser&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;permissions&#34;&gt;Permissions&lt;/h2&gt;

&lt;p&gt;Magento 2 developer documentation goes into a nice clear level of detail about how you might want ot set up permissions. You can read the relevant section &lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/install-gde/prereq/file-system-perms.html#perms-private&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve simplified our permissions by configuring PHP-FPM to run this pool as our magento2 user so the instructions aren&amp;rsquo;t completely relevant to our configuration, but are worth being aware of.&lt;/p&gt;

&lt;p&gt;One command we do need to run though is this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod 700 bin/magento
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which makes the CLI tool executable.&lt;/p&gt;

&lt;p&gt;You are now ready to actually install Magento2&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;installing_magento2&#34;&gt;&lt;/a&gt;&lt;a href=&#34;#contents&#34;&gt;back to top&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;installing-and-configuring-magento-2&#34;&gt;Installing and Configuring Magento 2&lt;/h1&gt;

&lt;p&gt;This section takes us through the installation process and basic post install configuration&lt;/p&gt;

&lt;h2 id=&#34;command-line-install&#34;&gt;Command Line Install&lt;/h2&gt;

&lt;p&gt;We are going to use the command line installer which is nicely documented on the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/install-gde/install/cli/install-cli.html&#34; target=&#34;_blank&#34;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The command line tool in Magento is likely to be something we use a lot so lets add it to our PATH.&lt;/p&gt;

&lt;p&gt;Then update your &lt;code&gt;~/.bashrc&lt;/code&gt; file to extend your PATH:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;PATH=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;:/var/www/vhosts/www.magento2.local/bin&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you need to move into the project root directory&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/www/vhosts/www.magento2.local
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We are going to prepare an installation script and then run it, so run the following command to create the script&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;lt;&amp;lt; &#39;EOF&#39; &amp;gt; bin/installScript.bash
#!/usr/bin/env bash
magento setup:install \
    --admin-firstname &amp;quot;ADMIN_FIRSTNAME_HERE&amp;quot; \
    --admin-lastname &amp;quot;ADMIN_LASTNAME_HERE&amp;quot; \
    --admin-email &amp;quot;ADMIN_EMAIL_HERE&amp;quot; \
    --admin-user &amp;quot;ADMIN_USERNAME_HERE&amp;quot; \
    --admin-password &amp;quot;ADMIN_PASSWORD_HERE&amp;quot; \
    --db-host &amp;quot;localhost&amp;quot; \
    --db-name &amp;quot;magento2_database&amp;quot; \
    --db-user &amp;quot;magento2_dbuser&amp;quot; \
    --db-password &amp;quot;DB_PASSWORD_HERE&amp;quot; \
    --db-prefix &amp;quot;&amp;quot; \
    --base-url &amp;quot;http://www.magento2.local/&amp;quot; \
    --use-secure &amp;quot;0&amp;quot; \
    --language &amp;quot;en_GB&amp;quot; \
    --currency &amp;quot;GBP&amp;quot; \
    --timezone &amp;quot;Europe/London&amp;quot; \
    --use-rewrites 1 \
    --backend-frontname &amp;quot;admin&amp;quot;;
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then edit your script and replace the UPPER_CASE variables. If you previously installed nano then you can use that.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; Your password must be at least 7 characters and your password must include both numeric and alphabetic characters.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;nano bin/installScript.bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you are done, you can make it executable&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod 700 bin/installScript.bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, you are ready to run the install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./bin/installScript.bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once that has completed you should be able to see the front end on&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.magento2.local/&#34; target=&#34;_blank&#34;&gt;http://www.magento2.local/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and the admin on&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.magento2.local/admin&#34; target=&#34;_blank&#34;&gt;http://www.magento2.local/admin&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;reinstallation-of-magento-2&#34;&gt;Reinstallation of Magento 2&lt;/h2&gt;

&lt;p&gt;Should there be any problems and you want to reinstall, you&amp;rsquo;ve now created a nice easy to use script to repeat the process without having to remember lots of parameters.&lt;/p&gt;

&lt;p&gt;To reinstall, simply:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -e &amp;quot;DROP DATABASE IF EXISTS magento2_database;&amp;quot;
mysql -e &amp;quot;CREATE DATABASE magento2_database CHARACTER SET utf8 COLLATE utf8_general_ci;&amp;quot;
./bin/installScript.bash
chmod 700 bin/magento
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; This will totally wipe out the database (warning, that&amp;rsquo;s destructive). You might want to backup the database first just in case.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;post-install-tasks&#34;&gt;Post Install Tasks&lt;/h2&gt;

&lt;p&gt;There are some other tasks you probably want to do once you have the installation working:&lt;/p&gt;

&lt;h3 id=&#34;setup-cron-jobs&#34;&gt;Setup Cron Jobs&lt;/h3&gt;

&lt;p&gt;Cron jobs run on a schedule in the background and handle things like updating indexes and other background tasks. You can read more about the cron tasks on the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/config-guide/cli/config-cli-subcommands-cron.html#config-cli-cron-bkg&#34; target=&#34;_blank&#34;&gt;official docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We need to set up a crontab for our magento2 user with the correct entries.&lt;/p&gt;

&lt;p&gt;My preferred way to do this is to have a a &lt;code&gt;_crontab_temp&lt;/code&gt; file which is tracked in the project and can then be used to easily track and possibly revert any changes to cron configuration.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/www/vhosts/www.magento2.local
cat &amp;lt;&amp;lt; &#39;EOF&#39; &amp;gt; _crontab_temp
* * * * * /usr/bin/php /var/www/vhosts/www.magento2.local/bin/magento cron:run | grep -v &amp;quot;Ran jobs by schedule&amp;quot; &amp;gt;&amp;gt; /var/www/magento2/var/log/magento.cron.log
* * * * * /usr/bin/php /var/www/vhosts/www.magento2.local/update/cron.php &amp;gt;&amp;gt; /var/www/magento2/var/log/update.cron.log
* * * * * /usr/bin/php /var/www/vhosts/www.magento2.local/bin/magento setup:cron:run &amp;gt;&amp;gt; /var/www/magento2/var/log/setup.cron.log
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then to actually add this to the crontab, simply&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;crontab _crontab_temp

crontab -l
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;reindex&#34;&gt;Reindex&lt;/h3&gt;

&lt;p&gt;As described in the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/config-guide/cli/config-cli-subcommands-index.html&#34; target=&#34;_blank&#34;&gt;official docs&lt;/a&gt;, you can reindex on the command line easily using the magento command.&lt;/p&gt;

&lt;p&gt;Assuming you have already added the bin directory to your PATH, you can just run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;magento indexer:reindex
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And you should see output along the lines of :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Design Config Grid index has been rebuilt successfully in 00:00:00
Customer Grid index has been rebuilt successfully in 00:00:00
Category Products index has been rebuilt successfully in 00:00:00
Product Categories index has been rebuilt successfully in 00:00:00
Product Price index has been rebuilt successfully in 00:00:00
Product EAV index has been rebuilt successfully in 00:00:00
Stock index has been rebuilt successfully in 00:00:00
Catalog Rule Product index has been rebuilt successfully in 00:00:00
Catalog Product Rule index has been rebuilt successfully in 00:00:00
Catalog Search index has been rebuilt successfully in 00:00:00
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;change-modes&#34;&gt;Change Modes&lt;/h3&gt;

&lt;p&gt;Magento2 can run in one of three modes, production, default and developer. You want to run in production for live sites. For development locally, you probably want to be in developer mode.&lt;/p&gt;

&lt;p&gt;You can see your current mode by running&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;magento deploy:mode:show
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default, Magento 2 is in the aptly named mode &amp;ldquo;default&amp;rdquo;. This is a compromise and should not be used, you really want to be in either production or developer modes.&lt;/p&gt;

&lt;p&gt;You can change to developer mode by running these commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/www/vhosts/www.magento2.local
rm -rf /var/di/*
rm -rf /var/generation/* 
magento deploy:mode:set developer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Read more about modes &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/config-guide/cli/config-cli-subcommands-mode.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; and also &lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/config-guide/bootstrap/magento-modes.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;compile&#34;&gt;Compile&lt;/h3&gt;

&lt;p&gt;Magento2 makes heavy use of compiled code PHP code. This takes your source PHP and creates &amp;ldquo;compiled&amp;rdquo; PHP code which is actually used in production.&lt;/p&gt;

&lt;p&gt;You can read about the compilation process on the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/config-guide/cli/config-cli-subcommands-compiler.html&#34; target=&#34;_blank&#34;&gt;official docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a nutshell though, you simply need to run this command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;magento setup:di:compile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once this has completed you should see output along the lines of:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Compilation was started.
%message% 0/7 [&amp;gt;---------------------------]   0% 1 sec 40.0 MiB%message% 0/7 [&amp;gt;---------------------------]   0% 1 sec 40.0 MiBProxies code generation... 0/7 [&amp;gt;---------------------------]   0% 1 sec 40.0 MiB
Proxies code generation... 1/7 [====&amp;gt;-----------------------]  14% 1 sec 42.0 MiB
Repositories code generation... 1/7 [====&amp;gt;-----------------------]  14% 1 sec 42.0 MiB
Repositories code generation... 2/7 [========&amp;gt;-------------------]  28% 13 secs 132.0 MiB
Service data attributes generation... 2/7 [========&amp;gt;-------------------]  28% 13 secs 132.0 MiB
Service data attributes generation... 3/7 [============&amp;gt;---------------]  42% 13 secs 134.0 MiB
Application code generator... 3/7 [============&amp;gt;---------------]  42% 13 secs 134.0 MiB
Application code generator... 4/7 [================&amp;gt;-----------]  57% 29 secs 150.0 MiB
Interceptors generation... 4/7 [================&amp;gt;-----------]  57% 29 secs 150.0 MiB
Interceptors generation... 5/7 [====================&amp;gt;-------]  71% 45 secs 168.0 MiB
Area configuration aggregation... 5/7 [====================&amp;gt;-------]  71% 45 secs 168.0 MiB
Area configuration aggregation... 6/7 [========================&amp;gt;---]  85% 2 mins 238.0 MiB
Interception cache generation... 6/7 [========================&amp;gt;---]  85% 2 mins 238.0 MiB
Interception cache generation... 7/7 [============================] 100% 2 mins 238.0 MiB
Generated code and dependency injection configuration successfully.
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;further&#34;&gt;&lt;/a&gt;&lt;a href=&#34;#contents&#34;&gt;back to top&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;further-notes-and-tips&#34;&gt;Further Notes and Tips&lt;/h1&gt;

&lt;h2 id=&#34;documentation-versions&#34;&gt;Documentation Versions&lt;/h2&gt;

&lt;p&gt;If you search Google, you will probably find the docs for version 2.0 in the results. You can see this in the URL &lt;code&gt;http://devdocs.magento.com/guides/v2.0/....&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Actually, you need to be looking at the documentation for the version you are working with, currently 2.1. If you do find a page in the results, you can generally just change the version number in the URL to make sure you are looking at the right version, eg &lt;code&gt;http://devdocs.magento.com/guides/v2.1/...&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Often, there will be no difference, but occasionally there are signficant differences and you can end up going down the rabbit hole if you are reading the wrong docs.&lt;/p&gt;

&lt;p&gt;On the flip side, you might find that the documentation for your version is incomplete and so you need to use the previous documentation. That&amp;rsquo;s fine, but I&amp;rsquo;d strongly suggest you check for up to date docs first and then use legacy docs as required.&lt;/p&gt;

&lt;h2 id=&#34;installing-the-sample-data&#34;&gt;Installing the Sample Data&lt;/h2&gt;

&lt;p&gt;Magento 1 had an option to install a set of sample data which was really handy. It gave you a nice representation of the different kinds of products, categories and configurations you might expect to see on a real store. The other advantage was that everyone could base their customisations on the default theme with this sample data and if it worked with this then there was a good chance it would work in general.&lt;/p&gt;

&lt;p&gt;That concept has been carried over into Magento 2 and so, depending on the type of project you are working on, you might want to install the sample data.&lt;/p&gt;

&lt;p&gt;You can read the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/install-gde/install/sample-data.html&#34; target=&#34;_blank&#34;&gt;official docs&lt;/a&gt; (incomplete at the time of writing). We will be using the composer method for which there is a magento CLI tool command.&lt;/p&gt;

&lt;p&gt;To fully install the sample data, run the following commands&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;magento sampledata:deploy
magento setup:upgrade
magento setup:di:compile
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; You must be in developer mode to install the sample data&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As the docs say though, you should not build a production site from a database that has had the sample data. Your main use case for using the sample data is for generic theme/module development that you expect to be used on multiple client sites.&lt;/p&gt;

&lt;h2 id=&#34;flushing-caches-and-indexes&#34;&gt;Flushing Caches and Indexes&lt;/h2&gt;

&lt;p&gt;When developing, it&amp;rsquo;s likely that you will want to flush caches and reindex on a fairly regular basis. Thankfully the new CLI tool makes this simple&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;magento cache:clean
magento indexer:reindex
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;

&lt;p&gt;As Magento 2 is using composer, you can update all of the library and framework code using the standard composer syntax, simply:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /var/www/vhosts/www.magento2.local
composer update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will check all of the packages in the project for updated versions and will then update them. Finally it will update the &lt;code&gt;composer.lock&lt;/code&gt; file with these updated versions.&lt;/p&gt;

&lt;h2 id=&#34;removing-index-php-from-front-end-urls&#34;&gt;Removing index.php From Front End URls&lt;/h2&gt;

&lt;p&gt;We don&amp;rsquo;t want index.php in our front end URLs and as we are using Nginx there is no need to.&lt;/p&gt;

&lt;p&gt;To remove them we need to log into the Magento admin and then go to&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STORES -&amp;gt; configuration -&amp;gt; GENERAL -&amp;gt; Web -&amp;gt; Search Engine Optimisation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In here there is a drop down option for Use Web Server Rewrites. Set this to Yes, then flush all caches and the index.php should be gone from URLs.&lt;/p&gt;

&lt;h2 id=&#34;varnish-cache&#34;&gt;Varnish Cache&lt;/h2&gt;

&lt;p&gt;Varnish is a full page caching system that sits in front of your normal web server as a reverse proxy. This is something that you can do with Nginx on it&amp;rsquo;s own. What Varnish does which is also allows elements of the page to still be dynamic, pulling in just those elements using a technique called Edge Side Includes or ESI.&lt;/p&gt;

&lt;p&gt;Magento 1 does not officially support Varnish but most production sites these days will be using it thanks to third party extentions that provide Varnish support.&lt;/p&gt;

&lt;p&gt;For Magento 2, Varnish support has been baked in and is something that you almost certainly want to enable to get the best performance.&lt;/p&gt;

&lt;p&gt;You can read the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/config-guide/varnish/config-varnish.html&#34; target=&#34;_blank&#34;&gt;offical documentation&lt;/a&gt; about Varnish to understand more about it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The following commands should be run as the root user&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For us to install Varnish, we firstly need to make sure that we are going to get a compatible version.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; for Magento 2, you really want to be running Varnish 4&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To find out exactly what version you would install you can run this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum info varnish
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which should give us something along the lines of:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
 * base: centos.mirroring.pulsant.co.uk
 * epel: fr.mirror.babylon.network
 * extras: mirror.econdc.com
 * updates: mirror.ukhost4u.com
 * webtatic: uk.repo.webtatic.com
Available Packages
Name        : varnish
Arch        : x86_64
Version     : 4.0.3
Release     : 3.el7
Size        : 421 k
Repo        : epel/x86_64
Summary     : High-performance HTTP accelerator
URL         : http://www.varnish-cache.org/
Licence     : BSD
Description : This is Varnish Cache, a high-performance HTTP accelerator.
            : Documentation wiki and additional information about Varnish is
            : available on the following web site: http://www.varnish-cache.org/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note the bit we care about - &lt;code&gt;Version     : 4.0.3&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;install-varnish&#34;&gt;Install Varnish&lt;/h3&gt;

&lt;p&gt;After we have confirmed that we will definitely get Varnish 4 from yum, we can do the install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum -y install varnish
varnishd -V
systemctl enable varnish
systemctl start varnish
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configure-varnish-and-nginx&#34;&gt;Configure Varnish and Nginx&lt;/h3&gt;

&lt;p&gt;One thing that needs to be understood is that Varnish is a web server and listens to HTTP connections in exactly the same was as Nginx. We need to decide which of the two services is going to be the one that external browsers are actually hitting.&lt;/p&gt;

&lt;p&gt;Another factor in here is that Varnish does not support SSL, so if you are planning to use HTTPS (and you really should) then you will need Nginx to be the server that clients connect to on port 80 (for redirecting to SSL) and port 443 (for the actual SSL web traffic).&lt;/p&gt;

&lt;p&gt;Here is how we are going to lay this out:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Port&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Public&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Server&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Connects To&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;80 (http)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;yes&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Nginx&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Varnish (6081)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;443 (https)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;yes&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Nginx&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Varnish (6081)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;6081&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Varnish&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Nginx (8080)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;8080&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Nginx&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;PHP-FPM (socket)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As this article has more of a development focus, we will not worry about the https 443 for now.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; this differs from the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/config-guide/varnish/config-varnish-configure.html&#34; target=&#34;_blank&#34;&gt;official documentation&lt;/a&gt; which recommends that you have Varnish listening on port 80.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The first thing we need to do is get our main Magento server listening on port 8080. To do this we need to edit the file &lt;code&gt;/etc/nginx/conf.d/www.magneto2.local.conf&lt;/code&gt; and change &lt;code&gt;listen 80;&lt;/code&gt; to &lt;code&gt;listen 127.0.0.1:8080;&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nano /etc/nginx/conf.d/www.magento2.local.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We also need to add a new server block in this file which will actually listen on port 80 (and optionally also 443) and will then pass the request to Varnish.&lt;/p&gt;

&lt;p&gt;Run the following command to add a new server block which is listening on port 80 and 443 and proxy passing to Varnish on 6081&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;lt;&amp;lt; &#39;EOF&#39; &amp;gt;&amp;gt; /etc/nginx/conf.d/www.magento2.local.conf
server{
    listen 80;
    #uncomment the below 4 lines and update the paths to your SSL keys to enable SSL
    #listen 443 ssl http2;
    #ssl_certificate      /etc/nginx/ssl/domain.com.crt;
    #ssl_certificate_key  /etc/nginx/ssl/domain.com.key;
    #ssl_trusted_certificate /etc/nginx/ssl/domain.com.crt;
    server_name www.magento2.local;
    location / {
        proxy_pass            http://127.0.0.1:6081;
        proxy_read_timeout    90;
        proxy_connect_timeout 90;
        proxy_redirect        off;
        proxy_max_temp_file_size 0;
        proxy_buffering off;
        proxy_request_buffering off;
        #Enable Keepalives
        proxy_http_version 1.1;
        proxy_set_header Connection &amp;quot;&amp;quot;;
        
        proxy_set_header      X-Real-IP $remote_addr;
        proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header      X-Forwarded-Proto http;
        proxy_set_header      X-Forwarded-Port 80;
        proxy_set_header      Host $host;
    }
    error_log /var/log/nginx/public.www.magento2.local.error.log info;
    access_log /var/log/nginx/public.www.magento2.local.access.log main;
}
EOF

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once this is done we need to test and then reload nginx config&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nginx -t

systemctl reload nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And after this, you should be able to access the site in your browser. You might notice it is a lot faster.&lt;/p&gt;

&lt;h3 id=&#34;configure-magento-to-use-varnish&#34;&gt;Configure Magento to Use Varnish&lt;/h3&gt;

&lt;p&gt;You can read the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/config-guide/varnish/config-varnish-magento.html&#34; target=&#34;_blank&#34;&gt;official documentation&lt;/a&gt; which covers what needs to be done.&lt;/p&gt;

&lt;p&gt;Some of the config might not be obvious though, here is what I would suggest for starters:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Option&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Caching Application&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Varnish&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;TTL for public content&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Use system value&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Access list&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;localhost&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Backend host&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;localhost&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Backend port&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8080&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Once you have filled this out, you will need to hit the orange Save Config button in the top right.&lt;/p&gt;

&lt;p&gt;Once the config is saved, you can export the VCL file. You need to hit the button Export VCL for Varnish 4. This will download a file to your &lt;strong&gt;local machine&lt;/strong&gt; which you should open in a text editor.&lt;/p&gt;

&lt;p&gt;We need to take the contents of this file and get them onto a file on your server. For now lets just copy and paste the contents.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Local Machine:&lt;/strong&gt; open the downloaded vcl file, select all and copy the contents&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Server:&lt;/strong&gt; run the following commands and then paste the contents, save and close&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /etc/varnish
mv default.vcl default.vcl.backup
nano default.vcl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Paste in the contents and save the file, then we need to restart Varnish&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl restart varnish
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For some reason I found that Varnish cache was not clearing unless I also ran the following:&lt;/p&gt;

&lt;p&gt;Run the following as the &lt;strong&gt;magento2&lt;/strong&gt; user:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;magento setup:config:set --http-cache-hosts=127.0.0.1:6081
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This was mentioned on &lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/config-guide/varnish/use-varnish-cache.html#use-varnish-magento-purge&#34; target=&#34;_blank&#34;&gt;this page of the official docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After running this command, doing &lt;code&gt;magento cache:clean&lt;/code&gt; will flush the Varnish cache&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Allow Customers to Switch Between Mobile and Desktop Themes</title>
      <link>https://edmondscommerce.github.io/magento-allow-customers-to-switch-between-mobile-and-desktop-themes/</link>
      <pubDate>Tue, 23 Aug 2016 10:12:48 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-allow-customers-to-switch-between-mobile-and-desktop-themes/</guid>
      <description>

&lt;p&gt;In this post I&amp;rsquo;ll cover how to create a basic theme switcher for switching between mobile and
desktop themes in Magento.&lt;/p&gt;

&lt;p&gt;The basic steps for the theme switcher are as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Customer clicks &amp;lsquo;switch to desktop site&amp;rsquo; link&lt;/li&gt;
&lt;li&gt;Cookie is set saying the user has requested the desktop theme&lt;/li&gt;
&lt;li&gt;The cookie is detected and the correct user agent is set in index.php.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By using a cookie we can make the selection persistent so customers don&amp;rsquo;t need to click this link
each time they visit the site.&lt;/p&gt;

&lt;h2 id=&#34;switcher-block-and-template&#34;&gt;Switcher Block and Template&lt;/h2&gt;

&lt;p&gt;First we want to create our switcher block and template.&lt;/p&gt;

&lt;p&gt;NameSpace/ModuleName/Block/Switcher.php&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;class NameSpace_ModuleName_Block_Switcher&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    extends Mage_Core_Block_Template&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public function setSwitchToTheme($switchToTheme)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;setData(&amp;#39;switch_to_theme&amp;#39;, $switchToTheme);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    public function getSwitchToTheme()&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        return $this-&amp;gt;getData(&amp;#39;switch_to_theme&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;app/design/frontend/base/default/template/your/folder/structure/switcher.phtml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;lt;a id=&amp;quot;theme_switcher&amp;quot; href=&amp;quot;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Mage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;helper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;core/url&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getCurrentUrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    switch to &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSwitchToTheme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt; site&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$viewDesktopTheme&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getSwitchToTheme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;desktop&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$maxAge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;157680000&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 157680000 secs = 5 years (but set this to whatever you want)&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $(&amp;#39;theme_switcher&amp;#39;).observe(&amp;#39;click&amp;#39;, function (e) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        document.cookie = &amp;#39;view_desktop_theme=&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$viewDesktopTheme&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;; max-age=&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$maxAge&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    });&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By using the setter provided by our block within our layout.xml (we&amp;rsquo;ll see this later) we can use the
same block and template for both our mobile and desktop themes.&lt;/p&gt;

&lt;h2 id=&#34;add-block-to-page&#34;&gt;Add Block to Page&lt;/h2&gt;

&lt;p&gt;Next we want to add our switcher block to both our mobile and desktop themes.&lt;/p&gt;

&lt;p&gt;app/design/frontend/your/desktop/theme/layout/mobile_to_desktop_switcher.xml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;layout&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;0.1.0&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;default&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;reference&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;where_you_want_the_switcher_to_go&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;block&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;mobile_to_desktop_switcher&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;namespace_modulename/switcher&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;template=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;your/folder/structure/switcher.phtml&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;setSwitchToTheme&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;switch_to_theme&amp;gt;&lt;/span&gt;mobile&lt;span class=&#34;nt&#34;&gt;&amp;lt;/switch_to_theme&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/action&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/block&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/default&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/layout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;app/design/frontend/your/mobile/theme/layout/mobile_to_desktop_switcher.xml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;layout&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;version=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;0.1.0&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;default&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;reference&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;where_you_want_the_switcher_to_go&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;block&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;mobile_to_desktop_switcher&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;namespace_modulename/switcher&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;template=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;your/folder/structure/switcher.phtml&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;action&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;setSwitchToTheme&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;switch_to_theme&amp;gt;&lt;/span&gt;desktop&lt;span class=&#34;nt&#34;&gt;&amp;lt;/switch_to_theme&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/action&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/block&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/default&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/layout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is where we make use of our blocks setter. By placing a layout.xml in each theme we can tell the
block which theme we should switch to. In the desktop theme we pass &amp;lsquo;mobile&amp;rsquo;, in the mobile theme
we pass &amp;lsquo;desktop&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;You can then add the switcher to your theme using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$this&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getBlockHtml&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;mobile_to_desktop_switcher&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;add-switch-to-index-php&#34;&gt;Add Switch to index.php&lt;/h2&gt;

&lt;p&gt;Finally we need to add code to index.php which checks for our cookie and sets the current user agent
based on this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;/* Show theme based on view_desktop_theme cookie */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;if (isset($_COOKIE[&amp;#39;view_desktop_theme&amp;#39;])) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if ($_COOKIE[&amp;#39;view_desktop_theme&amp;#39;] === &amp;#39;true&amp;#39;) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $_SERVER[&amp;#39;HTTP_USER_AGENT&amp;#39;]&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            = &amp;#39;Mozilla/5.0 (X11; Fedora; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    else if ($_COOKIE[&amp;#39;view_desktop_theme&amp;#39;] === &amp;#39;false&amp;#39;) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $_SERVER[&amp;#39;HTTP_USER_AGENT&amp;#39;]&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            = &amp;#39;Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that&amp;rsquo;s it, now when your customers click the link they should be toggled between the mobile and
desktop themes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CVE-2011-2461 - How to Patch Magento Adobe Flex Vulnerability</title>
      <link>https://edmondscommerce.github.io/cve-2011-2461---how-to-patch-magento-adobe-flex-vulnerability/</link>
      <pubDate>Tue, 26 Jul 2016 13:25:31 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/cve-2011-2461---how-to-patch-magento-adobe-flex-vulnerability/</guid>
      <description>

&lt;h1 id=&#34;cve-2011-2461&#34;&gt;CVE-2011-2461&lt;/h1&gt;

&lt;p&gt;For magento versions older than 1.9.1.0 you can patch this vulnerability by simply installing the patched .swf
files hosted on our GitHub repo
&lt;a href=&#34;https://github.com/edmondscommerce/CVE-2011-2461_Magento_Patch&#34; target=&#34;_blank&#34;&gt;CVE-2011-2461_Magento_Patch&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;am-i-vulnerable&#34;&gt;Am I Vulnerable?&lt;/h1&gt;

&lt;p&gt;To confirm whether you&amp;rsquo;re vulnerable or not you can download
&lt;a href=&#34;https://github.com/ikkisoft/ParrotNG/releases&#34; target=&#34;_blank&#34;&gt;ParrotNG&lt;/a&gt; and run this against the
&lt;code&gt;skin/adminhtml/default/default/media&lt;/code&gt; folder.&lt;/p&gt;

&lt;h1 id=&#34;more-info&#34;&gt;More Info&lt;/h1&gt;

&lt;p&gt;Find more information regarding the CVE here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://peterocallaghan.co.uk/2016/07/magento-csrf-vulnerability-via-adobe-flex/&#34; target=&#34;_blank&#34;&gt;Peter O&amp;rsquo;Callaghan - Magento CSRF vulnerability via Adobe Flex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.mindedsecurity.com/2015/03/the-old-is-new-again-cve-2011-2461-is.html&#34; target=&#34;_blank&#34;&gt;Minded Security - The old is new, again. CVE-2011-2461 is back!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://helpx.adobe.com/flash-builder/kb/flex-security-issue-apsb11-25.html&#34; target=&#34;_blank&#34;&gt;Adobe - Flex Security Issue APSB11-25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>