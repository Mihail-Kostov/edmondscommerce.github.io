<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dynamic on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/dynamic/</link>
    <description>Recent content in Dynamic on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jun 2011 10:49:46 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/dynamic/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using PHP to Stream SQL results dynamically as CSV, even to IE</title>
      <link>http://edmondscommerce.github.io/php/using-php-to-stream-sql-results-dynamically-as-csv-even-to-ie.html</link>
      <pubDate>Mon, 06 Jun 2011 10:49:46 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/php/using-php-to-stream-sql-results-dynamically-as-csv-even-to-ie.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you want to offer a csv feed and want the results to be on demand and like the idea of avoiding messing about righting to files on the server etc, you might like this little manuever.&lt;/p&gt;

&lt;p&gt;You will notice I&amp;rsquo;m using a non standard db_query function, just assume that this does all the sensible stuff it should.&lt;/p&gt;

&lt;p&gt;Also the query needs to be modified to suit.&lt;/p&gt;

&lt;p&gt;The trick is writing to PHP&amp;rsquo;s built in php://output stream which is basically just STDOUT.&lt;/p&gt;

&lt;p&gt;Note the headers which are specifically required to get IE to accept the file as a download. Other browsers will accept less headers but will also work fine with these.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Pragma: public&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Expires: 0&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Cache-Control: must-revalidate, post-check=0, pre-check=0&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Cache-Control: private&amp;quot;, false);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Content-Type: application/octet-stream&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Content-Disposition: attachment; filename=\&amp;quot;file.csv\&amp;quot;;&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Content-Transfer-Encoding: binary&amp;quot;);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$outstream = fopen(&amp;quot;php://output&amp;quot;, &amp;#39;w&amp;#39;);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$sql = &amp;quot; select * from a_table&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$q = db_query(&amp;quot;$sql&amp;quot;);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$header = false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;while ($r = mysql_fetch_assoc($q)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if (!$header) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        fputcsv($outstream, array_keys($r));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $header = true;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    fputcsv($outstream, $r);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;fclose($outstream);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Javascript Associate Arrays / Objects with Dynamic Key Access</title>
      <link>http://edmondscommerce.github.io/javascript/javascript-associate-arrays-objects-with-dynamic-key-access.html</link>
      <pubDate>Sat, 26 Sep 2009 18:19:24 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/javascript/javascript-associate-arrays-objects-with-dynamic-key-access.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are trying to use associative arrays in Javascript, the first thing is to not use the Array type and instead just use objects.&lt;/p&gt;

&lt;p&gt;The weird and wonderful thing is that if you create your array as an object, you can still use the array style square brackets to access object properties.&lt;/p&gt;

&lt;p&gt;So for example take this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;assocArrayObject&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;key1&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;value1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;key2&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;value2&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;assocArrayObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;key1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can also access object properties by using a dynamic key this way as well, but not via the normal method, for example&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dynamicKey&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;key1&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//doesnt work&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;assocArrayObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dynamicKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//does work&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;assocArrayObject&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dynamicKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;easy when you know how, took me a while to clear this one up :)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>