<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Header on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/header/</link>
    <description>Recent content in Header on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Feb 2017 15:29:56 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/header/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Bash Snippet to Get Column Numbers For Csv Headers</title>
      <link>https://edmondscommerce.github.io/bash-snippet-to-get-column-numbers-for-csv-headers/</link>
      <pubDate>Wed, 08 Feb 2017 15:29:56 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash-snippet-to-get-column-numbers-for-csv-headers/</guid>
      <description>&lt;p&gt;Check out this BASH snippet to get the headers from a CSV file and give you the column numbers&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/edmondscommerce/87472f274e47ed90a2dafa2cdf48a75f.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Magento Warning: Header may not contain more than a single header, new line detected &#43; Solution</title>
      <link>https://edmondscommerce.github.io/magento/magento-warning-header-may-not-contain-more-than-a-single-header-new-line-detected-solution.html</link>
      <pubDate>Tue, 30 Oct 2012 14:08:10 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-warning-header-may-not-contain-more-than-a-single-header-new-line-detected-solution.html</guid>
      <description>&lt;p&gt;If you are puzzled by the error message:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Warning: Header may not contain more than a single header, new line detected
&lt;/code&gt;
When dealing with a Magento migration, you might want to double check you have not accidentally added a new line character to the end of your base_url field when you were updating the core_config_data table.&lt;/p&gt;

&lt;p&gt;I just did this using phpMyadmin&amp;rsquo;s nifty ajax editing feature however I must have hit return by accident. Simply editing them again and making sure there is absolutely no white space at the end of the URL and the problem is solved.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Controller Action Return Json (for AJAX, API etc)</title>
      <link>https://edmondscommerce.github.io/magento/magento-controller-action-return-json-for-ajax-api-etc.html</link>
      <pubDate>Wed, 15 Feb 2012 14:15:01 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-controller-action-return-json-for-ajax-api-etc.html</guid>
      <description>&lt;p&gt;If you have a controller action that is designed to be accessed by AJAX requests or perhaps as part of a custom API system then you might like this snippet.&lt;/p&gt;

&lt;p&gt;If you are working with the above scenario you likely would like to return pure JSON without any HTML etc. Also serving up the correct content type headers is going to be helpful, its not HTML, its JSON.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;    public function searchAction(){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $query = $this-&amp;gt;getRequest()-&amp;gt;getParam(&amp;#39;query&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $json = Mage::getModel(&amp;#39;mymodule/mymodel&amp;#39;)-&amp;gt;getSearchJson($query);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;getResponse()-&amp;gt;setHeader(&amp;#39;Content-type&amp;#39;, &amp;#39;application/json&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;getResponse()-&amp;gt;setBody($json);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>PHP Force Download with Custom Filename</title>
      <link>https://edmondscommerce.github.io/php/php-force-download-with-custom-filename.html</link>
      <pubDate>Mon, 23 Jan 2012 15:22:03 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/php-force-download-with-custom-filename.html</guid>
      <description>&lt;p&gt;If you want to serve up text files for download (perhaps product feeds etc) then you might like this little snippet.&lt;/p&gt;

&lt;p&gt;Not only will it force the file to be downloaded but it allows you to specify a custom filename that it should be saved as.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;if(isset($_GET[&amp;#39;download_file&amp;#39;])){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    header(&amp;quot;Content-type: application/octet-stream&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    header(&amp;quot;Content-Disposition: attachment; filename=Export.txt&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    readfile(&amp;#39;Export.txt&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    die;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>