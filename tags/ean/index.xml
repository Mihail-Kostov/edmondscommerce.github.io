<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ean on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/ean/</link>
    <description>Recent content in Ean on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Apr 2010 14:54:09 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/ean/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Finding invalid EANs (simply) With MySQL</title>
      <link>https://edmondscommerce.github.io/mysql/finding-invalid-eans-simply-with-mysql.html</link>
      <pubDate>Mon, 19 Apr 2010 14:54:09 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/mysql/finding-invalid-eans-simply-with-mysql.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Check out this little query for checking for obviously invalid EANs.&lt;/p&gt;

&lt;p&gt;Note this is not checking the check digit for validity, it is purely looking for data that is in no way possibly an EAN number.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;products&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ean&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;where&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ean&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ean&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regexp&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;^[0-9]{13}$&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;assuming you have a column called ean, this will empty the value for the EAN for any product that has dodgy data in there.&lt;/p&gt;

&lt;p&gt;MySQL regex is actually very powerful and fast.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>