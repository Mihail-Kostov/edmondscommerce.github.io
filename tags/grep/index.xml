<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grep on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/grep/</link>
    <description>Recent content in Grep on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Jan 2014 11:39:19 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/grep/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Clean Up Meld Files when Git Merging</title>
      <link>http://edmondscommerce.github.io/git/clean-up-meld-files-when-git-merging.html</link>
      <pubDate>Wed, 29 Jan 2014 11:39:19 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/git/clean-up-meld-files-when-git-merging.html</guid>
      <description>&lt;p&gt;If you do a Git Merge using Meld (a brilliant Linux diff tool) then you might find that there are a bunch of files created that you need to clear up.&lt;/p&gt;

&lt;p&gt;These files will be copies of the merged files and can be safely removed as everything you should need to know is already in Git.&lt;/p&gt;

&lt;p&gt;I wrote the following quick function to find all of these files and remove them. You could add this as a function to your bashrc file if you need to do this regularly.&lt;/p&gt;

&lt;p&gt;Here is the BASH snippet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;git status -su &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -P &lt;span class=&#34;s2&#34;&gt;&amp;quot;\.BACKUP|BASE|LOCAL|REMOTE\.&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -f2 -d&lt;span class=&#34;s2&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs rm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Linux Detect Mouse Button Numbers Easily</title>
      <link>http://edmondscommerce.github.io/linux/linux-detect-mouse-button-numbers-easily.html</link>
      <pubDate>Tue, 12 Jun 2012 11:49:42 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/linux-detect-mouse-button-numbers-easily.html</guid>
      <description>&lt;p&gt;If you need to know what number a mouse button is (for example if you are configuring compiz) in Linux then you might like this little trick.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
xev | grep button

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run the above in a terminal and it will display a white box. As you click on it, the button number will appear in your terminal.&lt;/p&gt;

&lt;p&gt;The pipe to grep is to filter out the large amount of noise from xev and only display the button number notifications.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Formatting the output from tail</title>
      <link>http://edmondscommerce.github.io/linux/formatting-the-output-from-tail.html</link>
      <pubDate>Wed, 11 Jan 2012 16:27:41 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/formatting-the-output-from-tail.html</guid>
      <description>&lt;p&gt;If you need to monitor a log file in real time, then using a combination of tail and grep will allow you to watch the important parts of the file. However if the log file spans more than one line then it can quickly become difficult to read.&lt;/p&gt;

&lt;p&gt;By using sed you are able to format the text so it is easier to read like this&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
tail -f /path/to/file | sed -u G | grep -A 1 searchTerm
&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Remove Hard Coded URLs from Theme</title>
      <link>http://edmondscommerce.github.io/magento/magento-remove-hard-coded-urls-from-theme.html</link>
      <pubDate>Thu, 02 Sep 2010 14:14:18 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/magento-remove-hard-coded-urls-from-theme.html</guid>
      <description>&lt;p&gt;If you are working on a theme, you may find that there are hard coded links dotted all over the place.&lt;/p&gt;

&lt;p&gt;This can make testing a site offline (and thereby not on the same URL) a bit of a pain.&lt;/p&gt;

&lt;p&gt;Here is a quick fix for you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Remove all hard coded links from the CMS section:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cms_block&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://www.domain.com/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{{store url=&amp;#39;&amp;#39;}}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cms_page&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://www.domain.com/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;{{store url=&amp;#39;&amp;#39;}}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Remove all hard coded links from the theme files.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is a command line one using grep and sed.&lt;/p&gt;

&lt;p&gt;Firstly, cd into the root theme folder&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
cd app/design/frontent/default/hardtheme

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now find files with hard coded links&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
grep -rl &#39;http://www.domain.com&#39; ./

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now to automatically remove all those,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
grep -rl &#39;http://www.domain.com&#39; ./ | xargs sed -i &#39;s/http:\/\/domain.com\//&amp;lt;?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB);?&amp;gt;/&#39;

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Magento Events Cheat Sheet Grep - Works for Any Version</title>
      <link>http://edmondscommerce.github.io/magento/magento-events-cheat-sheet-grep-works-for-any-version.html</link>
      <pubDate>Sat, 20 Feb 2010 10:46:01 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/magento-events-cheat-sheet-grep-works-for-any-version.html</guid>
      <description>&lt;p&gt;If you use the Magento event / observer system for extending Magento (if you don&amp;rsquo;t you should) then you will find this little script handy for parsing out all of the events in the latest (eg Magento 1.4) version of Magento.&lt;/p&gt;

&lt;p&gt;This is a Linux shell script so either use it on your server or if you run a decent desktop OS you should be able to run it on your desktop.&lt;/p&gt;

&lt;p&gt;There are two parameters you need to define.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
#!/bin/bash
# Find all Magento Events, include file names, line numbers and the preceding 6 lines of code

#Please define these two
ABSOLUTE_PATH_TO_MAGENTO_ROOT=/home/joseph/Projects/Magento/
ABSOLUTE_PATH_TO_OUTPUT_FILE_INC_FILE_NAME= /home/joseph/magentoEvents.txt

#here is the command
find $ABSOLUTE_PATH_TO_MAGENTO_ROOT  -name &amp;quot;*.php&amp;quot; | xargs -L10 grep -n -B 6 &amp;quot;dispatchEvent&amp;quot; . &amp;gt; $ABSOLUTE_PATH_TO_OUTPUT_FILE_INC_FILE_NAME

# save this file as magentoevents.sh
# then do command: chmod +x magentoevents.sh
# then to run, do command: ./magentoevents.sh


&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Use Grep To Find Text In Folders</title>
      <link>http://edmondscommerce.github.io/linux/use-grep-to-find-text-in-folders.html</link>
      <pubDate>Fri, 03 Apr 2009 15:53:37 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/use-grep-to-find-text-in-folders.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Sometimes it can be really hard to figure out exactly which file a chunk of code is coming from. At times like this the command line tool grep is immensely useful.&lt;/p&gt;

&lt;p&gt;This snippet of code will search all php files within a specified folder. It will check through all files and sub folders for the string id=&amp;ldquo;something&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
find /path/to/root/search/folder/ -name &amp;quot;*.php&amp;quot; -print0 | xargs -0 grep &#39;id=&amp;quot;something&amp;quot;&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>