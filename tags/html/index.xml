<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Html on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/html/</link>
    <description>Recent content in Html on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Jul 2013 14:09:53 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/html/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Prevent zooming in a mobile browser</title>
      <link>http://edmondscommerce.github.io/css/prevent-zooming-in-a-mobile-browser.html</link>
      <pubDate>Fri, 26 Jul 2013 14:09:53 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/css/prevent-zooming-in-a-mobile-browser.html</guid>
      <description>&lt;p&gt;It may some times be necessary to prevent a user from zooming in on a mobile browser.&lt;/p&gt;

&lt;p&gt;This can be done with the following meta tag&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&amp;#39;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#39;viewport&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;width=device-width&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Form File Upload Limits with PHP</title>
      <link>http://edmondscommerce.github.io/php/form-file-upload-limits-with-php.html</link>
      <pubDate>Fri, 11 Jan 2013 16:49:24 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/php/form-file-upload-limits-with-php.html</guid>
      <description>&lt;p&gt;If you have a form designed to handle file uploads which is failing due to file size then you might like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$arrayMaxes = array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;upload_max_filesize&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;upload_max_filesize&amp;#39;)),&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;post_max_size&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;post_max_size&amp;#39;)),&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;memory_limit&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;memory_limit&amp;#39;))&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$maxUploadSize = min($arrayMaxes);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach ($arrayMaxes as $key =&amp;gt; $value) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if ($value == min($arrayMaxes)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $minimumOfThree = $key;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        break;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;echo &amp;quot;The maximum file size you can upload is $maxUploadSize, this is due to the php.ini setting $mininimumOfThree&amp;quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will calculate the smallest value that will be allowed based upon php.ini settings.&lt;/p&gt;

&lt;p&gt;You can then incorporate this into your form logic and display so that users have a clear understanding of how large a file they can upload.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Responsive Web Design for Mobile and Tablet Optimised Web Sites</title>
      <link>http://edmondscommerce.github.io/web-design/responsive-web-design-for-mobile-and-tablet-optimised-web-sites.html</link>
      <pubDate>Fri, 02 Nov 2012 17:42:15 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/web-design/responsive-web-design-for-mobile-and-tablet-optimised-web-sites.html</guid>
      <description>&lt;p&gt;If you are at all involved or exposed to the world of web design and web development then you have no doubt heard of the phrase &amp;ldquo;responsive&amp;rdquo; web design. If you browse the popular theme sites for themes for platforms like WordPress and Magento then you can see responsive themes becoming more popular.&lt;/p&gt;

&lt;p&gt;So what does it mean and how does it work?&lt;/p&gt;

&lt;h3&gt;What does Responsive Web Design Mean?&lt;/h3&gt;

&lt;p&gt;Responsive designs change the layout and visible content on a page depending on the width, height and other factors of the device or window rendering the page. You can generally test out responsive designs by simply unmaximising a browser window and then resizing it down to smaller sizes such as 320 pixels wide. On a normal design you would be quite lucky if the site still rendered in a readable way at that width. More than likely you will only be able to see a fraction of the page and would have to sideways scroll to see the rest of it.&lt;/p&gt;

&lt;p&gt;On a responsively designed site, the layout would change as the screen width gets smaller. It might hide certain elements such as side columns and may make things rearrange in a more vertical way to allow them to be displayed without the need for side scrolling.&lt;/p&gt;

&lt;p&gt;In a nutshell, this is what responsive web design means.&lt;/p&gt;

&lt;h3&gt;How Does Responsive Web Design Work?&lt;/h3&gt;

&lt;p&gt;Responsive web design works by using a CSS3 technique called &lt;a href=&#34;http://www.w3.org/TR/css3-mediaqueries/&#34; title=&#34;W3C Media Queries Information&#34; target=&#34;_blank&#34;&gt;Media Queries&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CSS has had the concept of media specific style sheets for quite some time. Traditionally though this was limited to print and screen, allowing for example to remove background images from a page when printing and perhaps adjust font family and size for better printing results.&lt;/p&gt;

&lt;p&gt;The media queries functionality extends this concept significantly, allowing custom style rules to be applied based upon a range of differnt media options. The most commonly used of these for responsive web design are width and height.&lt;/p&gt;

&lt;p&gt;The full list of properties that can be utilised with media queries include:&lt;/p&gt;

&lt;blockquote&gt;width
height
device-width
device-height
orientation
aspect-ratio
device-aspect-ratio
color
color-index
monochrome
resolution
scan
grid&lt;/blockquote&gt;

&lt;h3&gt;Get Your Web Site Working Responsively&lt;/h3&gt;

&lt;p&gt;If you want to upgrade your web site to use responsive design techniques to better support the wide range of internet devices in use today then &lt;strong&gt;&lt;a href=&#34;http://edmondscommerce.github.io/contact-us&#34;&gt;get in touch&lt;/a&gt;&lt;/strong&gt; with Edmonds Commerce today to discuss how we can help you.&lt;/p&gt;

&lt;p&gt;&lt;h3&gt;Some Useful and Interesting Links&lt;/h3&gt;
&lt;a href=&#34;http://www.w3.org/TR/css3-mediaqueries/ &#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.w3.org/TR/css3-mediaqueries/&#34; target=&#34;_blank&#34;&gt;http://www.w3.org/TR/css3-mediaqueries/&lt;/a&gt;&lt;/a&gt;
&lt;a href=&#34;http://johnpolacek.github.com/scrolldeck.js/decks/responsive/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://johnpolacek.github.com/scrolldeck.js/decks/responsive/&#34; target=&#34;_blank&#34;&gt;http://johnpolacek.github.com/scrolldeck.js/decks/responsive/&lt;/a&gt;&lt;/a&gt;
&lt;a href=&#34;http://reference.sitepoint.com/css/mediaqueries&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://reference.sitepoint.com/css/mediaqueries&#34; target=&#34;_blank&#34;&gt;http://reference.sitepoint.com/css/mediaqueries&lt;/a&gt;&lt;/a&gt;
&lt;a href=&#34;http://mediaqueri.es/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://mediaqueri.es/&#34; target=&#34;_blank&#34;&gt;http://mediaqueri.es/&lt;/a&gt;&lt;/a&gt;
&lt;a href=&#34;http://mac-blog.org.ua/css-3-media-queries-cheat-sheet/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://mac-blog.org.ua/css-3-media-queries-cheat-sheet/&#34; target=&#34;_blank&#34;&gt;http://mac-blog.org.ua/css-3-media-queries-cheat-sheet/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simple PHP Scraping with jQuery Like Selectors using Simple HTML Dom</title>
      <link>http://edmondscommerce.github.io/scraping/simple-php-scraping-with-jquery-like-selectors-using-simpledom.html</link>
      <pubDate>Tue, 21 Aug 2012 18:29:43 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/scraping/simple-php-scraping-with-jquery-like-selectors-using-simpledom.html</guid>
      <description>&lt;p&gt;If you need to do some HTML parsing, scraping etc then you generally have the choice of using the DOM approach to parse the HTML or using regex to pull bits out. I quite like both approaches, there are pros and cons to both so having both options available is the best to ensure you use the right tool for the job on a case by case basis.&lt;/p&gt;

&lt;p&gt;Recently though I discovered Simple HTML Dom. This makes the DOM based approach almost ridiculously easy, especially if you are comfortable with jQuery like selectors for pulling out specific DOM nodes.&lt;/p&gt;

&lt;p&gt;You can read all about it here:
&lt;a href=&#34;http://simplehtmldom.sourceforge.net/manual.htm&#34; title=&#34;Simple HTML Dom&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://simplehtmldom.sourceforge.net/manual.htm&#34; target=&#34;_blank&#34;&gt;http://simplehtmldom.sourceforge.net/manual.htm&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First impressions are really good, its very easy and the lead in time from installation to using is really fast. I like that, never been much of a fan of having to RTFM for everything!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Comply with the cookie law with very little effort</title>
      <link>http://edmondscommerce.github.io/jquery/comply-with-the-cookie-law-with-very-little-effort.html</link>
      <pubDate>Wed, 15 Aug 2012 14:16:16 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/jquery/comply-with-the-cookie-law-with-very-little-effort.html</guid>
      <description>&lt;p&gt;A lot of concern has been caused by the &amp;ldquo;Cookie Law&amp;rdquo; which says you must tell people that you use cookies if you do, and 99% of sites do!&lt;/p&gt;

&lt;p&gt;Well here&amp;rsquo;s a very simple jQuery bolt-on that deals with that, and although visitors need javascript enabled to see it, you have made &amp;ldquo;best efforts&amp;rdquo; to inform them, and on any eCommerce site you&amp;rsquo;re going to have a &amp;ldquo;this site requires javascript message&amp;rdquo; anyway.&lt;/p&gt;

&lt;p&gt;The file to download is from github (isn&amp;rsquo;t opensource great?) &lt;a href=&#34;https://github.com/carlwoodhouse/jquery.cookieBar&#34; title=&#34;jQuery.cookiebar on github&#34;&gt;here&lt;/a&gt; and is as simple to implement as add the script file to the head and somewhere on the page insert the following :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cookieBar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The example page is also on github : &lt;a href=&#34;http://carlwoodhouse.github.com/jquery.cookieBar/&#34; title=&#34;CookieBar example page&#34;&gt;http://carlwoodhouse.github.com/jquery.cookieBar/&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Performance Problems</title>
      <link>http://edmondscommerce.github.io/magento/magento-performance-problems.html</link>
      <pubDate>Mon, 16 Apr 2012 08:56:48 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/magento-performance-problems.html</guid>
      <description>&lt;p&gt;If you are having performance issues with your Magento store and you are running on a dedicated or VPS server that you think should be up to the task of running your store properly but you continue to have performance problems then this post is for you.&lt;/p&gt;

&lt;p&gt;Having decent server specification is only the first step on the road to having a high performance Magento store. Without proper configuration your server is not going to make the best use of its resources and that could make the difference of literally seconds or even tens of seconds of page load time.&lt;/p&gt;

&lt;p&gt;The first and most important thing to check is that you are running a PHP opcode cacher such as APC. Opcode caching takes your PHP source code and compiles it to opcodes and then stores this in a cache. This opcode is actually what is run when people visit your store and the process of creating it, especially if you have a very large application with lots of file (like Magento), can be a real performance bottleneck. This problem is easily resolved by having APC installed and configured. If you are not sure, ring your hosting company and find out and if you don&amp;rsquo;t have it running, ask them to set it up for you.&lt;/p&gt;

&lt;p&gt;The next thing to check is MySQL configuration. The standard MySQL configuration defaults were set when server hardware and memory was a tiny fraction of what it is today and that means that the configuration is generally way too sparse with allocation of memory for caching and other optimisations. Tweaking MySQL can be a little tricky, its definitely not something you should do if you are not sure, but it is well worth getting someone to optimise your MySQL configuration.&lt;/p&gt;

&lt;p&gt;After that, the next major performance gain with Magento is to make proper use of block caching. Magento has a brilliant built in feature where every block (page section) can be cached so that next time someone visits the page, the logic used to generate that section of page (for example a best sellers list) does not have to be run, we simply redisplay the cached copy of that block&amp;rsquo;s HTML.&lt;/p&gt;

&lt;p&gt;Beyond these three steps there are still many more things that can be done to improve the performance of your Magento store. If you would like professional help getting the best out of your server and Magento with a view to getting the lowest possible page load speeds then get in touch with Edmonds Commerce today.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tip: Javascript late-loading trick</title>
      <link>http://edmondscommerce.github.io/javascript/tip-javascript-late-loading-trick.html</link>
      <pubDate>Fri, 30 Mar 2012 14:36:08 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/javascript/tip-javascript-late-loading-trick.html</guid>
      <description>&lt;p&gt;Having issues with javascript dependencies or awkwardly structured html defining objects you need before run?&lt;/p&gt;

&lt;p&gt;This is a little trick I used combined with &lt;a href=&#34;https://github.com/csnover/RoundRect&#34;&gt;csnover&amp;rsquo;s roundrect.js&lt;/a&gt; to provide IE versions &amp;lt; 9 with border-radius rounded corners.&lt;/p&gt;

&lt;p&gt;Create a separate source file e.g. mylateloader.js and in it include the following code :-&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
function myInArray(needle, haystack) {
    var length = haystack.length;
    for(var i = 0; i &amp;lt; length; i++) {
        var str = jQuery(haystack[i]).attr(&#39;src&#39;);
        if(typeof(str) != &#39;undefined&#39; &amp;amp;&amp;amp; str.search(&#39;.*&#39;+needle+&#39;.*&#39;) &amp;gt; -1) return str;
    }
    return false;
}

jQuery(document).ready(function(){
    var script = document.createElement(&#39;script&#39;);
    url = myInArray(&#39;mylateloader.js&#39;, document.getElementsByTagName(&#39;script&#39;));
    script.src = url.replace(&#39;mylateloader.js&#39;,&#39;mycoolminifiedfile.min.js&#39;);
    document.getElementsByTagName(&#39;head&#39;)[0].appendChild(script);
    setTimeout(&amp;quot;mycoolobject.run()&amp;quot;,2000);
})

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That way, at document.ready(), mycoolminifiedfile.min.js is loaded &lt;em&gt;from the same directory on the server as the late loader js&lt;/em&gt; and 2 seconds later, the mycoolobject.run() is called.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tip: Copy CSS Selector in chrome</title>
      <link>http://edmondscommerce.github.io/chrome/tip-copy-css-selector-in-chrome.html</link>
      <pubDate>Thu, 29 Mar 2012 16:14:21 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/chrome/tip-copy-css-selector-in-chrome.html</guid>
      <description>&lt;p&gt;Okay, this is hacky but it really works, and saves a lot of time!&lt;/p&gt;

&lt;p&gt;To copy the css selector of an element in chrome, you need your developer tools open popped-out of chrome, not docked but here is the trick :-&lt;/p&gt;

&lt;p&gt;Inspect the element that you want, be sure it&amp;rsquo;s selected in developer tools, then press F12.  This will open a second developer tools window inspecting the first developer tools.&lt;/p&gt;

&lt;p&gt;Then, insert the following two lines of javascript magic, one at a time - the first pulls jQuery into the developer tools and the second runs a function to build the css path and output it into the console!&lt;/p&gt;

&lt;p&gt;First jQuery :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var script = document.createElement(&#39;script&#39;);script.src = &amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/1.6.3/jquery.min.js&amp;quot;;document.getElementsByTagName(&#39;head&#39;)[0].appendChild(script);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then the path :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;path=&amp;quot;&amp;quot;; function addtopath(str) { if(typeof(str) != &#39;undefined&#39;) {path = str+&#39; &#39;+path} } jQuery(&#39;.crumbs span&#39;).each(function(){addtopath(jQuery(this).attr(&#39;title&#39;))}); path;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can try stringing them together into one command, but sometimes jQuery doesn&amp;rsquo;t seem to load fast enough.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Validating Form Radio Buttons Magento</title>
      <link>http://edmondscommerce.github.io/magento/validating-form-radio-buttons-magento.html</link>
      <pubDate>Wed, 22 Feb 2012 12:08:42 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/validating-form-radio-buttons-magento.html</guid>
      <description>&lt;p&gt;When creating use input forms in Magento it&amp;rsquo;s important to do as much validation on the client side as possible to make the user experience as smooth as possible.&lt;/p&gt;

&lt;p&gt;When validating that one of a group of radio buttons is selected all you should need to do is add the class &amp;ldquo;validate-one-required-by-name&amp;rdquo; to one or more of your radio buttons. The message &amp;ldquo;Please select one of the options.&amp;rdquo; will appear under every radio button that has the class on it if one of them is not selected, so use it strategically.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Got the Insecure Content on a Secure HTTPs Page Problem - Easy Solution</title>
      <link>http://edmondscommerce.github.io/security/got-the-insecure-content-on-a-secure-https-page-problem-easy-solution.html</link>
      <pubDate>Thu, 12 Jan 2012 12:28:54 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/security/got-the-insecure-content-on-a-secure-https-page-problem-easy-solution.html</guid>
      <description>&lt;p&gt;Often you will see SSL warnings or errors related to insecure content being displayed on a secure page.&lt;/p&gt;

&lt;p&gt;This could be as simple as one javascript file or image that is being included via http rather than https, though some times this can be a bit tricky to track down.&lt;/p&gt;

&lt;p&gt;The easiest solution is to hit this site:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.whynopadlock.com/&#34;&gt;http://www.whynopadlock.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will give you a clear report of the problems and should help you quickly find and fix them.&lt;/p&gt;

&lt;p&gt;Alternatively if you use Chrome you may see the details in the Javascript console.&lt;/p&gt;

&lt;p&gt;Once you know what elements are being called by http as opposed to https, you simply need to make them use https or remove them altogether.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quickly testing HTML with Firebug</title>
      <link>http://edmondscommerce.github.io/debugging/quickly-testing-html-with-firebug.html</link>
      <pubDate>Wed, 05 Oct 2011 12:13:18 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/debugging/quickly-testing-html-with-firebug.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Ever need to quickly test some HTML that you copied from some where?&lt;/p&gt;

&lt;p&gt;If you have Firebug installed, you can open a new tab, go the the HTML tab in Firebug, click edit and paste your HTML and Firefox will render it. This is faster than having to open a text editor, paste the contents and save the file, but JavaScript on load events won&amp;rsquo;t fire.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JQuery Keeping Click Handler when Updating Content - Live Binding</title>
      <link>http://edmondscommerce.github.io/jquery/jquery-keeping-click-handler-when-updating-content-live-binding.html</link>
      <pubDate>Wed, 31 Aug 2011 15:02:23 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/jquery/jquery-keeping-click-handler-when-updating-content-live-binding.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are using jQuery and attaching click handlers etc to elements as part of your document ready block, you may find you are losing those handlers if you update the page with Javascript after load.&lt;/p&gt;

&lt;p&gt;For example if you have some kind of slide show which involves redrawing the contents of a div, you might find that the click handlers you had attached to the links of class &amp;lsquo;slideshow-link&amp;rsquo; stop working.&lt;/p&gt;

&lt;p&gt;Of course you can reattach handlers manually after dropping in your new HTML but that&amp;rsquo;s pretty messy.&lt;/p&gt;

&lt;p&gt;A much nicer solution is this:&lt;/p&gt;

&lt;p&gt;Instead of using&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;jQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.slideshow-link&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can use&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;jQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.slideshow-link&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;live&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The Live method will keep the attachment to elements matching the selector now and in the future.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://api.jquery.com/live/&#34;&gt;http://api.jquery.com/live/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gotta love jQuery ;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>View HTML Files from the Command Line - Linux</title>
      <link>http://edmondscommerce.github.io/linux/view-html-files-from-the-command-line-linux.html</link>
      <pubDate>Thu, 12 Aug 2010 11:10:44 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/view-html-files-from-the-command-line-linux.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you ever want to have a quick look at a html file from the command line (eg when SSHing into a server) then you will love this little app.&lt;/p&gt;

&lt;p&gt;Called w3m, its a basic text based browser that will render your html into readable formatted text right on the command line.&lt;/p&gt;

&lt;p&gt;This is great for me as I often create log files in a HTML format, before this the only way to read them was to either have them web accessible or download them and view them locally in the browser.&lt;/p&gt;

&lt;p&gt;Now with this little app I can view them right in situ - dead handy.&lt;/p&gt;

&lt;p&gt;To install on Cent OS just&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
yum install w3m

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Web Developer Toolbar for Firefox</title>
      <link>http://edmondscommerce.github.io/web-development/web-developer-toolbar-for-firefox.html</link>
      <pubDate>Tue, 12 Feb 2008 13:02:00 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/web-development/web-developer-toolbar-for-firefox.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
The web developer toolbar is an excellent addition to the great firefox web browser. It allows you ultimate control over the behaviour of your web browser and helps you to fine tune layouts. The toolbar has a real time html and css editor built in which is great for tweaking things. For those of you who have a nice big 22&amp;rdquo; monitor to develop on, the resize functionality is awesome for replicating the viewport of whichever resolutions you want, so that you can ensure your layout still works on an 800 x 600 display for example.&lt;/p&gt;

&lt;p&gt;As a web development tool for those of us who hand code things instead of using dreamweaver or whatnot - it is an excellent tool.&lt;/p&gt;

&lt;p&gt;You can download the web developer toolbar &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/60&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately there is some kind of bug with Firefox where if an update fails or the browser crashes, then your web developer toolbar may stop working. In fact it is still working but all of the icons disappear. All you have to do to fix it is right click it, select customize and then  select &amp;ldquo;Restore Default Set&amp;rdquo;. Thanks to &lt;a href=&#34;http://www.voodish.co.uk/articles/web-developer-toolbar-broken-empty-not-showing-fix/&#34; target=&#34;_blank&#34;&gt;Voodish &lt;/a&gt;for the fix.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Handy Easy Javascript</title>
      <link>http://edmondscommerce.github.io/javascript/handy-easy-javascript.html</link>
      <pubDate>Thu, 07 Feb 2008 15:28:02 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/javascript/handy-easy-javascript.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Javascript can seem daunting for new comers who are learning html and coding for the web. However there are a few dead easy things you can do with javascript which do not require any particularly complicated code and can make your site a bit smoother and slicker for the end user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Form Submit on Change&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A dead easy one to make forms automatically submit when people make a selection on a drop down menu. All you have to do is add onchange=&amp;ldquo;submit();&amp;rdquo; into your opening select tag&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;index.php&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;view&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;onchange&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;submit();&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;option1&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;option 2&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;option&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Javascript Back Button&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;another really easy one - you can replicate the functionality of the back button. This is especially handy if you are displaying content in a javascript window without the usual controls.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;javascript: history.go(-1)&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Back&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>