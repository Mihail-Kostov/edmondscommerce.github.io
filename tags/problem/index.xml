<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Problem on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/tags/problem/</link>
    <description>Recent content in Problem on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Aug 2013 09:21:30 +0000</lastBuildDate>
    <atom:link href="http://example.com/tags/problem/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Disable JavaScript alerts for a page</title>
      <link>http://example.com/javascript/disable-javascript-alerts-for-a-page.html</link>
      <pubDate>Wed, 28 Aug 2013 09:21:30 +0000</pubDate>
      
      <guid>http://example.com/javascript/disable-javascript-alerts-for-a-page.html</guid>
      <description>&lt;p&gt;If you encounter a webpage that is generating a lot of alerts, the following bookmark will prevent them from stealing focus but still allow you to see what is being said.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;javascript&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>MySQL Substring not Returning Anything &#43; Solution</title>
      <link>http://example.com/mysql/mysql-substring-not-returning-anything-solution.html</link>
      <pubDate>Tue, 20 Aug 2013 10:54:20 +0000</pubDate>
      
      <guid>http://example.com/mysql/mysql-substring-not-returning-anything-solution.html</guid>
      <description>&lt;p&gt;If you are puzzled why your simple usage of the MySQL SUBSTRING() function is not returning anything this could be your solution.&lt;/p&gt;

&lt;p&gt;The substring function allows you to specify a string (eg a column), the start character and the length. If you are used to languages like PHP then you are probably used to this kind of function regarding 0 as the starting character. In fact this function regards 1 as the starting character. If you specify 0 then you simply won&amp;rsquo;t get any results.&lt;/p&gt;

&lt;p&gt;This does not work:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
SELECT SUBSTRING(column, 0, 10) as tenchars

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This does work:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
SELECT SUBSTRING(column, 1, 10) as tenchars

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Payment has failed... Magento and SagePay CE Error &#43; Solution</title>
      <link>http://example.com/magento/payment-has-failed-magento-and-sagepay-ce-error-solution.html</link>
      <pubDate>Wed, 22 May 2013 14:58:25 +0000</pubDate>
      
      <guid>http://example.com/magento/payment-has-failed-magento-and-sagepay-ce-error-solution.html</guid>
      <description>&lt;p&gt;I recently upgraded a magento store and installed the Sage Pay Suite CE module from EbizMarks.&lt;/p&gt;

&lt;p&gt;The following error came up twice during the testing of the module, once in the frontend and once in the admin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Payment has failed, please reload checkout page and try again. Your card has not been charged&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The error itself is triggered from the saveAfter method in the Ebizmarts_SagePaySuite_Model_Observer_Sales class and is called every time an order is saved.&lt;/p&gt;

&lt;p&gt;The error on the frontend was caused by a javascript error. Adding the following to the top of the sagePaySuite_Checkout.js file corrected it&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typeof&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sagePayIsMobile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sagePayIsMobile&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/BlackBerry/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/webOS/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/Android/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/iPhone/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/iPod/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;userAgent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;/iPad/i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The error in the admin was caused by a different extension being called when the order was saved. Normally the extension ensures that the method is not called when it is not needed and this is done by checking the route and the registry. If an extension saves the order these checks are not triggered so you will need to add in your own. To do that you will need add the following code to the action that is saving the error&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;Mage::register(&amp;#39;skipSagePay&amp;#39;, TRUE);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then change the following line in the Ebizmarts/SagePaySuite/Model/Observer/Sales.php file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;if( (Mage::app()-&amp;gt;getRequest()-&amp;gt;getControllerModule() == &amp;#39;Mage_Api&amp;#39;) || Mage::registry(&amp;#39;current_shipment&amp;#39;) || Mage::registry(&amp;#39;sales_order&amp;#39;) || Mage::registry(&amp;#39;current_creditmemo&amp;#39;) || Mage::registry(&amp;#39;current_invoice&amp;#39;) || ($order-&amp;gt;getPayment()-&amp;gt;getMethod() == &amp;#39;sagepayrepeat&amp;#39;) ){&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;if( (Mage::app()-&amp;gt;getRequest()-&amp;gt;getControllerModule() == &amp;#39;Mage_Api&amp;#39;) || Mage::registry(&amp;#39;current_shipment&amp;#39;) || Mage::registry(&amp;#39;sales_order&amp;#39;) || Mage::registry(&amp;#39;current_creditmemo&amp;#39;) || Mage::registry(&amp;#39;current_invoice&amp;#39;) || ($order-&amp;gt;getPayment()-&amp;gt;getMethod() == &amp;#39;sagepayrepeat&amp;#39;) || Mage::registry(&amp;#39;skipSagePay&amp;#39;)){&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Category Move Error Exception General error: 1205 &#43; solution</title>
      <link>http://example.com/magento/magento-category-move-error-exception-general-error-1205-solution.html</link>
      <pubDate>Fri, 05 Apr 2013 15:44:14 +0000</pubDate>
      
      <guid>http://example.com/magento/magento-category-move-error-exception-general-error-1205-solution.html</guid>
      <description>&lt;p&gt;There is a problem in Magento that when you try to move a category by dragging it in the admin, it can cause the above error, whilst causing the rest of the site to slow down.&lt;/p&gt;

&lt;p&gt;This is caused by the system trying to re-index every product within the space of a transaction.&lt;/p&gt;

&lt;p&gt;An easy way to get round this is to switch the indexing mode from auto to manual and then move the categories.&lt;/p&gt;

&lt;p&gt;You will still need to re-index the site, but this can be run on a cron when the site is quite.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Correct recursive backups in bash</title>
      <link>http://example.com/bash/correct-recursive-backups-in-bash.html</link>
      <pubDate>Wed, 20 Feb 2013 20:54:57 +0000</pubDate>
      
      <guid>http://example.com/bash/correct-recursive-backups-in-bash.html</guid>
      <description>&lt;p&gt;Sometime a backup script can go wrong, and rather the overwrite the old files you place a copy of the new ones into the same folder.&lt;/p&gt;

&lt;p&gt;This can then escalate and before you know it you have multiple levels of the same files.&lt;/p&gt;

&lt;p&gt;If you just want to flatten these files then this script can do that you&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;// The duplicated directory
&lt;span class=&#34;nv&#34;&gt;DUPLICATED_DIR_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;uploads&amp;#39;&lt;/span&gt;
// A new directory &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; the files to go into
&lt;span class=&#34;nv&#34;&gt;NEW_DIR_NAME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;realuploads&amp;#39;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; f in &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;find ./ &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;nv&#34;&gt;$DUPLICATED_DIR_NAME&lt;/span&gt;/&lt;span class=&#34;nv&#34;&gt;$DUPLICATED_DIR_NAME&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; 
&lt;span class=&#34;nv&#34;&gt;NEWFILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/$DUPLICATED_DIR_NAME\//\//g&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;nv&#34;&gt;NEWDIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;../&lt;span class=&#34;nv&#34;&gt;$NEW_DIR_NAME&lt;/span&gt;/&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;dirname &lt;span class=&#34;nv&#34;&gt;$NEWFILE&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; ! -d &lt;span class=&#34;nv&#34;&gt;$NEWDIR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
mkdir &lt;span class=&#34;nv&#34;&gt;$NEWDIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
cp -f &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; ../&lt;span class=&#34;nv&#34;&gt;$NEW_DIR_NAME&lt;/span&gt;/&lt;span class=&#34;nv&#34;&gt;$NEWFILE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento No Search Results</title>
      <link>http://example.com/magento/magento-no-search-results.html</link>
      <pubDate>Wed, 13 Feb 2013 16:46:00 +0000</pubDate>
      
      <guid>http://example.com/magento/magento-no-search-results.html</guid>
      <description>&lt;p&gt;Sometimes Magento will some times return no results with the message &amp;ldquo;Your search returns no results&amp;rdquo; for terms that you would expect it to return many results for.
This can happen for a number of reasons including misconfiguration of search or attributes.&lt;/p&gt;

&lt;p&gt;Unfortunately the way Magento speeds up search queries suffers from a race condition that can lead Magento to think it has cached a query when it has not and at the same time believes there are no products for that search because the cache for that query was dropped. This is a tough issue to solve but it can be done.&lt;/p&gt;

&lt;p&gt;The two methods that work effectively to resolve the race condition problem (thus far) are to first make sure that the query cache isn&amp;rsquo;t empty before using the cached results. This works effectively because if the cache is empty it must have been dropped recently and has not been repopulated.
The other thing you can do to help reduce this further is to make Magento remembers the time at which it dropped. Then have the query caches compare their last updated time against the the last cache drop time and if the update time is before or the same as the drop time don&amp;rsquo;t use the cache.
If this isn&amp;rsquo;t completely effective it is also possible to make it not use the query cache if the time of update and the time of drop are with in a minuet of each other to help reduce this further.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SQLSTATE[28000]: Invalid authorization specification: 1045 Access denied for user &#43; Solution</title>
      <link>http://example.com/mysql/sqlstate28000-invalid-authorization-specification-1045-access-denied-for-user-solution.html</link>
      <pubDate>Tue, 12 Feb 2013 18:03:29 +0000</pubDate>
      
      <guid>http://example.com/mysql/sqlstate28000-invalid-authorization-specification-1045-access-denied-for-user-solution.html</guid>
      <description>&lt;p&gt;I have recently been running some MySql scripts that wrote to a file.&lt;/p&gt;

&lt;p&gt;These worked fine locally, but as soon as I deployed them I started to get the error above.&lt;/p&gt;

&lt;p&gt;After much looking around I came across this solution.&lt;/p&gt;

&lt;p&gt;When I was developing locally, I was connecting with a user that had global privileges. When I was running the code on the server I was connecting with a user that only had privileges for the database I was using.&lt;/p&gt;

&lt;p&gt;The issue is that then FILE privilege is a Global setting, so the user did not have access to it, hence the access denied message.&lt;/p&gt;

&lt;p&gt;Grant FILE privileges and you can connect as expected&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHPStorm Regex Replace &#34;Malformed Replacement String&#34;</title>
      <link>http://example.com/phpstorm/phpstorm-regex-replace-malformed-replacement-string.html</link>
      <pubDate>Thu, 24 Jan 2013 17:39:08 +0000</pubDate>
      
      <guid>http://example.com/phpstorm/phpstorm-regex-replace-malformed-replacement-string.html</guid>
      <description>&lt;p&gt;If you are struggling using PHPStorm to find and replace code with Regex rules then this is your solution.&lt;/p&gt;

&lt;p&gt;The problem is that when using the $ sign in your replacement string it confuses it because PHP Storm uses the $ sign to represent sub pattern replacements.&lt;/p&gt;

&lt;p&gt;Take the following example code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$data = array();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$form=$page-&amp;gt;find(&amp;#39;form.edit_product&amp;#39;, 0);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//standard inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;text&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$input-&amp;gt;name]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//radio inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;radio&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$input-&amp;gt;name]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//checkbox inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;checkbox&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$input-&amp;gt;name]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//textareas&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$textareas = $form-&amp;gt;find(&amp;#39;textarea&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($textareas as $textarea){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$textarea-&amp;gt;name]=$textarea-&amp;gt;innertext;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And trying to replace the key being used in the data array with a processed one calling a method $this-&amp;gt;dataName($key) to generate the following code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$data = array();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$form=$page-&amp;gt;find(&amp;#39;form.edit_product&amp;#39;, 0);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//standard inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;text&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$this-&amp;gt;dataName($input-&amp;gt;name)]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//radio inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;radio&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$this-&amp;gt;dataName($input-&amp;gt;name)]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//checkbox inputs&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$inputs = $form-&amp;gt;find(&amp;#39;input[type=&amp;quot;checkbox&amp;quot;]&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($inputs as $input){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if($input-&amp;gt;checked){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $data[$this-&amp;gt;dataName($input-&amp;gt;name)]=$input-&amp;gt;value;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//textareas&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$textareas = $form-&amp;gt;find(&amp;#39;textarea&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach($textareas as $textarea){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $data[$this-&amp;gt;dataName($textarea-&amp;gt;name)]=$textarea-&amp;gt;innertext;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You might try the find pattern:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
\$data\[\$([^-]+)-&amp;gt;name\]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the replace pattern:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
\$data\[\$this-&amp;gt;dataName(\$$1-&amp;gt;name)\]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However this will give you the dreaded &lt;b&gt;&amp;ldquo;malformed replacement string&amp;rdquo;&lt;/b&gt; Error&lt;/p&gt;

&lt;p&gt;The solution is simply to triple escape your dollar signs, so the replacement pattern becomes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
\\\$data\[\\\$this-&amp;gt;dataName(\\\$$1-&amp;gt;name\)\]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And it works, woot!&lt;/p&gt;

&lt;p&gt;Also when it does work, PHP Storms replacement preview feature is really quite nice&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux Sun Java repo</title>
      <link>http://example.com/linux/linux-sun-java-repo.html</link>
      <pubDate>Tue, 15 Jan 2013 10:58:24 +0000</pubDate>
      
      <guid>http://example.com/linux/linux-sun-java-repo.html</guid>
      <description>&lt;p&gt;Recently I setup a machine with Linux Mint.&lt;/p&gt;

&lt;p&gt;One of the things that was I needed to install was an up to date version of Sun Java. However, for various reasons, this no longer appears in the official repos.&lt;/p&gt;

&lt;p&gt;Thankfully there is a different repo available here &lt;a href=&#34;http://www.duinsoft.nl/packages.php?t=en&#34; title=&#34;http://www.duinsoft.nl/packages.php?t=en&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.duinsoft.nl/packages.php?t=en&#34; target=&#34;_blank&#34;&gt;http://www.duinsoft.nl/packages.php?t=en&lt;/a&gt;&lt;/a&gt; where you can download the latest version and ensure that it is updated&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Form File Upload Limits with PHP</title>
      <link>http://example.com/php/form-file-upload-limits-with-php.html</link>
      <pubDate>Fri, 11 Jan 2013 16:49:24 +0000</pubDate>
      
      <guid>http://example.com/php/form-file-upload-limits-with-php.html</guid>
      <description>&lt;p&gt;If you have a form designed to handle file uploads which is failing due to file size then you might like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$arrayMaxes = array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;upload_max_filesize&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;upload_max_filesize&amp;#39;)),&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;post_max_size&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;post_max_size&amp;#39;)),&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;memory_limit&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;memory_limit&amp;#39;))&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$maxUploadSize = min($arrayMaxes);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach ($arrayMaxes as $key =&amp;gt; $value) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if ($value == min($arrayMaxes)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $minimumOfThree = $key;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        break;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;echo &amp;quot;The maximum file size you can upload is $maxUploadSize, this is due to the php.ini setting $mininimumOfThree&amp;quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will calculate the smallest value that will be allowed based upon php.ini settings.&lt;/p&gt;

&lt;p&gt;You can then incorporate this into your form logic and display so that users have a clear understanding of how large a file they can upload.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bash Redirection not Working in Shell Scripts &#43; Solution</title>
      <link>http://example.com/bash/bash-redirection-not-working-in-shell-scripts-solution.html</link>
      <pubDate>Wed, 09 Jan 2013 15:54:46 +0000</pubDate>
      
      <guid>http://example.com/bash/bash-redirection-not-working-in-shell-scripts-solution.html</guid>
      <description>&lt;p&gt;I recently needed to trigger a couple of bash scripts through a web browser.&lt;/p&gt;

&lt;p&gt;Unfortunately PHP shell_exec function grinds to a halt when it is used to trigger a long running / memory intensive script when it is used with Apache.&lt;/p&gt;

&lt;p&gt;To get round this I instead wrote the command to a file and then wanted to trigger it using cron.&lt;/p&gt;

&lt;p&gt;However, the commands that were being issues included a redirect and disown which were not being triggered in the following script&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; dirname &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;BASH_SOURCE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[0]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;COMMAND&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;cat &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/commandFile &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tail -n 1&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#Check the command&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;COMMAND&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Command is /path/to/file.sh arg1 &amp;gt; /path/to/outputFile &amp;amp; disown&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#Run the command&lt;/span&gt;
&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;TEST&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After having a play around I found that modifying the file to this will redirect the output and then disown the process&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; dirname &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;BASH_SOURCE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[0]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;COMMAND&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;cat &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/commandFile &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tail -n 1&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#Check the command&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;COMMAND&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Command is /path/to/file.sh arg1 &amp;gt; /path/to/outputFile &amp;amp; disown&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#Run the command - This line has been changed&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;TEST&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Uploading Multiple Files - Nothing in _POST, _FILES or _REQUEST &#43;Solution</title>
      <link>http://example.com/php/uploading-multiple-files-nothing-in-_post-_files-or-_request-solution.html</link>
      <pubDate>Mon, 17 Dec 2012 15:27:14 +0000</pubDate>
      
      <guid>http://example.com/php/uploading-multiple-files-nothing-in-_post-_files-or-_request-solution.html</guid>
      <description>&lt;p&gt;When you&amp;rsquo;re uploading multiple files (HTML5 feature - remember IE as yet STILL does not support this), it may not be the fact you&amp;rsquo;re uploading multiple files that&amp;rsquo;s actually causing the problem.&lt;/p&gt;

&lt;p&gt;The problem often is actually caused by the various php memory limits in play, one way to avoid getting caught by this is using the following snippet in the form&amp;rsquo;s php to remind you which restrictions are in play (note the min_by_key() function is from the php.net comments) :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;min_by_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arr&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;is_array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$min2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;min_by_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$min2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;is_array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;elseif&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;array_keys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;upload_max_filesize&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;intval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ini_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;upload_max_filesize&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;post_max_size&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;intval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ini_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;post_max_size&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;memory_limit&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;intval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;ini_get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;memory_limit&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$maxUploadSize&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;foreach&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$arrayMaxes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$minimumOfThree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;p&amp;gt;Max filesize &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$maxUploadSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;M Maximum filesize due to server setting &lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$minimumOfThree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;cp&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt; in php.ini&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Linux Mint 14 / Ubuntu 12.10 Slow Wifi with Ath9k Drivers &#43; Solution</title>
      <link>http://example.com/linux/linux-mint-14-ubuntu-12-10-slow-wifi-with-ath9k-drivers-solution.html</link>
      <pubDate>Wed, 12 Dec 2012 10:44:52 +0000</pubDate>
      
      <guid>http://example.com/linux/linux-mint-14-ubuntu-12-10-slow-wifi-with-ath9k-drivers-solution.html</guid>
      <description>&lt;p&gt;I upgrade my laptop to the latest release of Linux Mint 14 MATE edition. Everything is working beautifully apart from the wireless which, whilst functional, was cripplingly slow.&lt;/p&gt;

&lt;p&gt;After a load of searching and testing, the solution that worked for me was:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo -s

iwconfig wlan0 rate 54M

&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;options ath9k nohwcrypt=1&amp;quot;&lt;/span&gt; &amp;gt; /etc/modprobe.d/ath9k.conf

reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you copy and paste the above into a terminal it will force the wifi speed to 54M and will make sure hardware crypt is disabled and finally reboot your machine.&lt;/p&gt;

&lt;p&gt;I did this and my wifi speed is now perfectly fast, I&amp;rsquo;m a happy bunny :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Solution: Magento Catalog URL Rewrites Never Finishes (processing)</title>
      <link>http://example.com/magento/solution-magento-catalog-url-rewrites-never-finishes-processing.html</link>
      <pubDate>Wed, 05 Dec 2012 17:27:51 +0000</pubDate>
      
      <guid>http://example.com/magento/solution-magento-catalog-url-rewrites-never-finishes-processing.html</guid>
      <description>&lt;p&gt;In &lt;a title=&#34;Magento&#34; href=&#34;http://www.edmondscommerce.co.uk/platforms/Magento&#34;&gt;Magento&lt;/a&gt; 1.4.2 and possibly other versions, you can often find that the Catalog URL Rewrite process will sit at Processing forever.&lt;/p&gt;

&lt;p&gt;One of the problems that can cause this is if you have products in multiple categories and the solution is not pretty, but it works.&lt;/p&gt;

&lt;p&gt;Copy the file /app/code/core/Mage/Catalog/Model/Url.php to /app/code/local/Mage/Catalog/Model/Url.php (You never edit core files right?!) and around line 770 there is the following code block :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;        // generate id_path&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (&amp;#39;id&amp;#39; === $type) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if (!$product) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;category/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if ($category &amp;amp;&amp;amp; $category-&amp;gt;getLevel() &amp;gt; 1) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId() . &amp;#39;/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Changing this to the following seems to fix the problem :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;        // generate id_path&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (&amp;#39;id&amp;#39; === $type) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if (!$product) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;category/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if ($category &amp;amp;&amp;amp; (count(explode(&amp;#39;/&amp;#39;, $category-&amp;gt;getPath())) - 1) &amp;gt; 1) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId() . &amp;#39;/&amp;#39; . $category-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            return &amp;#39;product/&amp;#39; . $product-&amp;gt;getId();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Solution - Can&#39;t Log in to Magento Admin - No Error</title>
      <link>http://example.com/magento/solution-cant-log-in-to-magento-no-error.html</link>
      <pubDate>Tue, 04 Dec 2012 14:35:36 +0000</pubDate>
      
      <guid>http://example.com/magento/solution-cant-log-in-to-magento-no-error.html</guid>
      <description>&lt;p&gt;If you pull down a &lt;a title=&#34;Magento&#34; href=&#34;http://www.edmondscommerce.co.uk/platforms/Magento&#34;&gt;Magento&lt;/a&gt; site to a local machine, and change the database core_config table to point to the local machine, and it appears to work fine until you try to login to the site admin, there can be many issues.&lt;/p&gt;

&lt;p&gt;One of the most common ones though is not having a period (dot) in the host name - e.g. localhost/admin or martyn-desktop/admin - if you don&amp;rsquo;t have the period, the cookies don&amp;rsquo;t work properly and you end up in a login loop.&lt;/p&gt;

&lt;p&gt;To fix it, make sure your machine is accessible via a domain with a period - e.g. martyn-desktop.local - by either editing your hosts file (/etc/hosts) or check your router - it possibly already adds a domain name like .config and set your path in core_config to the same.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>