<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssh on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/ssh/</link>
    <description>Recent content in Ssh on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Oct 2013 10:33:41 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Vim Locking Up, Always When you are Ready to Save? Solution</title>
      <link>http://edmondscommerce.github.io/linux/vim-locking-up-always-when-you-are-ready-to-save-solution.html</link>
      <pubDate>Fri, 04 Oct 2013 10:33:41 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/vim-locking-up-always-when-you-are-ready-to-save-solution.html</guid>
      <description>&lt;p&gt;If you are constantly frustated by Vim freezing up on you are editing a file on a server then this is quite possibly your problem, and your solution.&lt;/p&gt;

&lt;p&gt;The issue is that most text editors and IDEs have [ctrl]+[s] mapped to save. If you do a lot of file editing then you probably bash the [ctrl]+[s] combo all the time, without even thinking about it&amp;hellip;&lt;/p&gt;

&lt;p&gt;Now back to Vim. As it is running in the terminal then it can be frozen by using the [ctrl]+[s] combination. You probably weren&amp;rsquo;t aware of that feature.&lt;/p&gt;

&lt;p&gt;To bring things back to life, just hit the [ctrl]+[q] combo. There are ways to permanently disable this which you can try.&lt;/p&gt;

&lt;p&gt;For full information on this, check out this great &lt;a href=&#34;http://unix.stackexchange.com/questions/12107/how-to-unfreeze-after-accidentally-pressing-ctrl-s-in-a-terminal&#34; target=&#34;_blank&#34;&gt;stack exchange page&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tab Complete for SSH and SCP</title>
      <link>http://edmondscommerce.github.io/magento/bash/tab-complete-for-ssh-and-scp.html</link>
      <pubDate>Fri, 26 Jul 2013 10:31:41 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/bash/tab-complete-for-ssh-and-scp.html</guid>
      <description>&lt;p&gt;If you are required to connect to different servers, then remembering and typing in all of the details can become tiresome.&lt;/p&gt;

&lt;p&gt;Thankfully there is simple solution to this, using the SSH config file.&lt;/p&gt;

&lt;p&gt;To make use of this, create the following file ~/.ssh/config&lt;/p&gt;

&lt;p&gt;In there add the following details&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Host easyToRememberName
    HostName 127.0.0.1
    Port 2020
    User ross
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will then can tab completion on ssh and scp commands. You can see more of the options that can be set in the file &lt;a href=&#34;http://linux.die.net/man/5/ssh_config&#34; title=&#34;ssh config man page&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rsync For Beginners</title>
      <link>http://edmondscommerce.github.io/linux/rsync-for-beginners-2.html</link>
      <pubDate>Mon, 05 Nov 2012 16:42:47 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/rsync-for-beginners-2.html</guid>
      <description>&lt;h3&gt;What is Rsync in general ?&lt;/h3&gt;

&lt;p&gt;Rsync works like the &lt;a href=&#34;http://linux.about.com/od/commands/l/blcmdl1_rcp.htm&#34; rel=&#34;nofollow&#34;&gt;rcp&lt;/a&gt; command in linux. It is used to copy files across machines. It uses efficient checksum algorithm that looks for modified files by time and size. It is used for two purposes:&lt;/p&gt;

&lt;h2&gt;Backup&lt;/h2&gt;
 

&lt;p&gt;Rsync is used to transfer file from the local to a remote machine. By default Rsync will use rsh, however you can instead use &lt;a href=&#34;http://linux.about.com/od/commands/l/blcmdl1_ssh.htm&#34; rel=&#34;nofollow&#34;&gt;ssh&lt;/a&gt; for high security. Compressed files are transferred to save file transfer time and reduce the load on the network. It helps to transfer bulk files in minutes.&lt;/p&gt;

&lt;h2&gt;Mirroring&lt;/h2&gt;

&lt;p&gt;Rsync can synchronize file between two servers location(i.e) local and remote. By using the checksum algorithm it updates local files only if it is updated in remote server.&lt;/p&gt;

&lt;p&gt;&lt;h3&gt;How to use Rsync&lt;/h3&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;rsync -avze ssh -p2020 root@server.com:/sitepath/files   /localdata&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This command transfer files from remote server to local machine.&lt;/p&gt;

&lt;p&gt;a  Archive. It is denotes all related files and documents.
v  Verbose.It will display status message as it is processing.
z  Compression.It achives better compression ratio.
e  It allows to chose alternative remote shell program for communication.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;rsync -avze ssh -p2020 --exclude home/var/cache root@server.com:/sitepath/files /localdata&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This command will transfer files from remote server to local machine by excluding cache folder.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;rsync -avz /sitepath/files root@server.com:/localdata &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This command will  transfer all file from local to remote server. It is uses default remote shell protocol.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSH Access, what is it all about in Simple Words?</title>
      <link>http://edmondscommerce.github.io/server/ssh-access-what-is-it-all-about-in-simple-words.html</link>
      <pubDate>Mon, 05 Nov 2012 16:29:37 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/server/ssh-access-what-is-it-all-about-in-simple-words.html</guid>
      <description>&lt;p&gt;&lt;h3&gt;What is an SSH access?&lt;/h3&gt;
SSH stands for Secure Socket Shell. SSH is a protocol, like HTTP, it gives us a way to gain a secure access to remote computers.&lt;/p&gt;

&lt;p&gt;The principle is to connect two networked computers via a secure encrypted channel within an insecure network environment such as the Internet.&lt;/p&gt;

&lt;p&gt;With SSH access we can easily move files around and run programs on your server. We can also transmit files to and from our own network onto your server, for example to take a copy of your site for local development or to push updated files onto your server.&lt;/p&gt;

&lt;p&gt;SSH needs a server application installing on your server (most web servers will have this by default) and an SSH client on your local machine to allow you to connect to your server.&lt;/p&gt;

&lt;p&gt;&lt;h3&gt;Where do you get your SSH access from?&lt;/h3&gt;
If you need SSH access details you should ask your hosting company, they should be able to install it for you if it is not already in place. If you are on shared hosting then the chances are that you will not be able to get SSH access details, if you need SSH access then you should consider upgrading your hosting to something that will support it.&lt;/p&gt;

&lt;p&gt;SSH access details will consist of at least:&lt;/p&gt;

&lt;p&gt;domain or IP address:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
domain.com

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
123.123.123.123

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;username:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
mywebserverlogin

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;password:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
ihy324579ySDWf

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;it may also include a port if SSH is not running on the standard port.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
2020

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;h3&gt;Why do we need the SSH access details?&lt;/h3&gt;
We will always ask our customers to provide us with SSH access details. This is for two main reasons:&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;1. Power and Speed&lt;/h4&gt;
SSH access allows us to run commands directly on the server, compress files, run scripts etc. For example we will generally run some static analysis scripts for our &lt;a href=&#34;http://edmondscommerce.github.io/platforms/magento&#34;&gt;Magento&lt;/a&gt; customers using a bash script that we can run with SSH access. This gives us some instant feedback on the state of your Magento installation and allows us to spot any potential problems.&lt;/p&gt;

&lt;p&gt;If we need to get a copy of your site files, using SSH we can prepare a compressed archive of your site files allowing us to download them much faster. Likewise we can easily get a reliable database dump, especially if you have a large database that might cause problems for browser based tools such as phpMyAdmin.&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;2. Security&lt;/h4&gt;
SSH is a much more secure protocol than something like FTP. In SSH everything is encrypted. It has been built from the ground up to be a very secure way of networking and inter communicating between servers on an insecure network such as the web.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux Bash Scripting: Force Screen if not Cron Task</title>
      <link>http://edmondscommerce.github.io/linux/linux-bash-scripting-force-screen-if-not-cron-task.html</link>
      <pubDate>Thu, 30 Aug 2012 09:27:16 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/linux-bash-scripting-force-screen-if-not-cron-task.html</guid>
      <description>&lt;p&gt;If you have a long running script that is designed to run as cron but may be run manually from the terminal then you may want to enforce screen so that the process can&amp;rsquo;t be aborted by the SSH terminal being closed for whatever reason.&lt;/p&gt;

&lt;p&gt;We already blogged about how to &lt;a href=&#34;http://www.edmondscommerce.co.uk/linux/force-a-bash-script-to-run-in-screen/&#34; title=&#34;Linux Force Screen&#34;&gt;force running as screen here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is an extension of this that also checks for running as Cron and if so, does not force screen.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# First off, ensure running from Cron and if not, Screen&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -t &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Not running as Cron Task&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -n &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$STY&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;We are inside screen, good&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Not in a screen, please run with screen&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Exiting&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; 1
    &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Running as Cron Task&amp;quot;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Simply paste this somewhere close to the top of your script before it does anything and this will work nicely.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wordpress Install/Update Plugins etc Locally via Admin</title>
      <link>http://edmondscommerce.github.io/wordpress/wordpress-installupdate-plugins-etc-locally-via-admin.html</link>
      <pubDate>Thu, 26 Jul 2012 15:42:00 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/wordpress/wordpress-installupdate-plugins-etc-locally-via-admin.html</guid>
      <description>&lt;p&gt;If you like the admin functionality to manage plugins, themes and other updates that wordpress features and would like to have this working when you are developing locally then you might find that you need to set up an FTP server locally just for this purpose.&lt;/p&gt;

&lt;p&gt;Perhaps a better solution, especially if you use a *nix based desktop such as Linux is to try this extension:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wordpress.org/extend/plugins/ssh-sftp-updater-support/&#34;&gt;http://wordpress.org/extend/plugins/ssh-sftp-updater-support/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will extend the FTP functionality to also use SFTP or SSH for the updates. If you are already running an SSH server on your desktop then there is very little left to do. If you are not then a quick&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
sudo apt-get install openssh-server

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And you are ready to go.&lt;/p&gt;

&lt;p&gt;From this point you can then use the admin functionality to manage plugins etc which is a nice slick way of doing things.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TIP: SSH add a tunnel to a running session</title>
      <link>http://edmondscommerce.github.io/bash/tip-ssh-add-a-tunnel-to-a-running-session.html</link>
      <pubDate>Wed, 28 Mar 2012 11:39:09 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/bash/tip-ssh-add-a-tunnel-to-a-running-session.html</guid>
      <description>&lt;p&gt;Useful tip - if you&amp;rsquo;ve ever been ssh&amp;rsquo;d into a remote machine and don&amp;rsquo;t want to break the connection or open a new session just to add a new tunnel, there is a way&lt;/p&gt;

&lt;p&gt;Press [return] then ~ then C to get to an ssh&amp;gt; prompt, then you can add tunnels as you would at the command line e.g.
&lt;code&gt;-L 80:localhost:8080&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then press [return] to return to the session you were running.  Cool trick.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Server Migration - Synch Cron Tab via SSH</title>
      <link>http://edmondscommerce.github.io/linux/server-migration-synch-cron-tab-via-ssh.html</link>
      <pubDate>Wed, 04 Jan 2012 17:54:14 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/server-migration-synch-cron-tab-via-ssh.html</guid>
      <description>&lt;p&gt;If you are handling a server migration and would like to have a scripted way to copy the crontab from one machine to the other then you might like this little snippet.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;

ssh -p2020 root@123.123.123.123 &#39;crontab -l&#39; | crontab -


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will get the contents of the root crontab from one server and apply it to the current server, replacing any current cron tab settings.&lt;/p&gt;

&lt;p&gt;This is nice if you want to have a repeatable server resynch process whilst you are migrating and the crontab on the old server may change&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Secure dropbox alternative</title>
      <link>http://edmondscommerce.github.io/ubuntu/secure-dropbox-alternative.html</link>
      <pubDate>Wed, 14 Dec 2011 16:39:03 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/ubuntu/secure-dropbox-alternative.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
So there is often a requirement for sharing files but what happens if those files are files that absolutely must be secure, like private ssh keys?&lt;/p&gt;

&lt;p&gt;Well Dropbox whilst a good product is third-party and not encrypted so if there&amp;rsquo;s an exploit, the contents of the files could well be exposed to people you don&amp;rsquo;t want.&lt;/p&gt;

&lt;p&gt;Enter Wuala, a service by Lacie.  Similar to Dropbox in many ways, but differing in that the files are encrypted locally, so if you loose your password, the files will be inaccessible, permanently.  Believe it or not, that&amp;rsquo;s a really good thing!&lt;/p&gt;

&lt;p&gt;Oh, and there&amp;rsquo;s a client for Linux, Mac, Windows and Mobile (Android and iPhone).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Custom Terminals for SSH in Gnome Ubuntu</title>
      <link>http://edmondscommerce.github.io/ubuntu/custom-terminals-for-ssh-in-gnome-ubuntu.html</link>
      <pubDate>Mon, 28 Feb 2011 18:07:52 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/ubuntu/custom-terminals-for-ssh-in-gnome-ubuntu.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you manage a few servers, you might often find yourself with a few terminal windows open and it can get tricky to remember which terminal window is which.&lt;/p&gt;

&lt;p&gt;To make this a lot easier you can create a custom terminal launcher for your panel and make it use a custom terminal colour scheme and profile and also make it automatically log into the server in question via SSH so it really is either that server or nothing (unless you exit but keep the terminal window open for some reason).&lt;/p&gt;

&lt;p&gt;For your production server for example you might do the following:&lt;/p&gt;

&lt;p&gt;Open up a terminal and create a new profile by selecting Edit-&amp;gt;Profiles then hit the ```new
 button and create a profile called &amp;ldquo;Production&amp;rdquo;. Customise it to suit.&lt;/p&gt;

&lt;p&gt;To create a new launcher, right click your panel and select &amp;ldquo;Add to Panel&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Then click &amp;ldquo;Custom Application Launcher&amp;rdquo;&lt;/p&gt;

&lt;p&gt;For the name, call it something obvious like &amp;ldquo;Production&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The command should be like this:&lt;/p&gt;

&lt;p&gt;[code]
gnome-terminal &amp;ndash;window-with-profile=Production &amp;ndash;command=&amp;ldquo;ssh username@server.com&amp;rdquo;&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;Now choose a nice icon by clicking the springy icon that is default and navigate around till you find one you like.&lt;/p&gt;

&lt;p&gt;Save the launcher and try clicking it, it should automatically use the special colour scheme you set and should also either log you straight into SSH (if you are using SSH Keys) or will give you the password prompt.&lt;/p&gt;

&lt;p&gt;Never be confused again!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS Very Slow SSH Password Prompt</title>
      <link>http://edmondscommerce.github.io/linux/centos-very-slow-ssh-password-prompt.html</link>
      <pubDate>Thu, 24 Feb 2011 17:49:11 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/centos-very-slow-ssh-password-prompt.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are finding it takes ages for a password prompt to come up when trying to connect to a CentOS server (and possibly others) this is a solution.&lt;/p&gt;

&lt;p&gt;The cause is that your IP address does not have the correct reverse DNS etc settings.&lt;/p&gt;

&lt;p&gt;You can of course try to fix all that but if you need a quick fix, you can edit the sshd configuration and disable&lt;/p&gt;

&lt;p&gt;GSSAPIAuthentication yes&lt;/p&gt;

&lt;p&gt;to: GSSAPIAuthentication no&lt;/p&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;p&gt;UseDNS yes&lt;/p&gt;

&lt;p&gt;to: UseDNS no&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Easy Filesharing in Linux (and Fast and Secure) using SSHFS</title>
      <link>http://edmondscommerce.github.io/linux/easy-filesharing-in-linux-and-fast-and-secure-using-sshfs.html</link>
      <pubDate>Wed, 05 Jan 2011 13:44:14 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/easy-filesharing-in-linux-and-fast-and-secure-using-sshfs.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are frustrated with Samba and would like something a bit more solid and speedier whilst being very easy to set up, check out SSHFS.&lt;/p&gt;

&lt;p&gt;To install it you simply need to do&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
sudo apt-get install sshfs

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once that&amp;rsquo;s done you can mount a remote filesystem in a very similar way to accessing a remote machine via SSH&lt;/p&gt;

&lt;p&gt;eg&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;

#Mount
sshfs  -p2020 -o idmap=user $USER@laptop.com:/home/joseph/Projects ~/Mounts/Laptop/Projects

#Unmount
fusermount -u ~/Mounts/Laptop/Projects


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You need to have previously created the local folder you are going to mount to (in this case /home/joseph/Mounts/Laptop/Projects)&lt;/p&gt;

&lt;p&gt;Note also I am using a non standard SSH port with the -p2020 bit (using port 2020). If you are using standard SSH ports you can remove this, or of course change the port number to whatever you prefer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://help.ubuntu.com/community/SSHFS&#34;&gt;&lt;a href=&#34;https://help.ubuntu.com/community/SSHFS&#34; target=&#34;_blank&#34;&gt;https://help.ubuntu.com/community/SSHFS&lt;/a&gt; for more info&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install phpMyAdmin using SSH</title>
      <link>http://edmondscommerce.github.io/php/install-phpmyadmin-using-ssh.html</link>
      <pubDate>Mon, 15 Nov 2010 14:07:43 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/php/install-phpmyadmin-using-ssh.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Heres a nice easy one, installing the latest phpMyAdmin directly using SSH&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;

wget &amp;quot;http://downloads.sourceforge.net/project/phpmyadmin/phpMyAdmin/3.3.8/phpMyAdmin-3.3.8-all-languages.tar.gz?r=http%3A%2F%2Fwww.phpmyadmin.net%2Fhome_page%2Fdownloads.php&amp;amp;ts=1289829566&amp;amp;use_mirror=heanet&amp;quot;

tar -xvf phpMyAdmin-3.3.8-all-languages.tar.gz 


&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>View HTML Files from the Command Line - Linux</title>
      <link>http://edmondscommerce.github.io/linux/view-html-files-from-the-command-line-linux.html</link>
      <pubDate>Thu, 12 Aug 2010 11:10:44 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/view-html-files-from-the-command-line-linux.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you ever want to have a quick look at a html file from the command line (eg when SSHing into a server) then you will love this little app.&lt;/p&gt;

&lt;p&gt;Called w3m, its a basic text based browser that will render your html into readable formatted text right on the command line.&lt;/p&gt;

&lt;p&gt;This is great for me as I often create log files in a HTML format, before this the only way to read them was to either have them web accessible or download them and view them locally in the browser.&lt;/p&gt;

&lt;p&gt;Now with this little app I can view them right in situ - dead handy.&lt;/p&gt;

&lt;p&gt;To install on Cent OS just&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
yum install w3m

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Command Line Fu</title>
      <link>http://edmondscommerce.github.io/linux/command-line-fu.html</link>
      <pubDate>Fri, 19 Mar 2010 15:31:07 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/command-line-fu.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Just discovered this site - some handy little command line snippets there&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.commandlinefu.com/commands/browse/sort-by-votes&#34;&gt;http://www.commandlinefu.com/commands/browse/sort-by-votes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;for example some &lt;a href=&#34;http://www.commandlinefu.com/commands/matching/scp/c2Nw/sort-by-votes&#34;&gt;SCP&lt;/a&gt; goodness.&lt;/p&gt;

&lt;p&gt;Definitely one I will be using again :)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>