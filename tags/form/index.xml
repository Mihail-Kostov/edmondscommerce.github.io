<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Form on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/form/</link>
    <description>Recent content in Form on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Mar 2013 17:54:16 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/form/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Release SagePay Form Orders via API</title>
      <link>https://edmondscommerce.github.io/sagepay/release-sagepay-form-orders-via-api.html</link>
      <pubDate>Tue, 19 Mar 2013 17:54:16 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/sagepay/release-sagepay-form-orders-via-api.html</guid>
      <description>&lt;p&gt;If you use SagePay Form integration then you might think that it is impossible to release orders created via this integration system via the API.&lt;/p&gt;

&lt;p&gt;Historically this was true however thanks to the new admin and reporting API you can now grab all of the details you need to perform the kind of admin side integration previously only possible via Server and Direct integrations.&lt;/p&gt;

&lt;p&gt;This does take a bit of work but if you like the fact that Form alleviates PCI compliance issues, allows your customers to use the nice easy to use Form interface and also gives you easy PayPal integration then this is a great solution.&lt;/p&gt;

&lt;p&gt;Thanks goes out to SagePay&amp;rsquo;s technical support who have proved really helpful in ironing out the kinks in getting this working.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Form File Upload Limits with PHP</title>
      <link>https://edmondscommerce.github.io/php/form-file-upload-limits-with-php.html</link>
      <pubDate>Fri, 11 Jan 2013 16:49:24 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/form-file-upload-limits-with-php.html</guid>
      <description>&lt;p&gt;If you have a form designed to handle file uploads which is failing due to file size then you might like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$arrayMaxes = array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;upload_max_filesize&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;upload_max_filesize&amp;#39;)),&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;post_max_size&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;post_max_size&amp;#39;)),&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;memory_limit&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;memory_limit&amp;#39;))&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$maxUploadSize = min($arrayMaxes);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach ($arrayMaxes as $key =&amp;gt; $value) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if ($value == min($arrayMaxes)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $minimumOfThree = $key;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        break;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;echo &amp;quot;The maximum file size you can upload is $maxUploadSize, this is due to the php.ini setting $mininimumOfThree&amp;quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will calculate the smallest value that will be allowed based upon php.ini settings.&lt;/p&gt;

&lt;p&gt;You can then incorporate this into your form logic and display so that users have a clear understanding of how large a file they can upload.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Chrome Auto Populate Form Fields - Form Fuzzer</title>
      <link>https://edmondscommerce.github.io/chrome/chrome-auto-populate-form-fields-form-fuzzer.html</link>
      <pubDate>Thu, 13 Sep 2012 10:42:59 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/chrome/chrome-auto-populate-form-fields-form-fuzzer.html</guid>
      <description>&lt;p&gt;If you ever used Webmaster Tools in Firefox but have now switched to using Chrom(e|ium) instead then you probably miss the form filler - especially if you ever need to test checkouts or other form intensive web site user stories.&lt;/p&gt;

&lt;p&gt;A nice little extension that I just discovered takes care of this, &lt;a href=&#34;https://chrome.google.com/webstore/detail/cbpplldpcdcfejdaldmnfhlodoadjhii&#34; target=&#34;_blank&#34;&gt;Chrome Form Fuzzer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can configure it for simple form filling or with a little creative configuration it could easily be used for security testing and more in depth testing to ensure that input is being sanitised and filtered properly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blind Express Free Sample Request</title>
      <link>https://edmondscommerce.github.io/portfolio/blind-express-free-sample-request.html</link>
      <pubDate>Thu, 09 Jun 2011 14:58:56 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/portfolio/blind-express-free-sample-request.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Magento Free Sample Request Custom Module&lt;/h2&gt;&lt;/p&gt;

&lt;p&gt;Blind Express required that their customers be able to easily request free samples of their products. This required that a custom extension be created and integrated with the existing system.&lt;/p&gt;

&lt;h3&gt;Blind Express&lt;/h3&gt;

&lt;p&gt;Blind Express specialise in supplying made to measure and custom window &lt;a href=&#34;http://www.blindexpress.co.uk&#34;&gt;blinds&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://edmondscommerce.github.io/images/blindexpress-300x206.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This project was a good challenge as the extension had to be integrated with previously existing custom product configuration.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Drupal 6 File Uploads</title>
      <link>https://edmondscommerce.github.io/drupal/drupal-6-file-uploads.html</link>
      <pubDate>Fri, 10 Jul 2009 12:16:09 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/drupal/drupal-6-file-uploads.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
It&amp;rsquo;s always tempting when  you are new to a framework or system to just roll your own functionality if the built in functionality is not obvious. I was nearly at that stage with Drupal 6 file uploads. Thankfully before I gave in I found this useful blog post which clearly states how Drupal&amp;rsquo;s built in file upload functionality works. Sweet :-)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.computerminds.co.uk/file-uploads-drupal-6-part-1&#34; rel=&#34;nofollow&#34;&gt;&lt;a href=&#34;http://www.computerminds.co.uk/file-uploads-drupal-6-part-1&#34; target=&#34;_blank&#34;&gt;http://www.computerminds.co.uk/file-uploads-drupal-6-part-1&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zend Dojo Form Input Size &#43; Solution</title>
      <link>https://edmondscommerce.github.io/zend-framework/zend-dojo-form-input-size-solution.html</link>
      <pubDate>Tue, 09 Jun 2009 08:06:03 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/zend-framework/zend-dojo-form-input-size-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;b&gt;Problem:&lt;/b&gt;
You are dutifully setting your size attribute in your Zend Form class and you input elements are being rendered with that size attribute. However if Javascript is enabled and you are using Dojo for your forms, the size attribute gets dropped.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Solution:&lt;/b&gt;
To set the width on dojo form elements you must use the width css operator. eg&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$form-&amp;gt;getElement(&amp;#39;blah&amp;#39;)-&amp;gt;setAttrib(&amp;#39;style&amp;#39;=&amp;gt;&amp;#39;width: 50em;&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So simple once you know how!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>