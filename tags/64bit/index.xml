<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>64bit on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/64bit/</link>
    <description>Recent content in 64bit on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Jul 2011 17:40:14 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/64bit/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ubuntu &#34;No such file or directory&#34; When it does exist &#43; Solution</title>
      <link>http://edmondscommerce.github.io/ubuntu/ubuntu-no-such-file-or-directory-when-it-does-exist-solution.html</link>
      <pubDate>Mon, 11 Jul 2011 17:40:14 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/ubuntu/ubuntu-no-such-file-or-directory-when-it-does-exist-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are tearing your hair out trying to figure out why trying to run something is complaining that it doesn&amp;rsquo;t exist when it clearly does, this is quite possibly your solution.&lt;/p&gt;

&lt;p&gt;The problem is most likely that you are trying to run a 32bit package on a 64bit system.&lt;/p&gt;

&lt;p&gt;The solution is easy enough, you need to set up your system to run 32bit packages.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
apt-get install libc6-i386 lib32gcc1 lib32z1 lib32stdc++6 ia32-libs

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Setting up a 64bit Linux PHP Development Enviroment</title>
      <link>http://edmondscommerce.github.io/php/setting-up-a-64bit-linux-php-development-enviroment.html</link>
      <pubDate>Fri, 03 Apr 2009 08:42:39 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/php/setting-up-a-64bit-linux-php-development-enviroment.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
This is a guide to setting up a PHP web development environment on a 64 bit Linux. I have used this on Ubuntu Intrepid 64bit and also Open Suse 11.1 64bit.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Install XAMPP&lt;/b&gt;
To get the ball rolling nice and quickly I have installed XAMPP for Linux which is available &lt;a href=&#34;http://www.apachefriends.org/en/xampp-linux.html&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;. Then the first thing to do once XAMPP is running is to run the security wizard to set passwords etc.&lt;/p&gt;

&lt;p&gt;It is possible to download all the LAMP components using your particular Linux package manager, however I like XAMPP because it is the same no matter which flavour of Linux you install it on, its set up to be a development environment rather than a production server and is generally nice and easy to use. It comes bundled with phpMyAdmin as well and requires no configuration to get up and running.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;XAMPP Control Panel&lt;/b&gt;
A nice easy way to start, stop and restart all or some of the LAMPP services is to set up the control panel. XAMPP comes bundled with a python control panel, however you will need to manually create a shortcut to load the control panel.&lt;/p&gt;

&lt;p&gt;Create an application launcher with the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gksudo python /opt/lampp/share/xampp-control-panel/xampp-control-panel.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;b&gt;Xdebug&lt;/b&gt;
I want to get xdebug working so I have been following some instructions I found &lt;a href=&#34;http://www.sanisoft.com/blog/2007/06/23/how-to-install-xdebug-php-extension-for-xampp-on-linux/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to get these instructions to work, I had to first install autoconf. I used Syntaptic Package Manager (System-&amp;gt;Administration-&amp;gt;Syntaptic Package Manager) and then searched for autoconf.&lt;/p&gt;

&lt;p&gt;Then it turns out that as I am running 64bit, the xdebug.so I have just made won&amp;rsquo;t work. Thankfully it turns out its possible to download a precompiled 32bit xdebug.so file from &lt;a href=&#34;http://aspn.activestate.com/ASPN/Downloads/Komodo/RemoteDebugging&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can download this file and whack it into your /opt/lampp/lib/php/extensions folder.  (Note for Open Suse I have installed &lt;a href=&#34;http://www.kde-apps.org/content/show.php/Simple+Root+Actions+Menu?content=72762&#34; rel=&#34;nofollow&#34;&gt;this root menu extension&lt;/a&gt; which helps in editing or moving things around as root without having to open the terminal.)&lt;/p&gt;

&lt;p&gt;Next you need to add the following line to the bottom of your php.ini file (located in /opt/lampp/etc/php.ini):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
zend_extension=/opt/lampp/lib/php/extensions/xdebug.so
xdebug.remote_enable=On
xdebug.remote_host=&amp;quot;localhost&amp;quot;
xdebug.remote_port=9000
xdebug.remote_handler=&amp;quot;dbgp&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then to check if its all working, go to &lt;a href=&#34;http://localhost/xampp/phpinfo.php&#34; target=&#34;_blank&#34;&gt;http://localhost/xampp/phpinfo.php&lt;/a&gt; and you should see a message like &amp;ldquo;with Xdebug v2.1.0-dev, Copyright &amp;copy; 2002-2008, by Derick Rethans&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Eclipse&lt;/b&gt;
Found some excellent tutorials on setting up Eclipse &lt;a href=&#34;http://www.64bitjungle.com/ubuntu/full-64-bit-or-32-bit-web-development-and-php-mysql-ide-with-eclipse-34-ganymede-and-pdt-2/&#34; rel=&#34;nofollow&#34;&gt;here&lt;/a&gt;, including instructions on getting the JRE working properly and also linking it up to Xdebug. The tutorial isn&amp;rsquo;t based on an XAMPP setup though but should be easy enough to apply to my situation.&lt;/p&gt;

&lt;p&gt;Another tutorial that is useful is &lt;a href=&#34;http://malibugarage.blogspot.com/2007/07/local-workstation-xamppeclipse.html&#34; rel=&#34;nofollow&#34;&gt;this one&lt;/a&gt; and also &lt;a href=&#34;http://2tbsp.com/node/40&#34; rel=&#34;nofollow&#34;&gt;this one&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once Eclipse is installed you will need to tweak the settings so that it can find the correct PHP executable and is set to use the xdebug extension for debugging.&lt;/p&gt;

&lt;p&gt;Eclipse creates a folder called a workspace, which is where all the project files are stored. Its handy to make the workspace accessible to Apache and the easiest way to do this is to create a symbolic link from the htdocs folder in you lampp directory to the home/user/workspace folder.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>