<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Solr on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/solr/</link>
    <description>Recent content in Solr on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Jun 2014 10:09:16 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/solr/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Fast E-Commerce Search Solution</title>
      <link>http://edmondscommerce.github.io/ecommerce/fast-e-commerce-search-solution.html</link>
      <pubDate>Thu, 12 Jun 2014 10:09:16 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/ecommerce/fast-e-commerce-search-solution.html</guid>
      <description>&lt;p&gt;One of the trickiest parts of any e-commerce store to get running quickly is the search results. The problem is compounded for large or complex stores where a database query based search for a multi word search phrase can become a real behemoth of a database query that has to search for each word in a multitude of database tables and columns. Then throw in other issues such as table locking and the performance issues can start to hurt the site as a whole.&lt;/p&gt;

&lt;p&gt;###Caching for Performance&lt;/p&gt;

&lt;p&gt;One common solution to scaling up e-commerce stores is to use a variety of methods and levels of caching, from a database query cache right up to a full page caching system perhaps powered by Varnish. This solution works well for product and category pages for which there is a finite number. When it comes to search results pages though, each possible search phrase is a completely separate set of pages. You might be able to keep a warm cache for your most popular search phrases but anything else will be raw results. It will show your server at its worst performance.&lt;/p&gt;

&lt;p&gt;###Alternative Enterprise Search Engine
In this scenario it is time to start looking at other search solutions. If you want a turnkey professional solution then check out Google Commerce Search. This premium offering gives you a powerful search engine that is entirely outsourced and uses Google technology to deliver great quality results. As you can probably imagine though, this premium product comes with a premium and enduringly high subscription fee.&lt;/p&gt;

&lt;p&gt;###Enterprise Open Source
Instead what we are now recommending to our larger clients is to look at implementing the Solr search engine. Apache Solr is an enterprise level search engine. It is used in a wide variety of impressive sites â€“ you can see a list here. Names like Netflix, The Guardian and eBay really underline the fact that this is serious and powerful technology.&lt;/p&gt;

&lt;p&gt;###Advanced Search Functionality
The great thing is that it is also pretty easy to set up and get running. To get a basic search engine working is no more than a few hours of work. There are many possibilities with the search engine including spelling suggestions, parametric (faceted in Solr speak) search, synoyms, auto suggest and loads more. Depending on exactly how you want this to work will determine exactly how much work is involved.&lt;/p&gt;

&lt;p&gt;Solr provides a huge amount of configurability and tuning. For this reason we would always expect a new install of Solr to be followed up with a bit of tweaking to make sure you are getting the right results. Once the right configuration has been determined we can then expect the engine to work tirelessly, serving up lightning fast and excellent quality results without any further investment from your business.&lt;/p&gt;

&lt;p&gt;##Implement Solr Search Today
If you would like your site to be fitted out with a Solr based search system by a professional UK based e-commerce web development agency then get in touch with &lt;a href=&#34;http://www.edmondscommerce.co.uk/contact&#34; target=&#34;_blank&#34;&gt;Edmonds Commerce&lt;/a&gt; today.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento 1.9 &amp;amp; 1.14 released</title>
      <link>http://edmondscommerce.github.io/magento/magento-1-dot-9-and-1-dot-14-released.html</link>
      <pubDate>Wed, 14 May 2014 11:12:02 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/magento-1-dot-9-and-1-dot-14-released.html</guid>
      <description>&lt;p&gt;Magento has released the latest version of both CE and EE.&lt;/p&gt;

&lt;p&gt;The big changes that are included are as follows&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Responsive design included as default&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Both editions now come with a responsive theme. This introduces jQuery, SASS, and Compass into native Magento and should allow for easier customisation in the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bill Me Later&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The PayPal integration has been upgraded to include the &lt;a href=&#34;https://www.paypal.com/webapps/mpp/promotional-financing&#34; target=&#34;_blank&#34;&gt;Bill Me Later&lt;/a&gt; financing option. This allows customer to pay for products over six months whilst the merchant gets paid straight away.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other security fix and performance fixes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The full list of changes can be seen &lt;a href=&#34;http://www.magentocommerce.com/knowledge-base/entry/new-features-ce19-ee114&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apache Mod Rewrite and Escaped Hashes (and other characters)</title>
      <link>http://edmondscommerce.github.io/apache/apache-mod-rewrite-and-escaped-hashes-and-other-characters.html</link>
      <pubDate>Mon, 22 Apr 2013 13:57:49 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/apache/apache-mod-rewrite-and-escaped-hashes-and-other-characters.html</guid>
      <description>&lt;p&gt;If you are having issues with mod rewrite apparently abandoning sections of variables after encoded hashes then this could be your solution.&lt;/p&gt;

&lt;p&gt;The use case is particularly clear when using mod_rewrite in front of a search engine (such as Solr which I am really enjoying working with at the moment).&lt;/p&gt;

&lt;p&gt;Imagine someone search for a partcode ABC#123&lt;/p&gt;

&lt;p&gt;This gets encoded to search/abc%23123&lt;/p&gt;

&lt;p&gt;Your rewritten search term will then be mangled by Apache and your search script will only actually see ABC. That is of course a problem and the solution is not really clear.&lt;/p&gt;

&lt;p&gt;After a bit of searching around I found the solution is to add a B flag to your mod_rewrite rule so that mod_rewrite will escape these characters so that they are cleanly passed through.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;RewriteRule ^(.*)search/(.*)$ advanced_search_result.php?keywords=$2 [L,B]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Enterprise 1.8 Features Solr</title>
      <link>http://edmondscommerce.github.io/magento/magento-enterprise-1-8-features-solr.html</link>
      <pubDate>Wed, 14 Apr 2010 14:00:11 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/magento-enterprise-1-8-features-solr.html</guid>
      <description>&lt;p&gt;Very interesting to read about the latest Magento Enterprise version release. Among other things, they have implemented &lt;a href=&#34;http://lucene.apache.org/solr/&#34;&gt;Solr&lt;/a&gt; for searching. Solr is what can only be called a &amp;ldquo;proper search engine&amp;rdquo; and is the alternative to searching a database which is the usual way the Magento search works.&lt;/p&gt;

&lt;p&gt;By using a proper search engine, the site will be able to display better, more relevant results a lot faster than is possible with the database driven method. The main downside is that its complex to set up.&lt;/p&gt;

&lt;p&gt;It will be interesting to see if a paid or community extension becomes available to provide Solr to community edition users.&lt;/p&gt;

&lt;p&gt;There is a Google Code project, but it seems to be dead in the water:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://code.google.com/p/magento-solr/&#34; target=&#34;_blank&#34;&gt;http://code.google.com/p/magento-solr/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>