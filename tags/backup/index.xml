<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Backup on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/backup/</link>
    <description>Recent content in Backup on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Sep 2012 13:25:55 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/backup/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Simple Linux Backup with Backup2L</title>
      <link>https://edmondscommerce.github.io/linux/simple-linux-backup-with-backup2l.html</link>
      <pubDate>Tue, 04 Sep 2012 13:25:55 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/simple-linux-backup-with-backup2l.html</guid>
      <description>&lt;p&gt;If you have incremental backup requirements but would rather avoid something heavy and perhaps over featured and complex such as &lt;a href=&#34;http://www.bacula.org/en/&#34; target=&#34;_blank&#34;&gt;Bacula&lt;/a&gt; then &lt;a href=&#34;http://backup2l.sourceforge.net/&#34; target=&#34;_blank&#34;&gt;Backup2L&lt;/a&gt; could be just the thing.&lt;/p&gt;

&lt;p&gt;Written in BASH, it comprises only a small number of files that you can read directly to see how it works.&lt;/p&gt;

&lt;p&gt;There is a configuration file that is installed to /etc/backup2l which you will need to edit a little and then after that its just a case of running&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;backup2l -b 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to initiate your backups.&lt;/p&gt;

&lt;p&gt;If you need to restore something the process is just&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;backup2l --restore &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;file_grep&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where the file grep is a pattern to find the files you need.&lt;/p&gt;

&lt;p&gt;It is actually very simple to set up, just hit the man page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>safe-rm - saves you from rm -rf /*</title>
      <link>https://edmondscommerce.github.io/linux/safe-rm-saves-you-from-rm-rf.html</link>
      <pubDate>Thu, 09 Aug 2012 15:59:14 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/safe-rm-saves-you-from-rm-rf.html</guid>
      <description>&lt;p&gt;Okay, so it&amp;rsquo;s a sysadmin&amp;rsquo;s nightmare that you might when tired miss out a dot from an rm -rf ./* and whilst you shouldn&amp;rsquo;t run as root, there are times when permissions problems push you into it.&lt;/p&gt;

&lt;p&gt;This little gem allows you to blacklist folders from rm (such as /etc /bin and other system directories, along with any custom ones you might want to protect).&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s in debian/ubuntu repositories so apt-get install safe-rm is quite useful, but it seems to be nowhere to be found for CentOS/RHEL, so we packaged it up (one of our employees used to be a package maintainer for a linux distro) for CentOS servers.&lt;/p&gt;

&lt;p&gt;The original url for safe-rm is &lt;a href=&#34;https://launchpad.net/safe-rm&#34; title=&#34;https://launchpad.net/safe-rm&#34;&gt;https://launchpad.net/safe-rm&lt;/a&gt; and our rpm is available &lt;a href=&#34;http://www.edmondscommerce.co.uk/stuff/safe-rm-0.8-1.x86_64.rpm&#34; title=&#34;here&#34;&gt;here&lt;/a&gt; - Feel free to mirror this elsewhere.&lt;/p&gt;

&lt;p&gt;Next up: &lt;a href=&#34;http://www.edmondscommerce.co.uk/linux/creating-rpms/&#34; title=&#34;how we created the rpm&#34;&gt;how we created the rpm&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How To Extract Files from Plesk Backups</title>
      <link>https://edmondscommerce.github.io/plesk/how-to-extract-files-from-plesk-backups.html</link>
      <pubDate>Mon, 30 Jan 2012 17:25:16 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/plesk/how-to-extract-files-from-plesk-backups.html</guid>
      <description>&lt;p&gt;So you have a plesk backup file and you want to extract and open the files from it? No problem. This blog will show you how.&lt;/p&gt;

&lt;p&gt;The file is a mime file. The &amp;ldquo;mpack&amp;rdquo; package will let you unpack it.&lt;/p&gt;

&lt;p&gt;First we install the &amp;ldquo;mpack&amp;rdquo; package&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install mpack
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s imagine your file is called &amp;ldquo;pleskDump.gz&amp;rdquo;. If it doesn&amp;rsquo;t have a &amp;ldquo;.gz&amp;rdquo; at the end it might not be bad to add it as some environments will complain if it&amp;rsquo;s absent.&lt;/p&gt;

&lt;p&gt;Next we unzip the file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gunzip pleskDump.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let&amp;rsquo;s un-mime the file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir pleskDumpOutput
cd pleskDumpOutput
cat ../pleskDump | munpack
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we have a bunch of regular tar files, but be careful, if we just extract them, the root folders will not be recreated. In order to keep things together, it&amp;rsquo;s best now to look at the output you have. Let&amp;rsquo;s take a made up example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;example-domain.com.httpdocs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that the format is essentially domain.rootfolder or in another way, the tar files have your domain name they are archiving, then a dot, then the name of the root folder they made up. We take that root folder and create it like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir rootfolder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let&amp;rsquo;s apply that idea to our previoud example; &amp;ldquo;example-domain.com&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir httpdocs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s time to untar into the folder you just created, let&amp;rsquo;s assume you just created &amp;ldquo;httpdocs&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar -xvf example-domain.com.httpdocs -C httpdocs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There you go! You can now output any of the folders you wanted.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento cPanel Backup Issue - Not Backing up the Core Folder &#43; Solution</title>
      <link>https://edmondscommerce.github.io/magento/magento-cpanel-backup-issue-not-backing-up-the-core-folder-solution.html</link>
      <pubDate>Mon, 15 Nov 2010 13:06:28 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-cpanel-backup-issue-not-backing-up-the-core-folder-solution.html</guid>
      <description>&lt;p&gt;If you are hosting a Magento site on cPanel powered hosting and are relying on the cPanel backup system to manage backing up your files then you need to be aware of this issue.&lt;/p&gt;

&lt;p&gt;After a recent upgrade, cPanel has started to ignore any code inside a core/ directory when doing backups.&lt;/p&gt;

&lt;p&gt;Of course this means that your app/code/core folder will not be backed up - of course this is the most crucial folder in your Magento installation.&lt;/p&gt;

&lt;p&gt;Hopefully you are not editing core files anyway, so ultimately you shoudl be able to redownload your Magento version and extract the app/code/core folder from there, but even so, this is an extra step that you might need to take which will slow down your recovery in case of a disaster.&lt;/p&gt;

&lt;p&gt;See this Magento forum thread for more details:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.magentocommerce.com/boards/viewthread/210785/&#34; target=&#34;_blank&#34;&gt;http://www.magentocommerce.com/boards/viewthread/210785/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Backup Error Filesystem.php on line 234 &#43; Solution</title>
      <link>https://edmondscommerce.github.io/magento/magento-backup-error-filesystem-php-on-line-234-solution.html</link>
      <pubDate>Wed, 02 Dec 2009 14:33:46 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-backup-error-filesystem-php-on-line-234-solution.html</guid>
      <description>&lt;p&gt;If you see this error message when trying to access the backups section of Magento Admin:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Warning: Invalid argument supplied for foreach() in /home/*****/public_html/lib/Varien/Data/Collection/Filesystem.php on line 234&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Then this simple fix is for you:&lt;/p&gt;

&lt;p&gt;replace (line 24):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;foreach (glob($folder . DIRECTORY_SEPARATOR . ‘*’) as $node) {&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;with this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;foreach ((array)glob($folder . DIRECTORY_SEPARATOR . ‘*’) as $node) {&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I saw this &lt;a href=&#34;http://www.simplehelix.com/blog/2009/07/magento-backup-error/&#34;&gt;here&lt;/a&gt;, so all credit to them.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>