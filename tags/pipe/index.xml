<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pipe on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/pipe/</link>
    <description>Recent content in Pipe on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Mar 2014 14:58:14 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/pipe/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using Pipe Viewer for an Easy CLI Progress Bar</title>
      <link>http://edmondscommerce.github.io/linux/using-pipe-viewer-for-an-easy-cli-progress-bar.html</link>
      <pubDate>Mon, 17 Mar 2014 14:58:14 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/using-pipe-viewer-for-an-easy-cli-progress-bar.html</guid>
      <description>&lt;p&gt;If you have a large database file to import or any other longer running process that involves piping data from one place to another then this little utility should definitely be in your arsenal.&lt;/p&gt;

&lt;p&gt;Simply enough you use this to give you a progress indication when you are piping large amounts of data.&lt;/p&gt;

&lt;p&gt;To use this on a mysql import (which is where I am most likely to use this) you would do the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;pv ./dumpfile.sql &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; mysql -u&lt;span class=&#34;nv&#34;&gt;$USER&lt;/span&gt; -p&lt;span class=&#34;nv&#34;&gt;$PASS&lt;/span&gt; dbname
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will then give you a simple progress bar and very usefully, an ETA that indicates how much time is left For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; 308MB 0:07:57 [ 216kB/s] [===============&amp;gt;                                          ] 10% ETA 1:08:32
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To install the utility you should first of all just try &lt;code&gt;yum install pv&lt;/code&gt;. If that doesn&amp;rsquo;t work then you can read more about installing for your distribution here:
&lt;a href=&#34;http://www.ivarch.com/programs/pv.shtml&#34; target=&#34;_blank&#34;&gt;http://www.ivarch.com/programs/pv.shtml&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Server Migration - Pipe Tar from Server to Server using Netcat</title>
      <link>http://edmondscommerce.github.io/linux/server-migration-pipe-tar-from-server-to-server-using-netcat.html</link>
      <pubDate>Fri, 06 Jan 2012 14:17:46 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/server-migration-pipe-tar-from-server-to-server-using-netcat.html</guid>
      <description>&lt;p&gt;If you need to transfer a large amount of data from one server to another you might normally create a large tar archive, send it across and then untar it on the other end.&lt;/p&gt;

&lt;p&gt;However a slightly slicker and easier repeated way of doing this is to pipe tar directly from one server to the other doing all three steps in one go.&lt;/p&gt;

&lt;p&gt;For this you would create a script on each server. You could of course type the commands directly but in the interests of easy repeatability and removing the scope for human error, scripts are my preferred way of doing this kind of task.&lt;/p&gt;

&lt;p&gt;Old server script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
#!/bin/bash

cd /var/www/vhosts

# where new server IP is 123.123.123.123 and 9999 is the port the new server is listening on
tar -xvj . | nc 123.123.123.123 9999


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;New Server Script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
#!/bin/bash

cd /var/www/vhosts

nc -l 9999 | tar -xvf --same-owner


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now save these scripts and make them executable (chmod +x)&lt;/p&gt;

&lt;p&gt;Now run the new server script on the new server and then run the old server script. You should quickly see the list of files being transferred appearing in both terminals.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s it.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>