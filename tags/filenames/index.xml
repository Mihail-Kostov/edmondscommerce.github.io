<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Filenames on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/filenames/</link>
    <description>Recent content in Filenames on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Nov 2012 16:16:58 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/filenames/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tip: Remove spaces from filenames one-liner</title>
      <link>http://edmondscommerce.github.io/bash/tip-remove-spaces-from-filenames-one-liner.html</link>
      <pubDate>Mon, 26 Nov 2012 16:16:58 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/bash/tip-remove-spaces-from-filenames-one-liner.html</guid>
      <description>&lt;p&gt;There is often the case when you need to remove spaces from filenames - for instance when importing broken data feeds into &lt;a title=&#34;Magento&#34; href=&#34;http://www.edmondscommerce.co.uk/platforms/magento&#34;&gt;Magento&lt;/a&gt; or &lt;a title=&#34;osCommerce&#34; href=&#34;http://www.edmondscommerce.co.uk/platforms/osCommerce&#34;&gt;osCommerce&lt;/a&gt; systems.&lt;/p&gt;

&lt;p&gt;The following strips spaces and replaces them with nothing :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;find directoryname -name &lt;span class=&#34;s1&#34;&gt;&amp;#39;* *&amp;#39;&lt;/span&gt; -type f &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; f&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; mv &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed s/&lt;span class=&#34;s2&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;/&lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;/g&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or alternatively replace them with underscores :-&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;find directoryname -name &lt;span class=&#34;s1&#34;&gt;&amp;#39;* *&amp;#39;&lt;/span&gt; -type f &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; f&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; mv &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed s/&lt;span class=&#34;s2&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;/&lt;span class=&#34;s2&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;/g&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or any other character/string combo you like, you can even be more clever moving them out into subdirectories with more sed magic but you get the idea.  The reason the read command is there is to get the spaces in found filenames which if you simply use a &amp;ldquo;for&amp;rdquo; loop, bash splits on the spaces.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>