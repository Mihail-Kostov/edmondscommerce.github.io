<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cpanel on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/cpanel/</link>
    <description>Recent content in Cpanel on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Feb 2014 18:03:36 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/cpanel/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>cPanel Download Site Files and Database</title>
      <link>https://edmondscommerce.github.io/cpanel/cpanel-download-site-files-and-database.html</link>
      <pubDate>Mon, 10 Feb 2014 18:03:36 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/cpanel/cpanel-download-site-files-and-database.html</guid>
      <description>

&lt;p&gt;Often a client won&amp;rsquo;t have access to SSH, or won&amp;rsquo;t be able to provide you with some of the more specifics such as FTP, PHPMyAdmin etc. All they know to give you is access to their cPanel. Through this there&amp;rsquo;s various tools at your disposal.&lt;/p&gt;

&lt;h2 id=&#34;try-ssh&#34;&gt;Try SSH&lt;/h2&gt;

&lt;p&gt;Your cPanel login is actually a Linux user login, which cPanel&amp;rsquo;s FTP hooks into. The first step is to navigate in your cPanel to FTP Accounts and click Configure FTP client on a user. These are SFTP details and can very often provide you with SSH shell access, unless the host has disabled this.&lt;/p&gt;

&lt;p&gt;Simply try &lt;code&gt;ssh user@host -p 1234&lt;/code&gt;, where the user, host and password are your cPanel login, and the port displayed on the FTP Accounts page.&lt;/p&gt;

&lt;p&gt;From here you&amp;rsquo;re free to use &lt;code&gt;tar&lt;/code&gt;, &lt;code&gt;gzip&lt;/code&gt;, &lt;code&gt;mysqldump&lt;/code&gt; etc to acquire the files and database.&lt;/p&gt;

&lt;h2 id=&#34;if-ssh-isn-t-enabled&#34;&gt;If SSH isn&amp;rsquo;t enabled&lt;/h2&gt;

&lt;p&gt;Sometimes the host disables SSH access, only allowing its use for SFTP. There are still many ways to acquire the site&amp;rsquo;s files and database:&lt;/p&gt;

&lt;h3 id=&#34;getting-hold-of-the-files&#34;&gt;Getting hold of the files&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Plain old FTP&lt;/strong&gt; - You can just use an FTP client such as Filezilla to access and download the site&amp;rsquo;s files using FTP or SFTP. This is the simplest way, but can take a long time because of the amount of files involved&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;File Manager Web UI&lt;/strong&gt; - compressing the site&amp;rsquo;s files obviously shrinks the download size, but also vastly reduces the amount of connections you need to make, leading to a faster download speed.

&lt;ol&gt;
&lt;li&gt;Navigate to the File Manager section (remember to tick &amp;ldquo;Show hidden files&amp;rdquo; to pick up .htaccess files)&lt;/li&gt;
&lt;li&gt;Browse to the web root folder, select all the files and folders you want using Ctrl+Click. Remember to exclude unnecessary large files such as sql dumps, media folders and the var folder&lt;/li&gt;
&lt;li&gt;Click Compress from the toolbar&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;getting-hold-of-the-database&#34;&gt;Getting hold of the database&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PHPMyAdmin&lt;/strong&gt; - PHPMyAdmin offers an array of options for dumping your database. You should start by checking the database&amp;rsquo;s size and considering excluding the dump of tables such as &lt;code&gt;log_url&lt;/code&gt;, &lt;code&gt;log_url_info&lt;/code&gt;, &lt;code&gt;log_visitor&lt;/code&gt;, &lt;code&gt;log_visitor_info&lt;/code&gt;, &lt;code&gt;report_viewed_product_index&lt;/code&gt;

&lt;ol&gt;
&lt;li&gt;Navigate to the PHPMyAdmin area of cPanel and locate the database in use (check your &lt;code&gt;app/etc/local.xml&lt;/code&gt; if you&amp;rsquo;re not sure which&lt;/li&gt;
&lt;li&gt;Click the Export tab&lt;/li&gt;
&lt;li&gt;Select Custom: here&amp;rsquo;s where you can selectively export information&lt;/li&gt;
&lt;li&gt;Tick &amp;lsquo;Disable foreign key checks&amp;rsquo; and set &amp;lsquo;Dump table&amp;rsquo; to &amp;lsquo;structure&amp;rsquo;. This will have PHPMyAdmin set up only the tables&amp;rsquo; columns but no data (we&amp;rsquo;ll get to that)&lt;/li&gt;
&lt;li&gt;Click Go&lt;/li&gt;
&lt;li&gt;Once this is complete, navigate back to the Export page and click Custom again.&lt;/li&gt;
&lt;li&gt;Deselect (ctrl+click) any tables which are unnecessary&lt;/li&gt;
&lt;li&gt;Tick &amp;lsquo;Disable foreign key checks&amp;rsquo; and set &amp;lsquo;Dump table&amp;rsquo; this time to &amp;lsquo;data&amp;rsquo;&lt;/li&gt;
&lt;li&gt;This will provide you with two files representing the database. Import first the Structure one, and then the Data one (or concatenate the two together)&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Magento cPanel Backup Issue - Not Backing up the Core Folder &#43; Solution</title>
      <link>https://edmondscommerce.github.io/magento/magento-cpanel-backup-issue-not-backing-up-the-core-folder-solution.html</link>
      <pubDate>Mon, 15 Nov 2010 13:06:28 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-cpanel-backup-issue-not-backing-up-the-core-folder-solution.html</guid>
      <description>&lt;p&gt;If you are hosting a Magento site on cPanel powered hosting and are relying on the cPanel backup system to manage backing up your files then you need to be aware of this issue.&lt;/p&gt;

&lt;p&gt;After a recent upgrade, cPanel has started to ignore any code inside a core/ directory when doing backups.&lt;/p&gt;

&lt;p&gt;Of course this means that your app/code/core folder will not be backed up - of course this is the most crucial folder in your Magento installation.&lt;/p&gt;

&lt;p&gt;Hopefully you are not editing core files anyway, so ultimately you shoudl be able to redownload your Magento version and extract the app/code/core folder from there, but even so, this is an extra step that you might need to take which will slow down your recovery in case of a disaster.&lt;/p&gt;

&lt;p&gt;See this Magento forum thread for more details:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.magentocommerce.com/boards/viewthread/210785/&#34; target=&#34;_blank&#34;&gt;http://www.magentocommerce.com/boards/viewthread/210785/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>