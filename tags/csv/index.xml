<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Csv on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/csv/</link>
    <description>Recent content in Csv on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Feb 2017 15:29:56 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/csv/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Bash Snippet to Get Column Numbers For Csv Headers</title>
      <link>https://edmondscommerce.github.io/bash-snippet-to-get-column-numbers-for-csv-headers/</link>
      <pubDate>Wed, 08 Feb 2017 15:29:56 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash-snippet-to-get-column-numbers-for-csv-headers/</guid>
      <description>&lt;p&gt;Check out this BASH snippet to get the headers from a CSV file and give you the column numbers&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/edmondscommerce/87472f274e47ed90a2dafa2cdf48a75f.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Combined CSV</title>
      <link>https://edmondscommerce.github.io/bash/combined-csv.html</link>
      <pubDate>Wed, 10 Dec 2014 17:23:36 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash/combined-csv.html</guid>
      <description>&lt;p&gt;Here is a quick BASH one liner to combine a folder of csv or similar files into one combined file with a header.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; f in *&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; !&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; tail -n +2 &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt; &amp;gt;&amp;gt; combined.txt&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; cat &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt; &amp;gt; combined.txt&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;More readably, you can see it like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# has header been set, starts as no&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;c1&#34;&gt;# foreach file in current directory&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; f in *
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; 
    &lt;span class=&#34;c1&#34;&gt;# if header has been set&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; !&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; 
        &lt;span class=&#34;c1&#34;&gt;# append the contents of the file starting from line 2 into the combined file&lt;/span&gt;
        tail -n +2 &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt; &amp;gt;&amp;gt; combined.txt
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; 
        &lt;span class=&#34;c1&#34;&gt;# overwrite the combined file with the contents of the file, including header&lt;/span&gt;
        cat &lt;span class=&#34;nv&#34;&gt;$f&lt;/span&gt; &amp;gt; combined.txt
        &lt;span class=&#34;c1&#34;&gt;# and mark the header as having been set&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; 
    &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt; 
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That&amp;rsquo;s it, pretty easy really&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using PHP to Stream SQL results dynamically as CSV, even to IE</title>
      <link>https://edmondscommerce.github.io/php/using-php-to-stream-sql-results-dynamically-as-csv-even-to-ie.html</link>
      <pubDate>Mon, 06 Jun 2011 10:49:46 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/using-php-to-stream-sql-results-dynamically-as-csv-even-to-ie.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you want to offer a csv feed and want the results to be on demand and like the idea of avoiding messing about righting to files on the server etc, you might like this little manuever.&lt;/p&gt;

&lt;p&gt;You will notice I&amp;rsquo;m using a non standard db_query function, just assume that this does all the sensible stuff it should.&lt;/p&gt;

&lt;p&gt;Also the query needs to be modified to suit.&lt;/p&gt;

&lt;p&gt;The trick is writing to PHP&amp;rsquo;s built in php://output stream which is basically just STDOUT.&lt;/p&gt;

&lt;p&gt;Note the headers which are specifically required to get IE to accept the file as a download. Other browsers will accept less headers but will also work fine with these.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Pragma: public&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Expires: 0&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Cache-Control: must-revalidate, post-check=0, pre-check=0&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Cache-Control: private&amp;quot;, false);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Content-Type: application/octet-stream&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Content-Disposition: attachment; filename=\&amp;quot;file.csv\&amp;quot;;&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;header(&amp;quot;Content-Transfer-Encoding: binary&amp;quot;);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$outstream = fopen(&amp;quot;php://output&amp;quot;, &amp;#39;w&amp;#39;);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$sql = &amp;quot; select * from a_table&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$q = db_query(&amp;quot;$sql&amp;quot;);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$header = false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;while ($r = mysql_fetch_assoc($q)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if (!$header) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        fputcsv($outstream, array_keys($r));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $header = true;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    fputcsv($outstream, $r);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;fclose($outstream);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Build Table from File PHP Function</title>
      <link>https://edmondscommerce.github.io/php/build-table-from-file-php-function.html</link>
      <pubDate>Thu, 03 Sep 2009 12:27:39 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/build-table-from-file-php-function.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
This little PHP function will allow you to import a csv or tab etc delimited text file into a database table. Handy if you need it :)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function build_table_from_file($tablename, $filepath, $delim=&amp;quot;\t&amp;quot;) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    db_query(&amp;quot;DROP TABLE IF EXISTS $tablename&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $fp=fopen($filepath, &amp;#39;r&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $headers=false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    while($r=(($delim==&amp;#39;csv&amp;#39;)?fgetcsv($fp):fgets($fp))) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if($delim!=&amp;#39;csv&amp;#39;){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $r=explode($delim, $r);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if(!$headers) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            foreach($r as $h){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                $headers[]=trim($h);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $sql = &amp;quot;CREATE TABLE $tablename&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                         (&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                            `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            foreach($headers as $h) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                $sqls[]=&amp;quot; `&amp;quot; . db_in($h) . &amp;quot;` TEXT NOT NULL &amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $sql .= implode(&amp;#39;, &amp;#39;, $sqls) . &amp;quot;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                        ) ENGINE = MYISAM &amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            db_query($sql);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            continue;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $sql = &amp;quot;insert into $tablename set &amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $sqls=array();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        foreach($headers as $k=&amp;gt;$h) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $sqls[] = &amp;quot;`$h` = &amp;#39;&amp;quot; . db_in($r[$k]) . &amp;quot;&amp;#39;&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $sql .= implode(&amp;#39;, &amp;#39;, $sqls);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        db_query($sql);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        pbar();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>