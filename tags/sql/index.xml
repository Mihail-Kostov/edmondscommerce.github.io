<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sql on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/sql/</link>
    <description>Recent content in Sql on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Aug 2013 10:54:20 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MySQL Substring not Returning Anything &#43; Solution</title>
      <link>https://edmondscommerce.github.io/mysql/mysql-substring-not-returning-anything-solution.html</link>
      <pubDate>Tue, 20 Aug 2013 10:54:20 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/mysql/mysql-substring-not-returning-anything-solution.html</guid>
      <description>&lt;p&gt;If you are puzzled why your simple usage of the MySQL SUBSTRING() function is not returning anything this could be your solution.&lt;/p&gt;

&lt;p&gt;The substring function allows you to specify a string (eg a column), the start character and the length. If you are used to languages like PHP then you are probably used to this kind of function regarding 0 as the starting character. In fact this function regards 1 as the starting character. If you specify 0 then you simply won&amp;rsquo;t get any results.&lt;/p&gt;

&lt;p&gt;This does not work:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
SELECT SUBSTRING(column, 0, 10) as tenchars

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This does work:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
SELECT SUBSTRING(column, 1, 10) as tenchars

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Run Multiple MySQL Queries in a Single Function</title>
      <link>https://edmondscommerce.github.io/php/run-multiple-mysql-queries-in-a-single-function.html</link>
      <pubDate>Wed, 14 Nov 2012 12:45:09 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/run-multiple-mysql-queries-in-a-single-function.html</guid>
      <description>&lt;p&gt;If you want to be able to run multiple queries in a single function call, for example doing the classic drop table blah; create table blah; then you might like this function.&lt;/p&gt;

&lt;p&gt;The use case is for things like database migration systems which you might copy and paste chunks of SQL including multiple queries from things like phpMyAdmin&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Run multiple queries passed in as a single string&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * This is optimised for copying and pasting from phpMyAdmin&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Handy for things like database migration systems&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * @param string $sql  multiple queries terminated with ; and a new line&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;function multiQuery($sql)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $sqls = preg_split(&amp;#39;%;$%m&amp;#39;, trim($sql));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    foreach ($sqls as $q) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (empty($q)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            continue;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        mysql_query($q); //suggest you replace this with your custom query function or if not throw in some extra error checking at least&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Admin Menu not working after Upgrade</title>
      <link>https://edmondscommerce.github.io/magento/magento-admin-menu-not-working-after-upgrade.html</link>
      <pubDate>Mon, 30 Jul 2012 09:39:07 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-admin-menu-not-working-after-upgrade.html</guid>
      <description>&lt;p&gt;Wondering why your Magento admin menu is not showing up after upgrading your live Magento store?&lt;/p&gt;

&lt;p&gt;If all attempts to get to a particular admin page with the exception of the dashboard proved abortive, this could be because there is a conflict between the Magento function that merges all Javascript files and the Apache URL rewrite.  This could be fixed by turning off this Magento function, and your can run the script below to do this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;your_magento_database_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core_config_data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;core_config_data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dev&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;js&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;merge_files&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento addAttributeToFilter() and addAttributeToSelect()</title>
      <link>https://edmondscommerce.github.io/magento/magento-addattributetofilter-and-addattributetoselect.html</link>
      <pubDate>Sat, 25 Feb 2012 19:49:58 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-addattributetofilter-and-addattributetoselect.html</guid>
      <description>&lt;p&gt;These two  Magento functions looks more like there is no obvious difference between them, but there is.&lt;/p&gt;

&lt;p&gt;addAttributeToFilter(&amp;lsquo;some_attribute1&amp;rsquo;,&amp;lsquo;attribute_value&amp;rsquo;) filters a Magento entity collection (e.g Products, categories) by only selecting entities that has &amp;lsquo;some_attribute&amp;rsquo; equal to &amp;lsquo;attribute_value&amp;rsquo; while&lt;/p&gt;

&lt;p&gt;addAttributeToSelect(&amp;lsquo;some_attribute2&amp;rsquo;)  tells Magento to return add &amp;lsquo;some_attributes&amp;rsquo; to the set of properties that would be returned for a collection of entities.&lt;/p&gt;

&lt;p&gt;A combination of these two functions could be  likened to &lt;code&gt;sql
SELECT &#39;some_attribute2&#39; FROM Table WHERE &#39;some_attribute1&#39;=&#39;attribute_value&#39;
&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento View SQL For Collection</title>
      <link>https://edmondscommerce.github.io/magento/magento-view-sql-for-collection.html</link>
      <pubDate>Thu, 21 Oct 2010 10:46:19 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-view-sql-for-collection.html</guid>
      <description>&lt;p&gt;If you are working with collections and would like to verify that the actual SQL being used is what you expect it to be then this little tip might prove really handy.&lt;/p&gt;

&lt;p&gt;For any collection you can call the method getSelect(). This retrieves the actual Select object that handles the query.&lt;/p&gt;

&lt;p&gt;If you cast this select object to a string, you get the raw SQL query, so for example the following is pretty handy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;die(var_dump((string)$collection-&amp;gt;getSelect()));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This way you can tweak your collection filters etc and check that its doing what you expect it to be doing&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>osCommerce Checkout Problems &#43; Solution</title>
      <link>https://edmondscommerce.github.io/oscommerce/oscommerce-checkout-problems-solution.html</link>
      <pubDate>Tue, 19 Jan 2010 10:33:14 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/oscommerce/oscommerce-checkout-problems-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If your osCommerce checkout starts behaving badly and bits of info seem to go missing eg billing address then you should definitely try this fix before you tear your hair out completely.&lt;/p&gt;

&lt;p&gt;Most osCommerce installs store session information to a MySQL table called (suprisingly) sessions.&lt;/p&gt;

&lt;p&gt;Sometimes (I have only seen this twice on umpteen osCommerce sites) the sessions table will become corrupted. The irritating thing is that if this happens it seems that the site will not stop working completely with a useful error message, but instead will continue to work but will behave very strangely.&lt;/p&gt;

&lt;p&gt;If your osCommerce site is behaving strangely then try this fix.&lt;/p&gt;

&lt;p&gt;Open phpMyAdmin and select your SQL database and then copy and paste the following into the SQL section and hit run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;REPAIR TABLE `sessions`;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Zend Framework Easy SQL Info</title>
      <link>https://edmondscommerce.github.io/zend-framework/zend-framework-easy-sql-info.html</link>
      <pubDate>Mon, 13 Jul 2009 13:47:52 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/zend-framework/zend-framework-easy-sql-info.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you develop using Zend Framework you will know that it is sometimes tricky to see exactly whats going on in terms of SQL queries. After trying a few different ideas including subclassing the database classes or other complex systems, the easiest I have found is this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Edit your app.ini config file and add a line:
```&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;db_profiling_enabled = false&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Then in your development section in your ini file, set the same value to true

2. Add the following lines to your bootstrap.php after the database adapter setup. 

```php

// DATABASE ADAPTER - Setup the database adapter
// Zend_Db implements a factory interface that allows developers to pass in an 
// adapter name and some parameters that will create an appropriate database 
// adapter object.  In this instance, we will be using the values found in the 
// &amp;quot;database&amp;quot; section of the configuration obj.
$dbAdapter = Zend_Db::factory($configuration-&amp;gt;database);
//$dbAdapter = new EC_Db_Mysqli($configuration-&amp;gt;database-&amp;gt;params);


if($configuration-&amp;gt;db_profiling_enabled){
    // create a new profiler
    $profiler = new Zend_Db_Profiler_Firebug(&#39;EdmondsCommerce DB Queries Debug&#39;);
    // enable profiling (this is only recommended in development mode, disable this in production mode)
    $profiler-&amp;gt;setEnabled(true);
    // add the profiler to the database object
    $dbAdapter-&amp;gt;setProfiler($profiler);
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note you may need to move this chunk above the database adapter section:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;// CONFIGURATION - Setup the configuration object&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;// The Zend_Config_Ini component will parse the ini file, and resolve all of&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;// the values for the given section.  Here we will be using the section name&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;// that corresponds to the APP&amp;#39;s Environment&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$configuration = new Zend_Config_Ini(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    APPLICATION_PATH . &amp;#39;/config/app.ini&amp;#39;, &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    APPLICATION_ENVIRONMENT&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is based on a modified quickstart layout for a project. If you have decided to use an alternative layout, you should be able to tell where the relevant code should be.&lt;/p&gt;

&lt;p&gt;You will need to have the Firebug firefox extension to view this output. If you also install the FirePHP extension for firebug then there are even more cool things that you can do.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>