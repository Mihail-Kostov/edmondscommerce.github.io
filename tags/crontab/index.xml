<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Crontab on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/crontab/</link>
    <description>Recent content in Crontab on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Aug 2012 13:51:04 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/crontab/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Increase the Stabilty of your Magento cron</title>
      <link>http://edmondscommerce.github.io/magento/increase-the-stabilty-of-your-magento-cron.html</link>
      <pubDate>Fri, 24 Aug 2012 13:51:04 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/increase-the-stabilty-of-your-magento-cron.html</guid>
      <description>&lt;p&gt;Sometimes when your cron process in Magento seems to not be working it is worth doubling up the ways it gets executed.&lt;/p&gt;

&lt;p&gt;One reason for this is various extensions (notably EERP from boostmyshop) set up an override to ensure that the same cron task is not run a second time if it&amp;rsquo;s still running when the first run happens.&lt;/p&gt;

&lt;p&gt;Often the cli setup for php is not configured with the same timeouts etc. that the web setup is.  Therefore one thing that can make your cron more &amp;ldquo;stable&amp;rdquo; is to use wget or curl to fetch the cron.php file rather than (or as well as) running the cron.sh script.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s what to add to the server&amp;rsquo;s crontab (/etc/crontab or crontab -e) to use wget to fire off the cron :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
* * * * * /usr/bin/wget -O- www.mycoolsite.com/cron.php &amp;gt; /dev/null 2&amp;gt; /dev/null

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That of course needs the url changing to match your domain.  It&amp;rsquo;s worth noting that having output and stderror piped to /dev/null in a crontab is probably not the best practice but given that any module can create cron tasks that output stuff, your sysadmin might dislike getting that emailed to them!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Server Migration - Synch Cron Tab via SSH</title>
      <link>http://edmondscommerce.github.io/linux/server-migration-synch-cron-tab-via-ssh.html</link>
      <pubDate>Wed, 04 Jan 2012 17:54:14 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/linux/server-migration-synch-cron-tab-via-ssh.html</guid>
      <description>&lt;p&gt;If you are handling a server migration and would like to have a scripted way to copy the crontab from one machine to the other then you might like this little snippet.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;

ssh -p2020 root@123.123.123.123 &#39;crontab -l&#39; | crontab -


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will get the contents of the root crontab from one server and apply it to the current server, replacing any current cron tab settings.&lt;/p&gt;

&lt;p&gt;This is nice if you want to have a repeatable server resynch process whilst you are migrating and the crontab on the old server may change&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>