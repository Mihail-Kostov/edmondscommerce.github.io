<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Production on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/tags/production/</link>
    <description>Recent content in Production on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 May 2013 09:11:44 +0000</lastBuildDate>
    <atom:link href="http://example.com/tags/production/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using Magento Database Migrations to Track Configuration Changes</title>
      <link>http://example.com/magento/using-magento-database-migrations-to-track-configuration-changes.html</link>
      <pubDate>Tue, 21 May 2013 09:11:44 +0000</pubDate>
      
      <guid>http://example.com/magento/using-magento-database-migrations-to-track-configuration-changes.html</guid>
      <description>&lt;p&gt;Often when working on a Magento site, there is a requirement to build custom functionality or implement new themes etc but to finish the job, the final step will be to perform some admin configuration.&lt;/p&gt;

&lt;p&gt;This manual step can introduce the possiblity of human error if a step is missed or not performed exactly correctly.&lt;/p&gt;

&lt;p&gt;Also if the configuration is to be applied multiple times across staging, pre production and final production then these risks increase.&lt;/p&gt;

&lt;p&gt;The only sure way to make sure that the correct configuration is applied and also to provide a proper audit trail for configuration changes is to use Magento&amp;rsquo;s database migrations - install and upgrade scripts - to update the database programmatically with the required configuration changes.&lt;/p&gt;

&lt;p&gt;To assist with this, there is a nice simple module you can find on Git Hub:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/danslo/MigrationHelper&#34;&gt;https://github.com/danslo/MigrationHelper&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This module will automatically create the migration files for you which can be a real time saver.&lt;/p&gt;

&lt;p&gt;I would always suggest you create your own custom namespaced configuration migration module that is purely to track these configuration changes.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>