<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apache on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/apache/</link>
    <description>Recent content in Apache on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Jan 2015 16:15:13 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/apache/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PageSpeed and issue with images on Safari</title>
      <link>https://edmondscommerce.github.io/pagespeed/pagespeed-and-issue-with-images-on-safari.html</link>
      <pubDate>Fri, 30 Jan 2015 16:15:13 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/pagespeed/pagespeed-and-issue-with-images-on-safari.html</guid>
      <description>&lt;p&gt;Had an issue on a client site where the images were working in all major browser with the exception of safari. The client had page speed installed with the &amp;lsquo;rewrite_images&amp;rsquo; filter enabled.
So it would work with older versions of Safari there are two options:&lt;/p&gt;

&lt;p&gt;For the first option we can disable the &amp;lsquo;convert_jpeg_to_webp&amp;rsquo; and &amp;lsquo;convert_to_webp_lossless&amp;rsquo; filters in nginx by using the following after the &amp;lsquo;rewrite_images&amp;rsquo; and &amp;lsquo;resize_rendered_image_dimensions&amp;rsquo; filters:
    pagespeed EnableFilters rewrite_images;
    pagespeed EnableFilters resize_rendered_image_dimensions;
    pagespeed DisableFilters convert_jpeg_to_webp,convert_to_webp_lossless;&lt;/p&gt;

&lt;p&gt;In Apache use the following:
    ModPagespeedDisableFilters convert_jpeg_to_webp,convert_to_webp_lossless&lt;/p&gt;

&lt;p&gt;Please not that the diable option must be specified after the enable lines for &amp;lsquo;rewrite_images&amp;rsquo; and &amp;lsquo;resize_rendered_image_dimensions&amp;rsquo; filters.&lt;/p&gt;

&lt;p&gt;In versions of PageSpeed that are 1.8.31.2 and above there is a new option which is &amp;lsquo;ServeRewrittenWebpUrlsToAnyAgent&amp;rsquo; which will check to see if the client can support webp files on any webp urls that are accessed.&lt;/p&gt;

&lt;p&gt;In Nginx to enable this option:
    pagespeed ServeRewrittenWebpUrlsToAnyAgent off;
Alternatively in apache the setting is:
    ModPagespeedServeRewrittenWebpUrlsToAnyAgent off&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blocking Direct IP Access in Apache</title>
      <link>https://edmondscommerce.github.io/apache/blocking-direct-ip-access-in-apache.html</link>
      <pubDate>Wed, 03 Dec 2014 15:08:37 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/apache/blocking-direct-ip-access-in-apache.html</guid>
      <description>&lt;p&gt;If you are using Name based virtual hosts, you may want to simply block any bots etc that try to access your server by direct IP address. It&amp;rsquo;s unlikely a real user would try to hit your server by using the actual IP address.&lt;/p&gt;

&lt;p&gt;To do this, you can use this Virtual Host config:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
    ServerName 123.123.123.123
    Redirect 403 /
    ErrorDocument 403 &amp;quot;No&amp;quot;
    DocumentRoot /dev/null/
    UseCanonicalName Off
    UserDir disabled
&amp;lt;/VirtualHost&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Of course, please change the IP to the real server IP address(es)&lt;/p&gt;

&lt;p&gt;And that&amp;rsquo;s it, anyone trying to hit the server by IP address will get a simple 403 error.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SELinux and connecting to Mysql databases on Red Hat based distributions</title>
      <link>https://edmondscommerce.github.io/linux/se-linux-and-connecting-to-a-mysql-database.html</link>
      <pubDate>Fri, 07 Nov 2014 10:53:06 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/se-linux-and-connecting-to-a-mysql-database.html</guid>
      <description>&lt;p&gt;SELinux can be restrictive by defult but prevent alot of security issues. One thing we found while trying it is that by default it will block network connections from being made via the httpd daemon. This is an issue if say on a development system you are running php via the apache module.&lt;/p&gt;

&lt;p&gt;To resolve this simply login via root or sudo to root privilige and run the following command:
    setsebool -P httpd_can_network_connect on
You should now be able to connect to connect to your database. This will also enable things like web api, curl calls and other php that requires network access.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apache Mod Rewrite Escaped Slashes Problem &#43; Solution</title>
      <link>https://edmondscommerce.github.io/apache/apache-mod-rewrite-escaped-slashes-problem-solution.html</link>
      <pubDate>Thu, 11 Apr 2013 11:05:20 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/apache/apache-mod-rewrite-escaped-slashes-problem-solution.html</guid>
      <description>&lt;p&gt;As part of our Magento SEO service, the first thing we do is to make sure there are no issues with the crawlability and general health of the clients web site.&lt;/p&gt;

&lt;p&gt;Whilst working on the Google Webmaster Tools crawl errors for a client I noticed one specific and intruiging problem for which I couldn&amp;rsquo;t immediately see the reason, everything looked to be set up perfectly.&lt;/p&gt;

&lt;p&gt;Certain URLs were getting 404 responses. The URL was being parsed by mod_rewrite but everything looked fine so why was apache giving a 404?&lt;/p&gt;

&lt;p&gt;The problem turns out to be that the URLs contain escaped slashes (eg search/KTA-mb667k2%2F2g),&lt;/p&gt;

&lt;p&gt;The problem is that Apache actually handles the escaped slash and helpfully converts it to a real slash. That then means that it is trying to look in a sub folder that does not exist and hence the 404.&lt;/p&gt;

&lt;p&gt;Chances are you don&amp;rsquo;t want escaped slashes to really be thought of as real directory separating slashes, especially if you are using mod_rewrite.&lt;/p&gt;

&lt;p&gt;The answer is a simple one liner to be added to your vhost.conf or httpd.conf.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
AllowEncodedSlashes On

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Apache Log File Analysis Script</title>
      <link>https://edmondscommerce.github.io/bash/apache-log-file-analysis-script.html</link>
      <pubDate>Thu, 14 Mar 2013 14:17:48 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash/apache-log-file-analysis-script.html</guid>
      <description>&lt;p&gt;Here is a little bash script we knocked together to track down some malicious activity on a clients server.&lt;/p&gt;

&lt;p&gt;Using a bit of awk etc to parse the log files we could quickly track down an IP address that was overloading the server and then take steps to block that person.&lt;/p&gt;

&lt;p&gt;Here is the script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;###### SETUP ############&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;LOG_FOLDER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/var/www/vhosts/domain.co.uk/statistics/logs
&lt;span class=&#34;nv&#34;&gt;ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$LOG_FOLDER&lt;/span&gt;/access_log

&lt;span class=&#34;nv&#34;&gt;HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;20000



&lt;span class=&#34;c1&#34;&gt;######### FUNCTIONS ##############&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; title&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;---------------------------------&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$@&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;---------------------------------&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; urls_by_ip&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;IP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
    tail -5000 &lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk -v &lt;span class=&#34;nv&#34;&gt;ip&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$IP&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; $1 ~ ip {freq[$7]++} END {for (x in freq) {print freq[x], x}}&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort -rn &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -20
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;


&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; ip_addresses_by_user_agent&lt;span class=&#34;o&#34;&gt;(){&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;USERAGENT_STRING&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;TOP_20_IPS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`tail  -&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | grep &amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;USERAGENT_STRING&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;  | awk &amp;#39;{freq[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;]++} END {for (x in freq) {print freq[x], x}}&amp;#39; | sort -rn | head -20`&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_IPS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;####### RUN REPORTS #############&lt;/span&gt;


title &lt;span class=&#34;s2&#34;&gt;&amp;quot;top 20 URLs&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;TOP_20_URLS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`tail -&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | awk &amp;#39;{freq[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$7&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;]++} END {for (x in freq) {print freq[x], x}}&amp;#39; | sort -rn | head -20`&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_URLS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;


title &lt;span class=&#34;s2&#34;&gt;&amp;quot;top 20 URLS excluding POST data&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;TOP_20_URLS_WITHOUT_POST&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`tail  -&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | awk -F&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ?&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot; &amp;#39;{freq[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$7&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;]++} END {for (x in freq) {print freq[x], x}}&amp;#39; | sort -rn | head -20`&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_URLS_WITHOUT_POST&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;


title &lt;span class=&#34;s2&#34;&gt;&amp;quot;top 20 IPs&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;TOP_20_IPS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`tail  -&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | awk &amp;#39;{freq[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;]++} END {for (x in freq) {print freq[x], x}}&amp;#39; | sort -rn | head -20`&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_IPS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;

title &lt;span class=&#34;s2&#34;&gt;&amp;quot;top 20 user agents&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;TOP_20_USER_AGENTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`tail  -&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOW_MANY_ROWS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ACCESS_LOG&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | cut -d\  -f12- | sort | uniq -c | sort -rn | head -20`&amp;quot;&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_USER_AGENTS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;


title &lt;span class=&#34;s2&#34;&gt;&amp;quot;IP Addresses for Top 3 User Agents&amp;quot;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;I&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; I&amp;lt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; I++&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;UA&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;`echo &amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TOP_20_USER_AGENTS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot; | head -n &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$I&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; | tail -n 1 | awk &amp;#39;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;=&amp;quot;&amp;quot;; print &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;}&amp;#39;`&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$UA&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;~~~~~~~~~~~~~~~~~~&amp;quot;&lt;/span&gt;
    ip_addresses_by_user_agent &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$UA&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;    &amp;quot;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Apache Access Logs Find Spiders by Counting Requests to IP Addresses</title>
      <link>https://edmondscommerce.github.io/linux/apache-access-logs-find-spiders-by-counting-requests-to-ip-addresses.html</link>
      <pubDate>Tue, 21 Aug 2012 13:24:37 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/apache-access-logs-find-spiders-by-counting-requests-to-ip-addresses.html</guid>
      <description>&lt;p&gt;If you would like a quick summary of the IP addresses that are beating the **** out of your server by firing lots of requests for quite possibly malicious or otherwise nefarious reasons then try this little bash script:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;LOG_FILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/var/www/vhosts/DOMAIN.co.uk/statistics/logs/access_log
&lt;span class=&#34;nv&#34;&gt;OUT_FILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/spider_analysis

&lt;span class=&#34;c1&#34;&gt;#This generates a file with the top 20 IP addresses by number of requests&lt;/span&gt;
cat &lt;span class=&#34;nv&#34;&gt;$LOG_FILE&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk &lt;span class=&#34;s1&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; uniq -c &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort -nr &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; head -n &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; &amp;gt; &lt;span class=&#34;nv&#34;&gt;$OUT_FILE&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Top 20 IP addresses by number of request&amp;quot;&lt;/span&gt;
cat &lt;span class=&#34;nv&#34;&gt;$OUT_FILE&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;#allow for loop to split on new line&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS_BAK&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$IFS&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;cat &lt;span class=&#34;nv&#34;&gt;$OUT_FILE&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;COUNT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk &lt;span class=&#34;s1&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;IP_ADD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; awk &lt;span class=&#34;s1&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;---------------------------------&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$IP_ADD&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; has made &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$COUNT&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; requests&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Whois Information&amp;quot;&lt;/span&gt;
    whois &lt;span class=&#34;nv&#34;&gt;$IP_ADD&lt;/span&gt; 
    &lt;span class=&#34;c1&#34;&gt;#lynx -dump http://who.cc/$IP_ADD # whois was blocked on the server i was using for some reason, use lynx as a work around&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;---------------------------------&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# set that back&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$IFS_BAK&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;IFS_BAK&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You would use this to give you some idea of which IPs are hitting the server a lot.&lt;/p&gt;

&lt;p&gt;Usually you would expect to see a lot of these being search engines which you likely want to allow. However if you see any domestic or other IP addresses then you may choose to block these.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Running PHP Scripts as Apache or a Shell User</title>
      <link>https://edmondscommerce.github.io/linux/running-php-scripts-as-apache-or-a-shell-user.html</link>
      <pubDate>Tue, 14 Aug 2012 14:05:32 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/running-php-scripts-as-apache-or-a-shell-user.html</guid>
      <description>&lt;p&gt;If you have PHP scripts that need to be able to run via the web server as Apache and also be runnable directly on the command line then you may run into permissions issues, especially if those scripts are doing anything with files.&lt;/p&gt;

&lt;p&gt;The scenario is that you run the script via the webserver and all of the files etc that are created are owned by Apache. Then you try to run on the command line and the script cannot run because it does not have permission to access Apache&amp;rsquo;s files. The opposite scenario is also true.&lt;/p&gt;

&lt;p&gt;There are a few possible solutions to this but the most elegant and simple is to do the follwing.&lt;/p&gt;

&lt;p&gt;Assuming you are running Centos, you first of all need to set Apache to run with a umask of 002. This means that files it creates will have read/write permissions for the Apache group as well as the Apache user.&lt;/p&gt;

&lt;p&gt;To do this, simply add a line to the file /etc/sysconfig/httpd. You can do this in one command like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;umask 002&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sysconfig/httpd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then you need to restart Apache to apply this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;service httpd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You then need to add your shell user to the apache group. To do this you need to do the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;vigr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then find the line with your shell user and at the end add a comma and the word apache. This will add that user to the apache group along with it&amp;rsquo;s own group.&lt;/p&gt;

&lt;p&gt;You will get a prompt to also edit etc/shadow. Agree to this and repeat the process.&lt;/p&gt;

&lt;p&gt;You will then need to log out and log back in to apply those changes and that should resolve your permissions issues for good.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How 10,000 Geeks break the UK&#39;s biggest distributors, RS and Farnell (Raspberry Pi)</title>
      <link>https://edmondscommerce.github.io/ecommerce/how-10000-geeks-break-the-uks-biggest-distributors-rs-and-farnell-raspberry-pi.html</link>
      <pubDate>Wed, 29 Feb 2012 06:50:10 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/ecommerce/how-10000-geeks-break-the-uks-biggest-distributors-rs-and-farnell-raspberry-pi.html</guid>
      <description>&lt;p&gt;So, 6am this morning (Wed 29 2012), a bunch of geeks eagerly awaiting the Raspberry Pi have killed the websites of both RS Components and Farnell&lt;/p&gt;

&lt;p&gt;Why, you ask? Because the servers were not prepared for the influx of visitors that such an announcement brings.  Raspberry Pi themselves (a UK Foundation, like a Charity) were well prepared and are presently serving up a static page.&lt;/p&gt;

&lt;p&gt;So, if you&amp;rsquo;re running an eCommerce site, like Magento or osCommerce, and are warned by one of your suppliers, or your manufacturing department that you&amp;rsquo;re launching a new product, be prepared.  Raspberry Pi certainly were and provided their suppliers with the information that they would be getting a huge amount of traffic, unfortunately those suppliers didn&amp;rsquo;t listen hard enough.&lt;/p&gt;

&lt;p&gt;This is to all intents a DDoS attack, but not an intentional attack.  Well done for keeping everyone updated via twitter though @raspberrypi, we know it isn&amp;rsquo;t your fault.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento URL Request Routing</title>
      <link>https://edmondscommerce.github.io/magento/magento-url-request-routing.html</link>
      <pubDate>Tue, 17 Jan 2012 16:13:03 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-url-request-routing.html</guid>
      <description>&lt;p&gt;Magento is a typical PHP Model View Architecture (MVC) system which routes its URLs in ways not particularly different from other PHP MVC Frameworks like codeigniter, symphony etc. But the difference it has with other MVC architecture is that most of its routing directives or configurations are XML based i.e. found in one XML file or the other.&lt;/p&gt;

&lt;p&gt;For example, www.yourstore.co.uk/index.php/checkout/cart/index, tells Magento to use the checkout module found in app/code/Mage/,  use the cart controller (i.e. CartController.php) in app/code/Mage/Checkout/controller/ and run the index action method in the CartController.php, when the last &amp;ldquo;index&amp;rdquo; is omitted Magento still defaults to run the index action method, and every other value in the url after the first three url steps, Magento treats them as PHP GET parameters i.e. www.yourstore.co.uk/index.php/checkout/cart/index/store/1 would make $_GET[&amp;lsquo;store&amp;rsquo;]=1&lt;/p&gt;

&lt;p&gt;It is this action method that searches through the magneto xml configuration file using x-path to obtain information regarding this request e.g. the indexAction method found in app/code/Mage/Checkout/controller/CartController.php uses  Mage::getStoreConfig(&amp;lsquo;sales/minimum_order/description&amp;rsquo;) to get the value of the description node  in sales module, the minimum_order node and description child node, which can be found in system.xml in the Sales/etc/ folder.&lt;/p&gt;

&lt;p&gt;Its is worthwhile also knowing that Magento uses Apache&amp;rsquo;s URL rewrite engine (mod_rewrite) to make its URLs SEO friendly i.e. www.yourstore.co.uk/index.php/catalog/product/view/id/1 could be routed to www.yourstore.co.uk/index.php/product1.html which can be regarded as an alias for  www.yourstore.co.uk/index.php/catalog/product/view/id/1 to make Google happy and improve the sites SEO.&lt;/p&gt;

&lt;p&gt;This basically describes how Magento decides what to do when accessed by a particular URL.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Emergency Server Recovery Support - PHP, MySQL, Fatal Error, Site Down, Table Crashed &#43; Solution</title>
      <link>https://edmondscommerce.github.io/management/emergency-recovery-php-mysql-fatal-error-site-down-table-crashed-solution.html</link>
      <pubDate>Fri, 26 Nov 2010 11:55:50 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/management/emergency-recovery-php-mysql-fatal-error-site-down-table-crashed-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If your site has suddenly gone down and you are tearing your hair out because the people you usually call for server support aren&amp;rsquo;t answering the phone then fear not - we can help you out.&lt;/p&gt;

&lt;p&gt;Along with our core business of building, customising and extending e-commerce web sites, we are also pretty handy at fixing problems when the pressure is on and you need results quickly.&lt;/p&gt;

&lt;p&gt;If you are running a PHP/MySQL based web site on a Linux server and its stopped working with Fatal Error or even an empty white screen then get in touch with us.&lt;/p&gt;

&lt;p&gt;We appreciate that your e-commerce web site is your business and when the site is down your doors are closed and you are losing money. We can help you to get your doors back open again as quickly as possible.&lt;/p&gt;

&lt;p&gt;Get in touch with us on &lt;b&gt;0844 357 020&lt;/b&gt;1 and drop us a &lt;a href=&#34;http://www.edmondscommerce.co.uk&#34;&gt;contact form&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will support you in your server emergency.&lt;/p&gt;

&lt;h3&gt;Errors that you might encounter include:&lt;/h3&gt;

&lt;p&gt;Fatal Error&lt;/p&gt;

&lt;p&gt;Warning&lt;/p&gt;

&lt;p&gt;MySQL Error&lt;/p&gt;

&lt;p&gt;Headers Already Sent&lt;/p&gt;

&lt;p&gt;There has been an error processing your request&lt;/p&gt;

&lt;p&gt;Error log record number&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Plesk &#43; Mod Security</title>
      <link>https://edmondscommerce.github.io/apache/plesk-mod-security.html</link>
      <pubDate>Mon, 15 Jun 2009 09:55:37 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/apache/plesk-mod-security.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are trying to modify your mod_security configuration on a plesk server and have tried using htaccess files you have probably realised that it won&amp;rsquo;t work. That&amp;rsquo;s a good thing, it makes it harder for people to screw up your server by turning off this protection.&lt;/p&gt;

&lt;p&gt;Instead the way to do it is to edit the vhost.conf file located in the conf folder in the domain / sub domain root (the folder containing the httpdocs folder).&lt;/p&gt;

&lt;p&gt;You can apply any settings you want to this file and then run the following command to get Plesk to rebuild your httpd configuration including your new settings. This is working with Plesk the way it was intended to be used and is a better solution that the htaccess file approach.&lt;/p&gt;

&lt;p&gt;The command to rebuild your Apache configuration when you make a change to the vhost.conf ssl_vhost.conf file is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
        /usr/local/psa/admin/bin/websrvmng -a -v

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This rebuilds the configuration for ALL virtual hosts. It shouldn&amp;rsquo;t take more than a few seconds, obviously you then need to restart Apache.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>