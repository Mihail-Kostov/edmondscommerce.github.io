<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php Fpm on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/php-fpm/</link>
    <description>Recent content in Php Fpm on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Jan 2017 18:23:49 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/php-fpm/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PHP File /tmp/ Does Not Exist</title>
      <link>https://edmondscommerce.github.io/php-file-/tmp/-does-not-exist/</link>
      <pubDate>Mon, 23 Jan 2017 18:23:49 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php-file-/tmp/-does-not-exist/</guid>
      <description>&lt;p&gt;Recently I ran into an issue with a upload issue in Akeneo when trying to include an image with a product, however the issue could happen with any PHP script.&lt;/p&gt;

&lt;p&gt;I had provided a file path of /path/to/file.jpg in the upload, but was getting an error message of &lt;code&gt;Attribute or field &amp;quot;picture&amp;quot; expects a valid pathname as data, &amp;quot;/tmp/path/to/file.jpg&amp;quot; given (for setter media)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I was surprised to see that the path had been changed to /tmp/path/to/file.jpg, but a put a copy of the file into the /tmp/ directory and tried again. This produced the same error message.&lt;/p&gt;

&lt;p&gt;At this point I assumed that the issue had to be permissions related, so as the PHP and Nginx user made sure that I could read the file. Slightly stumped I made sure that I was working on the correct container and found that I was.&lt;/p&gt;

&lt;p&gt;I then inserted an extra bit of debugging code to write the exception to a file in /tmp/uploadError.txt. I tried the upload again, got the same error, but could not find the newly created file.&lt;/p&gt;

&lt;p&gt;After confirming that this logging was in the right place, I decided to scan the entire file system to see where the file had been saved, and got the following result:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;root@desktop-container$ find / -type f -iname &lt;span class=&#34;s1&#34;&gt;&amp;#39;uploadError.txt&amp;#39;&lt;/span&gt; 
/tmp/systemd-private-c5c2073fc98d4581bb08fe6013321d9e-php-fpm.service-i9QqcK/tmp/uploadError.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A bit of googling indicated that this is a security feature of systemd. It can be disabled, if necessary, by editing the PHP service file ( found here &lt;code&gt;/usr/lib/systemd/system/php-fpm.service&lt;/code&gt; and setting PrivateTmp to false.&lt;/p&gt;

&lt;p&gt;After doing this you&amp;rsquo;ll need to reload the systemd daemon by running &lt;code&gt;systemctl daemon-reload&lt;/code&gt; and restart PHP.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>