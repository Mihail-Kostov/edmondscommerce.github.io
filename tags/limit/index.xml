<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Limit on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/limit/</link>
    <description>Recent content in Limit on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Jan 2013 16:49:24 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/limit/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Form File Upload Limits with PHP</title>
      <link>http://edmondscommerce.github.io/php/form-file-upload-limits-with-php.html</link>
      <pubDate>Fri, 11 Jan 2013 16:49:24 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/php/form-file-upload-limits-with-php.html</guid>
      <description>&lt;p&gt;If you have a form designed to handle file uploads which is failing due to file size then you might like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$arrayMaxes = array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;upload_max_filesize&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;upload_max_filesize&amp;#39;)),&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;post_max_size&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;post_max_size&amp;#39;)),&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;memory_limit&amp;#39; =&amp;gt; intval(ini_get(&amp;#39;memory_limit&amp;#39;))&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$maxUploadSize = min($arrayMaxes);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;foreach ($arrayMaxes as $key =&amp;gt; $value) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if ($value == min($arrayMaxes)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $minimumOfThree = $key;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        break;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;echo &amp;quot;The maximum file size you can upload is $maxUploadSize, this is due to the php.ini setting $mininimumOfThree&amp;quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will calculate the smallest value that will be allowed based upon php.ini settings.&lt;/p&gt;

&lt;p&gt;You can then incorporate this into your form logic and display so that users have a clear understanding of how large a file they can upload.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Not Working, Not Creating Report Files Either &#43; Solution</title>
      <link>http://edmondscommerce.github.io/magento/magento-not-working-not-creating-report-files-either-solution.html</link>
      <pubDate>Wed, 02 Jan 2013 14:49:35 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/magento-not-working-not-creating-report-files-either-solution.html</guid>
      <description>&lt;p&gt;If you have a Magento site that is consistently erroring out and giving you the report screen with the file name, but the file does not exist in the reports folder then this could be your solution.&lt;/p&gt;

&lt;p&gt;The most likely culprit in this scenario is that the filesystem has run out of space. If this happens, Magento will die because it literally can&amp;rsquo;t create any files and it needs to do this for caching, session etc.&lt;/p&gt;

&lt;p&gt;You can easily check this by running this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;df -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you see any filesystems with 100% usage then you have your answer, you have run out of hard drive space and need to free some space up by deleting files.&lt;/p&gt;

&lt;p&gt;On occasion though you might run this and see that you still have plenty of space. This can be puzzling at first though you need to bear in mind that Linux filesystems don&amp;rsquo;t purely use space but also something called &lt;a href=&#34;http://en.wikipedia.org/wiki/Inode&#34; title=&#34;wikipedia explanation of inodes&#34; target=&#34;_blank&#34;&gt;inodes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;An inode is like a file pointer, you need one for every file that is in the filesystem. Also there is a limit to the number of inodes in any file system. If something goes crazy and your system creates lots of small files then you might find that you run out of inodes before you run out of hard drive space.&lt;/p&gt;

&lt;p&gt;To check if this is your issue run this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;df -i
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you see any lines with 100% then you have run out of inodes and you need to delete some files. There are numerous possible causes of this and tactics that can be used to clear them out. When dealing with Magento though there are a few usual suspects.&lt;/p&gt;

&lt;p&gt;Magento is a real culprit for this behaviour as it uses file system based sessions by default. Session files are very small and can be very numerous.&lt;/p&gt;

&lt;p&gt;The quick fix is just to completely remove the sessions directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;rm -rf /path/to/magento/var/session
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Magento will recreate it on the next request.&lt;/p&gt;

&lt;p&gt;If you would like to try to clear out just older sessions then you can do something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;find /path/to/magento/var/session -name &lt;span class=&#34;s1&#34;&gt;&amp;#39;sess_*&amp;#39;&lt;/span&gt; -type f -mtime +7 -exec rm &lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Shell Scripts and Memory Limit Woes &#43; Solution</title>
      <link>http://edmondscommerce.github.io/magento/magento-shell-scripts-and-memory-limit-woes-solution.html</link>
      <pubDate>Wed, 19 Dec 2012 11:53:48 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/magento/magento-shell-scripts-and-memory-limit-woes-solution.html</guid>
      <description>&lt;p&gt;OK so you love Magento&amp;rsquo;s shell scripts! They are great for quickly putting together bulk processes that have full access to the Magento ORM.&lt;/p&gt;

&lt;p&gt;These kinds of shell scripts will often require above normal amounts of RAM for the kind of heavy lifting they lend themselves well to. If you are finding your script is banging against some mysterious memory limit that really shouldn&amp;rsquo;t be there then perhaps this is your answer:&lt;/p&gt;

&lt;p&gt;You might see an error message such as this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Fatal error:  Allowed memory size of 134217728 bytes exhausted (tried to allocate 20 bytes)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The reason this might be happening is that one of the things the abstract shell class does is parse the .htaccess file and apply any PHP configuration it finds. This is pretty slick and I can definitely see the value of it however if you are not aware its happening and you have a memory limit defined in a .htaccess file then it will be applied to your shell environment.&lt;/p&gt;

&lt;p&gt;The solution is up to you, edit the htaccess file or override this method in your shell class so that it doesn&amp;rsquo;t do things you do not want:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;    /**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * Parse .htaccess file and apply php settings to shell script&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    protected function _applyPhpVariables()&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $htaccess = $this-&amp;gt;_getRootPath() . &amp;#39;.htaccess&amp;#39;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (file_exists($htaccess)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            // parse htaccess file&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $data = file_get_contents($htaccess);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $matches = array();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            preg_match_all(&amp;#39;#^\s+?php_value\s+([a-z_]+)\s+(.+)$#siUm&amp;#39;, $data, $matches, PREG_SET_ORDER);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if ($matches) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                foreach ($matches as $match) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    @ini_set($match[1], $match[2]);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            preg_match_all(&amp;#39;#^\s+?php_flag\s+([a-z_]+)\s+(.+)$#siUm&amp;#39;, $data, $matches, PREG_SET_ORDER);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if ($matches) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                foreach ($matches as $match) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    @ini_set($match[1], $match[2]);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>