<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Custom on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/tags/custom/</link>
    <description>Recent content in Custom on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Jul 2013 10:31:41 +0000</lastBuildDate>
    <atom:link href="http://example.com/tags/custom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tab Complete for SSH and SCP</title>
      <link>http://example.com/magento/bash/tab-complete-for-ssh-and-scp.html</link>
      <pubDate>Fri, 26 Jul 2013 10:31:41 +0000</pubDate>
      
      <guid>http://example.com/magento/bash/tab-complete-for-ssh-and-scp.html</guid>
      <description>&lt;p&gt;If you are required to connect to different servers, then remembering and typing in all of the details can become tiresome.&lt;/p&gt;

&lt;p&gt;Thankfully there is simple solution to this, using the SSH config file.&lt;/p&gt;

&lt;p&gt;To make use of this, create the following file ~/.ssh/config&lt;/p&gt;

&lt;p&gt;In there add the following details&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Host easyToRememberName
    HostName 127.0.0.1
    Port 2020
    User ross
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will then can tab completion on ssh and scp commands. You can see more of the options that can be set in the file &lt;a href=&#34;http://linux.die.net/man/5/ssh_config&#34; title=&#34;ssh config man page&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bash Terminal Rename Programmatically</title>
      <link>http://example.com/bash/bash-terminal-rename-programmatically.html</link>
      <pubDate>Wed, 16 Jan 2013 12:56:15 +0000</pubDate>
      
      <guid>http://example.com/bash/bash-terminal-rename-programmatically.html</guid>
      <description>&lt;p&gt;If you have a load of terminals open you might find it handy to be able to rename the window title on the fly.&lt;/p&gt;

&lt;p&gt;You can do this easily by copying this code into your ~/.bashrc file (or even pasting it into your terminal if you like)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; nameTerminal&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;TERM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;xterm&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ansiNrTab&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0
    &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TERM&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;rxvt&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ansiNrTab&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;61
    &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$TERM&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;konsole&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ansiNrTab&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;30&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ansiNrWindow&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0
        &lt;span class=&#34;c1&#34;&gt;# Change tab title&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ansiNrTab&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;s1&#34;&gt;$&amp;#39;\e&amp;#39;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;]&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ansiNrTab&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;$&amp;#39;\a&amp;#39;&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# If terminal support separate window title, change window title as well&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ansiNrWindow&lt;/span&gt; -a &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;s1&#34;&gt;$&amp;#39;\e&amp;#39;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;]&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$ansiNrWindow&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;$&amp;#39;\a&amp;#39;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you have pasted this into your ~/.bashrc file you need to launch a new terminal or run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From this point the function is now ready to use and you can run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;nameTerminal &lt;span class=&#34;s2&#34;&gt;&amp;quot;My Custom Terminal Window Title&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you can easily choose the terminal you want based upon the window title.&lt;/p&gt;

&lt;p&gt;Of course this then opens the door to automatically changing the window title based on all kinds of events that you might like, isn&amp;rsquo;t bash scripting fun!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Enable Category Pages to Display Subcategories</title>
      <link>http://example.com/magento/enable-category-pages-to-display-subcategories.html</link>
      <pubDate>Fri, 01 Jun 2012 15:12:22 +0000</pubDate>
      
      <guid>http://example.com/magento/enable-category-pages-to-display-subcategories.html</guid>
      <description>&lt;p&gt;Thinking of being able to set different Magento Categories to display its sub-categories which can be controllable in the Magento admin i.e. &lt;img src=&#34;http://example.com/images/Screenshot-New-Category-Manage-Categories-Categories-Catalog-Magento-Admin-Chromium-150x150.png&#34; alt=&#34;Image&#34; /&gt;
&lt;/p&gt;
You might be interested in using or viewing the zipped file here;&lt;a href=&#39;http://www.edmondscommerce.co.uk/wp-content/uploads/2012/06/subcat.zip&#39;&gt;subcat&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Controller Action Return Json (for AJAX, API etc)</title>
      <link>http://example.com/magento/magento-controller-action-return-json-for-ajax-api-etc.html</link>
      <pubDate>Wed, 15 Feb 2012 14:15:01 +0000</pubDate>
      
      <guid>http://example.com/magento/magento-controller-action-return-json-for-ajax-api-etc.html</guid>
      <description>&lt;p&gt;If you have a controller action that is designed to be accessed by AJAX requests or perhaps as part of a custom API system then you might like this snippet.&lt;/p&gt;

&lt;p&gt;If you are working with the above scenario you likely would like to return pure JSON without any HTML etc. Also serving up the correct content type headers is going to be helpful, its not HTML, its JSON.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;    public function searchAction(){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $query = $this-&amp;gt;getRequest()-&amp;gt;getParam(&amp;#39;query&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $json = Mage::getModel(&amp;#39;mymodule/mymodel&amp;#39;)-&amp;gt;getSearchJson($query);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;getResponse()-&amp;gt;setHeader(&amp;#39;Content-type&amp;#39;, &amp;#39;application/json&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;getResponse()-&amp;gt;setBody($json);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>PHP Force Download with Custom Filename</title>
      <link>http://example.com/php/php-force-download-with-custom-filename.html</link>
      <pubDate>Mon, 23 Jan 2012 15:22:03 +0000</pubDate>
      
      <guid>http://example.com/php/php-force-download-with-custom-filename.html</guid>
      <description>&lt;p&gt;If you want to serve up text files for download (perhaps product feeds etc) then you might like this little snippet.&lt;/p&gt;

&lt;p&gt;Not only will it force the file to be downloaded but it allows you to specify a custom filename that it should be saved as.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;if(isset($_GET[&amp;#39;download_file&amp;#39;])){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    header(&amp;quot;Content-type: application/octet-stream&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    header(&amp;quot;Content-Disposition: attachment; filename=Export.txt&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    readfile(&amp;#39;Export.txt&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    die;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Custom Product Type as Configurable Product</title>
      <link>http://example.com/magento/magento-custom-product-type-as-configurable-product.html</link>
      <pubDate>Fri, 20 Jan 2012 15:36:02 +0000</pubDate>
      
      <guid>http://example.com/magento/magento-custom-product-type-as-configurable-product.html</guid>
      <description>&lt;p&gt;If you have created a new product type and need to enable it to be included with configurable products you need to let Magento know that it should allow your product type to work with configurable products. To do this open your config xml and add the following xml.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;config&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;global&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;catalog&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;product&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;configurable&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;translate=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;label&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;module=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;catalog&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;lt;allow_product_types&amp;gt;&lt;/span&gt;
                            &lt;span class=&#34;nt&#34;&gt;&amp;lt;custom_type_name/&amp;gt;&lt;/span&gt;
                        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/allow_product_types&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/configurable&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/product&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/catalog&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/global&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This tells Magento to include your product type for use with configurable products.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mount --bind - like symlinks only better!</title>
      <link>http://example.com/linux/mount-bind-like-symlinks-only-better.html</link>
      <pubDate>Mon, 31 Oct 2011 16:38:13 +0000</pubDate>
      
      <guid>http://example.com/linux/mount-bind-like-symlinks-only-better.html</guid>
      <description>

&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you use Linux on a regular basis, you&amp;rsquo;ll probably know just how useful a symlink is.&lt;/p&gt;

&lt;p&gt;This makes things extremely annoying when a program refuses to work with them - treats them as a file or just refuses to work.&lt;/p&gt;

&lt;p&gt;Enter: &lt;strong&gt;mount &amp;ndash;bind&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;mount &amp;ndash;bind is a special type of mount that will mount one directory as a child of another.  Quite often this is used for simplifying partitioning or if a cpanel server runs out of disk space.&lt;/p&gt;

&lt;p&gt;The general usage at the commandline is :-
&lt;code&gt;mount &amp;ndash;bind olddir newdir&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and in the fstab :-
&lt;code&gt;olddir    newdir      none    defaults,bind   0   0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For instance, setting up a system where /home, /var and /opt share a partition and everything else is on another can be done like this in your fstab :-
&lt;code&gt;
#root fs
UUID=ebb8043d-6f1e-4a65-8d73-2c05f7ec213a /               xfs     defaults        0       1
#two tibibyte partition
UUID=6210e43f-83a3-4001-83c7-40e3b1fb9c8e /twotib         xfs     defaults        0       2&lt;/p&gt;

&lt;h1 id=&#34;following-binds&#34;&gt;Following binds&lt;/h1&gt;

&lt;p&gt;/twotib/home    /home       none    defaults,bind   0   0
/twotib/opt /opt        none    defaults,bind   0   0
/twotib/var /var        none    defaults,bind   0   0
&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Add Stylesheet to Head for Specific Category</title>
      <link>http://example.com/magento/magento-add-stylesheet-to-head-for-specific-category.html</link>
      <pubDate>Wed, 05 Oct 2011 12:12:05 +0000</pubDate>
      
      <guid>http://example.com/magento/magento-add-stylesheet-to-head-for-specific-category.html</guid>
      <description>&lt;p&gt;If you want to include a custom stylesheet for a particular category you can do this very cleanly by specifying custom layout xml in the category admin.&lt;/p&gt;

&lt;p&gt;Simply find the category you want to apply this to and then hit the ```display settings
 tab&lt;/p&gt;

&lt;p&gt;Then in the custom layout update  box, paste something like this:&lt;/p&gt;

&lt;p&gt;[xml]
&lt;reference name=&#34;head&#34;&gt;
&lt;action method=&#34;addCss&#34;&gt;&lt;stylesheet&gt;css/extra_styles.css&lt;/stylesheet&gt;&lt;/action&gt;
&lt;/reference&gt;&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;clear your cache and this stylesheet should be included in the head section for this category.&lt;/p&gt;

&lt;p&gt;You could of course do this in the layout XML files, however if you need somethign that the admin of the site can easily apply to any other new categories that needs the same treatment then this is a great solution.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Upgrade for Love My Frames</title>
      <link>http://example.com/portfolio/magento-upgrade-for-love-my-frames.html</link>
      <pubDate>Fri, 10 Jun 2011 10:05:59 +0000</pubDate>
      
      <guid>http://example.com/portfolio/magento-upgrade-for-love-my-frames.html</guid>
      <description>&lt;h2&gt;Magento Upgrade with Custom Modules Rewrite&lt;/h2&gt;

&lt;p&gt;The aim of this project was to upgrade a store from 1.3 to 1.5, without losing the functionality of the site. The old version had had its core files modified, requiring a forensic examination of them in order to find and extract what had been changed.&lt;/p&gt;

&lt;h3&gt;Love My Frames&lt;/h3&gt;

&lt;p&gt;Love My Frames is run by highly trained technicians with over 40 years&amp;rsquo; optical experience, offering the kind of personal service you would normally expect from a high street opticians. Offering the best for considerably less, professional service and door-to-door delivery, they give their customers the ultimate shopping experience online plus the opportunity to purchase the &lt;a href=”http://www.lovemyframes.com/” &gt;very latest designs at a great price&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://example.com/images/lovemyframes.jpg&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The project asked for a clean install and then rewrite of the existing store. The biggest part of the project was taking the existing layered navigation and rewriting it to work on all pages with a custom design.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Golferwithin.com - One Page Magento Store</title>
      <link>http://example.com/portfolio/one-page-magento-store.html</link>
      <pubDate>Thu, 09 Jun 2011 16:57:09 +0000</pubDate>
      
      <guid>http://example.com/portfolio/one-page-magento-store.html</guid>
      <description>&lt;h2&gt;Single Page Magento Store With Affiliate Program and PayPal Link&lt;/h2&gt;

&lt;p&gt;The aim of this project was to condense a Magento store into a single page, offering both product information and payment options. The system is to integrate with PayPal and a custom affiliate system.&lt;/p&gt;

&lt;h3&gt;Golfer Within&lt;/h3&gt;

&lt;p&gt;Run by Roseanna Leaton, one of the leading practitioners of self-improvement. A keen 9-handicap golfer, Roseanna combined her knowledge of the game and the mind mechanism to create the acclaimed Golfer Within recordings which enable any player to &lt;a href=”http://www.golferwithin.com/”&gt;lower their handicap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://example.com/images/golferwithin.jpg&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This project asked for a one click option method linking Magento to PayPal and then back again, without having to use the normal checkout pages. This required creating custom magento controllers so the method wouldn&amp;rsquo;t interfere with the other stores running off the same back end.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grass Seed Store - Migration from OSCommerce</title>
      <link>http://example.com/portfolio/grass-seed-store-migration-from-oscommerce.html</link>
      <pubDate>Thu, 09 Jun 2011 16:53:49 +0000</pubDate>
      
      <guid>http://example.com/portfolio/grass-seed-store-migration-from-oscommerce.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Grass Seed Store – Migration from OSCommerce with Custom Functionality&lt;/h2&gt;&lt;/p&gt;

&lt;p&gt;The Grass Seeds Store wants to migrate away from OSCommerce to Magento in order to improve stock management. They also need to maintain DEFRA compliance and have custom reports generated to do so. The custom reporting was based on the sales of seeds.&lt;/p&gt;

&lt;h3&gt;The Grass Seed Store&lt;/h3&gt;

&lt;p&gt;The Grass Seed Store specialises in the sale of a many different types of &lt;a href=&#34;http://www.thegrassseedstore.co.uk/&#34;&gt;grass seed, fertiliser and live stock pasture&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://example.com/images/grassseed-300x205.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This project is a great example of customising Magento to be compliant with an industry governing body and shows that Magento can be used in almost any for the sale of any type of product. The project is currently a work in progress and the Magento implementation is currently only a wire frame demonstrating the functionality that is ultimately required.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blind Express Free Sample Request</title>
      <link>http://example.com/portfolio/blind-express-free-sample-request.html</link>
      <pubDate>Thu, 09 Jun 2011 14:58:56 +0000</pubDate>
      
      <guid>http://example.com/portfolio/blind-express-free-sample-request.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Magento Free Sample Request Custom Module&lt;/h2&gt;&lt;/p&gt;

&lt;p&gt;Blind Express required that their customers be able to easily request free samples of their products. This required that a custom extension be created and integrated with the existing system.&lt;/p&gt;

&lt;h3&gt;Blind Express&lt;/h3&gt;

&lt;p&gt;Blind Express specialise in supplying made to measure and custom window &lt;a href=&#34;http://www.blindexpress.co.uk&#34;&gt;blinds&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://example.com/images/blindexpress-300x206.png&#34; alt=&#34;Image&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This project was a good challenge as the extension had to be integrated with previously existing custom product configuration.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Product Information Scraper</title>
      <link>http://example.com/portfolio/product-information-scraper.html</link>
      <pubDate>Thu, 09 Jun 2011 14:25:59 +0000</pubDate>
      
      <guid>http://example.com/portfolio/product-information-scraper.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Bespoke Object-Oriented PHP Automated Scraping System&lt;/h2&gt;&lt;/p&gt;

&lt;p&gt;The aim of this project is to put together an automated price retrial system, capable of running on its own. The system will collect general information for general products as well as more detailed information for named products.&lt;/p&gt;

&lt;h3&gt;Discs Like New&lt;/h3&gt;

&lt;p&gt;Discs Like New  offer a professional, effective and affordable &lt;a href=”http://www.discslikenew.com/”&gt;disc repair service &lt;/a&gt;to business customers throughout the UK and Europe.&lt;/p&gt;

&lt;p&gt;&lt;h3&gt;
&lt;img src=&#34;http://example.com/images/code_snippet.jpg&#34; alt=&#34;Image&#34; /&gt;
The project is interesting as it wants to be run from both a web browser, so it can be set up and product files can be uploaded; and from the command line so it can quietly run in the background. This means that it will have to detect this state and modify what it outputs accordingly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dressnimpress - New Magento Based E-commerce Site Development</title>
      <link>http://example.com/portfolio/dressnimpress-new-magento-based-e-commerce-site-development.html</link>
      <pubDate>Thu, 09 Jun 2011 14:03:15 +0000</pubDate>
      
      <guid>http://example.com/portfolio/dressnimpress-new-magento-based-e-commerce-site-development.html</guid>
      <description>&lt;p&gt;We are now working on developing a new Magento based e-commerce site for a UK based company called Dressnimpress.&lt;/p&gt;

&lt;p&gt;Our client specialises in designer clothing for both male and female and will be targeting a world wide marketplace for selling designer clothes covering all the latests and famous brands.&lt;/p&gt;

&lt;p&gt;The site will be developed from scratch by implementing designs that have been provided to us by the client. Part of the development process will include building a number of custom extensions to fulfil specific features of the site, customizing specific areas or pages of the site as per design and it will also have to support multiple currencies for the world wide audience.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP Custom Error and Exception Handler - Make PHP Stricter</title>
      <link>http://example.com/php/php-custom-error-and-exception-handler-make-php-stricter.html</link>
      <pubDate>Thu, 12 May 2011 11:20:58 +0000</pubDate>
      
      <guid>http://example.com/php/php-custom-error-and-exception-handler-make-php-stricter.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you prefer a coding style that doesn&amp;rsquo;t let you get away with as much as PHP does by default then you may like this trick.&lt;/p&gt;

&lt;p&gt;As standard PHP will let you get away with quite a lot of things that are probably not a good idea. Some times that can be great, allowing you to quickly prototype things or achieve results quickly without having to go through nit picking your code.&lt;/p&gt;

&lt;p&gt;However on the other hand if you are working on a production system that you would really rather complained as much as possible in the dev stage to help to minimise the likelihood that bugs will creep through to production then this looseness can work against you.&lt;/p&gt;

&lt;p&gt;For this reason I often use this trick to make PHP much more fussy and strict and make errors much more obvious and easier to deal with.&lt;/p&gt;

&lt;p&gt;First of all, we need to create a custom error handler. This will override the standard error handling in PHP and allow us to do what we want. What I am going to do is convert all of the standard PHP errors into exceptions.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Error Handler&lt;/b&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function ec_error_handler($severity, $message, $filename, $lineno) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    if (error_reporting() == 0) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        return;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    //if (error_reporting() &amp;amp; $severity) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    throw new ErrorException($message, 0, $severity, $filename, $lineno);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    //}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will notice that 2 lines are commented out. If uncommented, this will respect the error reporting settings of PHP. Commented out it throws an exception regardless of PHP error reporting settings.&lt;/p&gt;

&lt;p&gt;To make PHP use this function as my error handler we do the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;set_error_handler(&amp;#39;ec_error_handler&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So now every PHP error, notice etc is being converted into an exception. This gives me the ability to view stack traces and see exactly which file, line etc is involved so tracking issues down is a snap.&lt;/p&gt;

&lt;p&gt;Now though I want a nice system to capture these exceptions and dump this info to the screen.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Exception Handler&lt;/b&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function ec_exceptions_handler(Exception $e) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    ob_start();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    h(1, &amp;#39;Uncaught Exception&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    h(2, $e-&amp;gt;getMessage());&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    h(3, &amp;#39;Line &amp;#39; . $e-&amp;gt;getLine() . &amp;#39; of &amp;#39; . $e-&amp;gt;getFile());&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    foreach ($e-&amp;gt;getTrace() as $t) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        var_dump($t);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    dumpObjects();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $exceptionMessage = ob_get_clean();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    echo $exceptionMessage;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    exit(1);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This function starts the output buffer then dumps a large amount of information including the message, line and file for the exception. The full stack trace.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s also dumping all global objects using another function.&lt;/p&gt;

&lt;p&gt;This output is captured into a variable with ob_get_clean(). At this point, you might decide to log this variable to a file, database, ticketing system etc - I leave that bit to you. Finally the info is dumped to the screen and the program exits.&lt;/p&gt;

&lt;p&gt;Of course this is not something you should do in a production environment, this level of information on a production system is a welcome invitation to hackers to exploit you. However in a secure local dev environment its exactly what you need.&lt;/p&gt;

&lt;p&gt;To get PHP to use this exception handler, we do the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;set_exception_handler(&amp;#39;ec_exceptions_handler&amp;#39;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here are the other functions you will need:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Dump Objects&lt;/b&gt;
This one simply var dumps all the objects as they are at the time of the exception. This may be overkill for your situation, I leave that up to you.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function dumpObjects() {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    h(1, &amp;#39;Dumping Objects&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    foreach ($GLOBALS as $g) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (is_object($g)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            h(2, get_class($g));&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            var_dump($g);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;b&gt;H Tag Helper&lt;/b&gt;
And this is just a html helper to create H tags&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function h($n, $m){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    echo &amp;quot;&amp;lt;h$n&amp;gt;$m&amp;lt;/h$n&amp;gt;&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    flush();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I hope you find this useful. Feel free to add any comments etc below.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>