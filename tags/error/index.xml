<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Error on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/tags/error/</link>
    <description>Recent content in Error on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Apr 2013 10:14:30 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/tags/error/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Prestashop Debug Mode using the Magento Environment Variable Method</title>
      <link>https://edmondscommerce.github.io/prestashop/prestashop-debug-mode-using-the-magento-environment-variable-method.html</link>
      <pubDate>Thu, 25 Apr 2013 10:14:30 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/prestashop/prestashop-debug-mode-using-the-magento-environment-variable-method.html</guid>
      <description>&lt;p&gt;Magento developers are no doubt familiar with the concept of defining a server environment variable MAGE_IS_DEVELOPER_MODE so that when running Magento locally it is always in developer mode but there is no chance of accidently deploying a live site in developer mode.&lt;/p&gt;

&lt;p&gt;This little trick will allow you to use the same environment variable to also have the same effect when working with PrestaShop.&lt;/p&gt;

&lt;p&gt;To explain - developer mode generally means that things like error messages and debugging information are displayed clearly in the browser which makes things much easier when you are developing, to see what is going wrong.&lt;/p&gt;

&lt;p&gt;On a live site you want to keep error information hidden and generally display to the customer a more friendly error message screen that perhaps helps them find their way back to a functional section of the site or gives them information to contact the site owner directly for assistance.&lt;/p&gt;

&lt;p&gt;Anyway, to put PrestaShop in debug mode locally but have no risk of deployign this to live you can alter the file: config/defines.inc.php&lt;/p&gt;

&lt;p&gt;from&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;define(&amp;#39;_PS_MODE_DEV_&amp;#39;, false);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;define(&amp;#39;_PS_MODE_DEV_&amp;#39;, isset($_SERVER[&amp;#39;MAGE_IS_DEVELOPER_MODE&amp;#39;]));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Apache Mod Rewrite Escaped Slashes Problem &#43; Solution</title>
      <link>https://edmondscommerce.github.io/apache/apache-mod-rewrite-escaped-slashes-problem-solution.html</link>
      <pubDate>Thu, 11 Apr 2013 11:05:20 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/apache/apache-mod-rewrite-escaped-slashes-problem-solution.html</guid>
      <description>&lt;p&gt;As part of our Magento SEO service, the first thing we do is to make sure there are no issues with the crawlability and general health of the clients web site.&lt;/p&gt;

&lt;p&gt;Whilst working on the Google Webmaster Tools crawl errors for a client I noticed one specific and intruiging problem for which I couldn&amp;rsquo;t immediately see the reason, everything looked to be set up perfectly.&lt;/p&gt;

&lt;p&gt;Certain URLs were getting 404 responses. The URL was being parsed by mod_rewrite but everything looked fine so why was apache giving a 404?&lt;/p&gt;

&lt;p&gt;The problem turns out to be that the URLs contain escaped slashes (eg search/KTA-mb667k2%2F2g),&lt;/p&gt;

&lt;p&gt;The problem is that Apache actually handles the escaped slash and helpfully converts it to a real slash. That then means that it is trying to look in a sub folder that does not exist and hence the 404.&lt;/p&gt;

&lt;p&gt;Chances are you don&amp;rsquo;t want escaped slashes to really be thought of as real directory separating slashes, especially if you are using mod_rewrite.&lt;/p&gt;

&lt;p&gt;The answer is a simple one liner to be added to your vhost.conf or httpd.conf.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
AllowEncodedSlashes On

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Solution - Can&#39;t Log in to Magento Admin - No Error</title>
      <link>https://edmondscommerce.github.io/magento/solution-cant-log-in-to-magento-no-error.html</link>
      <pubDate>Tue, 04 Dec 2012 14:35:36 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/solution-cant-log-in-to-magento-no-error.html</guid>
      <description>&lt;p&gt;If you pull down a &lt;a title=&#34;Magento&#34; href=&#34;http://www.edmondscommerce.co.uk/platforms/Magento&#34;&gt;Magento&lt;/a&gt; site to a local machine, and change the database core_config table to point to the local machine, and it appears to work fine until you try to login to the site admin, there can be many issues.&lt;/p&gt;

&lt;p&gt;One of the most common ones though is not having a period (dot) in the host name - e.g. localhost/admin or martyn-desktop/admin - if you don&amp;rsquo;t have the period, the cookies don&amp;rsquo;t work properly and you end up in a login loop.&lt;/p&gt;

&lt;p&gt;To fix it, make sure your machine is accessible via a domain with a period - e.g. martyn-desktop.local - by either editing your hosts file (/etc/hosts) or check your router - it possibly already adds a domain name like .config and set your path in core_config to the same.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Percona DB on a clean CentOS </title>
      <link>https://edmondscommerce.github.io/percona/installing-percona-db-on-a-clean-centos.html</link>
      <pubDate>Fri, 09 Nov 2012 15:22:41 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/percona/installing-percona-db-on-a-clean-centos.html</guid>
      <description>&lt;p&gt;Percona is a performance optimised fork of MySQL that has gained a lot of traction in the Magento-sphere as webmasters and sysadmins alike look to squeeze the most performance out of their hardware.&lt;/p&gt;

&lt;p&gt;If you read the &lt;a href=&#34;https://edmondscommerce.github.io/platforms/magento&#34;&gt;Magento&lt;/a&gt; performance whitepaper then you will see they mention Percona DB there.&lt;/p&gt;

&lt;p&gt;To install Percona on a standard CentOS release 6.2 (Final) server you would need to run the following commands:&lt;/p&gt;

&lt;p&gt;First set up the repo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;rpm -Uhv http://www.percona.com/downloads/percona-release/percona-release-0.0-1.x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This should give you output like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Retrieving http://www.percona.com/downloads/percona-release/percona-release-0.0-1.x86_64.rpm
Preparing...                ########################################### [100%]
   1:percona-release        ########################################### [100%]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then installing should be a simple case of running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;yum install Percona-Server-client-55 Percona-Server-server-55
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However I found that this generated the following error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Error: Percona-XtraDB-Cluster-client conflicts with Percona-Server-client-55

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The problem is because MySQL is already installed and needs to be removed. You can do this with this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;yum remove mysql*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At which point running the install should work smoothly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL Server Gone Away - Large Packets the Issue?</title>
      <link>https://edmondscommerce.github.io/mysql/mysql-server-gone-away-large-packets-the-issue.html</link>
      <pubDate>Wed, 15 Aug 2012 12:58:23 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/mysql/mysql-server-gone-away-large-packets-the-issue.html</guid>
      <description>&lt;p&gt;If you are scratching your head trying to figure out why you keep getting MySQL server gone away error messages despite the fact you have bumped up all the timeout etc configurations to high values then this could be your solution.&lt;/p&gt;

&lt;p&gt;MySQL will also give you this error if you try to send a packet that is larger than the packet size defined. We had an application that was using MariaDB which has a default max allowed packet of 16M by default.&lt;/p&gt;

&lt;p&gt;The application in question was sending large amounts of data to be stored and so the solution to the gone away issues was simply to increase the max_allowed_packet configuration in my.cnf, restart the mysql daemon and the problems are sorted.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Netbeans Error Wavy Line - Alternative</title>
      <link>https://edmondscommerce.github.io/netbeans/netbeans-error-wavy-line-alternative.html</link>
      <pubDate>Thu, 19 Jan 2012 14:07:23 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/netbeans/netbeans-error-wavy-line-alternative.html</guid>
      <description>&lt;p&gt;If you use Netbeans then you have no doubt seen the red wavy underline that pops under lines that have errors.&lt;/p&gt;

&lt;p&gt;Unfortunatley if your errors relate to punctuation, eg concatenation full stops, then the red wavy line can actually obscure these making finding and fixing the error tricky.&lt;/p&gt;

&lt;p&gt;An nice alternative is to set Netbeans to use a red strikethrough instead of the wavy line. This is just as visilble but does not obscure punctuation in any way making finding and fixing the error a lot easier.&lt;/p&gt;

&lt;p&gt;To change this simply go to Tools-&amp;gt;Options-&amp;gt;Fonts &amp;amp; Colors&lt;/p&gt;

&lt;p&gt;Then Set Language to All Languages&lt;/p&gt;

&lt;p&gt;Then select Error in the category drop down&lt;/p&gt;

&lt;p&gt;Simply change the Effects: drop down from Wave Underlined line to Strike Through&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing Robust Bash Shell Scripts</title>
      <link>https://edmondscommerce.github.io/bash/writing-robust-bash-shell-scripts.html</link>
      <pubDate>Sun, 15 Jan 2012 19:28:02 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash/writing-robust-bash-shell-scripts.html</guid>
      <description>&lt;p&gt;Found this great article on writing bash scripts defensively. Glad to say most of the advice we are already following with our bash scripts however there are a couple of new things I intend to roll in on Monday.&lt;/p&gt;

&lt;p&gt;Recommended reading for anyone scripting in Bash.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.davidpashley.com/articles/writing-robust-shell-scripts.html&#34;&gt;http://www.davidpashley.com/articles/writing-robust-shell-scripts.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mysql_dump not restored correctly 1064: USING BTREE &#43; fix</title>
      <link>https://edmondscommerce.github.io/mysql/mysql_dump-not-restored-correctly-1064-using-btree-fix.html</link>
      <pubDate>Thu, 10 Nov 2011 18:30:05 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/mysql/mysql_dump-not-restored-correctly-1064-using-btree-fix.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
When migrating one server to another you often hit bumps in the road.  Todays was transferring a database from one server to another.&lt;/p&gt;

&lt;p&gt;During this standard procedure I found that the restored database was missing a few tables.  Irritating as Magento doesn&amp;rsquo;t like missing tables.&lt;/p&gt;

&lt;p&gt;Digging down into the backup and extracting the first missing table I was able to replicate the error which came out as
&lt;code&gt;1064 - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;lsquo;USING BTREE&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I eventually found out that some versions of mysql 5.1 export a dump file that contains mysql5.1 specific features and loading the file into mysql 5.0 will not work.&lt;/p&gt;

&lt;p&gt;The solution is a little frustrating but if you run the command with the &amp;ndash;compatible=mysql40 switch, the dump file extracts fine :-
&lt;code&gt;mysqldump &amp;ndash;compatible=mysql40&lt;/code&gt;
Don&amp;rsquo;t ask me why there&amp;rsquo;s no &amp;ndash;compatible=mysql50 flag.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The user specified as a definer (&#39;something&#39;@&#39;somewhere&#39;) does not exist &#43;SOLVED</title>
      <link>https://edmondscommerce.github.io/mysql/the-user-specified-as-a-definer-somethingsomewhere-does-not-exist-solved.html</link>
      <pubDate>Tue, 11 Oct 2011 13:34:26 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/mysql/the-user-specified-as-a-definer-somethingsomewhere-does-not-exist-solved.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
Today I was working on an oscommerce site and took a backup of their database, created the usual details from their config file on my local mysql and the above error came up (with admin@localhost for what it&amp;rsquo;s worth).&lt;/p&gt;

&lt;p&gt;Upon investigation, a trigger had been created on the database whilst logged in via a different user than the user specified in the config file.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s actually a few solutions depending on your needs :-
Ensure the user (something@somewhere) is created on your new database installation
Delete the trigger (for instance if testing locally and you know it&amp;rsquo;s not needed)
Edit the DB dump file, find the definition of the trigger and change it to the configured user.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PHP DomPDF Bug - page_cache.cls.php on line 66 dompdf &#43; Solution</title>
      <link>https://edmondscommerce.github.io/php/php-dompdf-bug-page_cache-cls-php-on-line-66-dompdf-solution.html</link>
      <pubDate>Fri, 24 Jun 2011 15:29:39 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/php-dompdf-bug-page_cache-cls-php-on-line-66-dompdf-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are struggling with a weird bug with DomPDF, something about it trying to connect to a postgres database..&lt;/p&gt;

&lt;p&gt;well here is the solution that will get you up and running:&lt;/p&gt;

&lt;p&gt;open the file and make the init method just return false&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;class Page_Cache {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    const DB_USER = &amp;quot;dompdf_page_cache&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    const DB_PASS = &amp;quot;some meaningful password&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    const DB_NAME = &amp;quot;dompdf_page_cache&amp;quot;;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    static private $__connection = null;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    function init() {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        return false;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (is_null(self::$__connection)) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            $con_str = &amp;quot;host=&amp;quot; . DB_HOST .&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    &amp;quot; dbname=&amp;quot; . self::DB_NAME .&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    &amp;quot; user=&amp;quot; . self::DB_USER .&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                    &amp;quot; password=&amp;quot; . self::DB_PASS;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;            if (!self::$__connection = pg_connect($con_str))&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                throw new Exception(&amp;quot;Database connection failed.&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Not sure really why this is trying to do this, obviously some kind of hard coded postgres caching system but anyway this fixed it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL Got Error 28 From Storage Engine &#43; Solution</title>
      <link>https://edmondscommerce.github.io/linux/mysql-got-error-28-from-storage-engine-solution.html</link>
      <pubDate>Tue, 10 May 2011 11:03:51 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/mysql-got-error-28-from-storage-engine-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you get the error:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Got error 28 from storage engine query&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you are trying to access your web site, database or phpMyAdmin then the problem is likely to be that you have run out of hard disk space.&lt;/p&gt;

&lt;p&gt;If you have command line access you can quickly check this by running&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
df -h

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you do see a partition with low or no space then the solution is simply to find and remove files that are not required and you should be back up and running.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sed Error Unknown option to &#39;s&#39; &#43; Solution</title>
      <link>https://edmondscommerce.github.io/linux/sed-error-unknown-option-to-s-solution.html</link>
      <pubDate>Wed, 02 Mar 2011 22:34:30 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/sed-error-unknown-option-to-s-solution.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are struggling to figure out why your Sed script is failing this could well be the solution.&lt;/p&gt;

&lt;p&gt;Every example you see using sed specifies / as a delimiter.&lt;/p&gt;

&lt;p&gt;Now what if your pattern actually includes a slash in the body text?&lt;/p&gt;

&lt;p&gt;If you are using a variable you might not realise that you are including a slash.&lt;/p&gt;

&lt;p&gt;Easy thing to do, just switch the delimiter to something else like #&lt;/p&gt;

&lt;p&gt;so&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sed &amp;quot;s/find/$REPLACE/&amp;quot; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;becomes&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sed &amp;quot;s#find#$REPLACE#&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and hey presto it works!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Dataflow Images Not Working &#43; Solution</title>
      <link>https://edmondscommerce.github.io/magento/magento-dataflow-images-not-working-solution.html</link>
      <pubDate>Thu, 17 Feb 2011 16:03:49 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-dataflow-images-not-working-solution.html</guid>
      <description>&lt;p&gt;If you are struggling to understand why Magento is not finding images that are definitely there, the problem may well be that you are not prefixing your image with a slash, i.e for a new image we would put:&lt;/p&gt;

&lt;p&gt;/image.jpg&lt;/p&gt;

&lt;p&gt;and the image would be in&lt;/p&gt;

&lt;p&gt;media/import/image.jpg&lt;/p&gt;

&lt;p&gt;Unfortunately whoever wrote the Dataflow product importer though it would be a good idea to silently capture all exceptions on image imports which removes any useful error messages that might occur (such as no image at media/importimage.jpg)&lt;/p&gt;

&lt;p&gt;If you would prefer to fix this, you can override Mage_Catalog_Model_Convert_Adapter_Product&lt;/p&gt;

&lt;p&gt;Copy the saveRow() method into your overriding class and then change this bit&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;foreach ($imageData as $file =&amp;gt; $fields) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            try {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                $filepath = Mage::getBaseDir(&amp;#39;media&amp;#39;) . DS . &amp;#39;import&amp;#39; . trim($file);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                $product-&amp;gt;addImageToMediaGallery($filepath, $fields);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            } catch (Exception $e) {}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To something like this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;foreach ($imageData as $file =&amp;gt; $fields) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            //try {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                $filepath = Mage::getBaseDir(&amp;#39;media&amp;#39;) . DS . &amp;#39;import&amp;#39; . trim($file);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                $product-&amp;gt;addImageToMediaGallery($filepath, $fields);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;           //} catch (Exception $e) {}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento Debugging - An Introduction to Magento Exception Logging and Developer Mode</title>
      <link>https://edmondscommerce.github.io/magento/magento-debugging-an-introduction-to-magento-exception-logging-and-developer-mode.html</link>
      <pubDate>Mon, 29 Nov 2010 10:18:58 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-debugging-an-introduction-to-magento-exception-logging-and-developer-mode.html</guid>
      <description>&lt;p&gt;One of the first stumbling blocks newcomers to Magento might find is that when things go wrong, they don&amp;rsquo;t know how to find out what it is that&amp;rsquo;s actually going wrong.&lt;/p&gt;

&lt;p&gt;This is because Magento does an excellent job of keeping all of the error information away from people browsing the site. This is without a doubt a very good thing. Error messages can often contain information that would help an attacker compromise your system.&lt;/p&gt;

&lt;p&gt;What Magento does instead (if you have it enabled) is to log all error information to log files which you can then access via FTP etc to view the error information. This is in much the same way as a well configured web server will not display error information generated by PHP itself but will instead display the &amp;ldquo;white screen of death&amp;rdquo; and log the error information to a file.&lt;/p&gt;

&lt;p&gt;Magento exceptions can range from minor notices to major issues but not fatal errors. If PHP has a fatal error then this will be handled by PHP itself.&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;Magento Exception Logging&lt;/h2&gt;
If you are experiencing errors with Magento, the first thing you need to do is to make sure exception logging is enabled.&lt;/p&gt;

&lt;p&gt;In the admin go to:&lt;/p&gt;

&lt;p&gt;System-&amp;gt;Configuration &amp;gt; Developer &amp;gt; Log Settings &amp;gt; Enabled = Yes&lt;/p&gt;

&lt;p&gt;You can also set custom locations for your error log files, though the defaults are normally fine. Make sure the folder is writeable.&lt;/p&gt;

&lt;p&gt;Now if you are having errors, you can look in var/log at the exception.log and/or system.log files that have been generated.&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;Magento Developer Mode&lt;/h2&gt;
If you are developing locally and you would like to make Magento dump error information to screen instead of logging to a file, this is very easy to do. You simply need to set the site to run in Developer Mode.&lt;/p&gt;

&lt;p&gt;The most secure way to do this (in the sense that you won&amp;rsquo;t accidently set your live store in Developer Mode) is to edit your local apache configuration and add this line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
SetEnv MAGE_IS_DEVELOPER_MODE &amp;quot;true&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You need to set this up in the directory you are running Magento, for example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;lt;Directory &amp;quot;/opt/lampp/htdocs&amp;quot;&amp;gt;
    #
    # Possible values for the Options directive are &amp;quot;None&amp;quot;, &amp;quot;All&amp;quot;,
    # or any combination of:
    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
    #
    # Note that &amp;quot;MultiViews&amp;quot; must be named *explicitly* --- &amp;quot;Options All&amp;quot;
    # doesn&#39;t give it to you.
    #
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.2/mod/core.html#options
    # for more information.
    #
    #Options Indexes FollowSymLinks
    # XAMPP
    Options Indexes FollowSymLinks ExecCGI Includes
        SetEnv MAGE_IS_DEVELOPER_MODE &amp;quot;true&amp;quot;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now any Magento site you run from within that folder (or any sub folder) will be running in Developer Mode when you are working locally, but will still be in the much more secure normal mode on the live server, without you having to edit any files within Magento itself.&lt;/p&gt;

&lt;p&gt;If you prefer, you can add this line to your .htaccess file, or you can edit the index.php file to force Developer Mode however with either of these approaches there is always the risk you will accidently upload this file and set your live store into Developer Mode.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Detailed Exception Log</title>
      <link>https://edmondscommerce.github.io/magento/magento-detailed-exception-log.html</link>
      <pubDate>Mon, 18 Oct 2010 10:20:02 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-detailed-exception-log.html</guid>
      <description>&lt;p&gt;I have never been a particular fan of PHP&amp;rsquo;s standard stack trace - it tantalises you with a short snippet of info for each step of the trace that always seems to miss off the really useful bit of info.&lt;/p&gt;

&lt;p&gt;I have done previous posts before on how to get a more detailed stack trace. If you want to have this in Magento you need to edit Mage.php (I currently don&amp;rsquo;t know a way of overriding Mage.php) with this code (around line 724)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;    /**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * Write exception to log&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     *&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param Exception $e&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public static function logException(Exception $e)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (!self::getConfig()) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            return;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $file = self::getStoreConfig(&amp;#39;dev/log/exception_file&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        //self::log(&amp;quot;\n&amp;quot; . $e-&amp;gt;__toString(), Zend_Log::ERR, $file);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $exceptionDump = &amp;quot;\n\nDETAILED EXCEPTION DUMP\n\n&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;		foreach($e-&amp;gt;getTrace() as $n=&amp;gt; $t){&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;			$exceptionDump .= &amp;quot;\n\n------------\n#$n\n&amp;quot; . var_export($t, true) . &amp;quot;\n&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;		}&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        self::log(&amp;quot;\n&amp;quot; . $exceptionDump, Zend_Log::ERR, $file);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>