<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dom on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/tags/dom/</link>
    <description>Recent content in Dom on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Aug 2012 18:29:43 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/tags/dom/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Simple PHP Scraping with jQuery Like Selectors using Simple HTML Dom</title>
      <link>http://edmondscommerce.github.io/scraping/simple-php-scraping-with-jquery-like-selectors-using-simpledom.html</link>
      <pubDate>Tue, 21 Aug 2012 18:29:43 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/scraping/simple-php-scraping-with-jquery-like-selectors-using-simpledom.html</guid>
      <description>&lt;p&gt;If you need to do some HTML parsing, scraping etc then you generally have the choice of using the DOM approach to parse the HTML or using regex to pull bits out. I quite like both approaches, there are pros and cons to both so having both options available is the best to ensure you use the right tool for the job on a case by case basis.&lt;/p&gt;

&lt;p&gt;Recently though I discovered Simple HTML Dom. This makes the DOM based approach almost ridiculously easy, especially if you are comfortable with jQuery like selectors for pulling out specific DOM nodes.&lt;/p&gt;

&lt;p&gt;You can read all about it here:
&lt;a href=&#34;http://simplehtmldom.sourceforge.net/manual.htm&#34; title=&#34;Simple HTML Dom&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://simplehtmldom.sourceforge.net/manual.htm&#34; target=&#34;_blank&#34;&gt;http://simplehtmldom.sourceforge.net/manual.htm&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First impressions are really good, its very easy and the lead in time from installation to using is really fast. I like that, never been much of a fan of having to RTFM for everything!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JQuery Keeping Click Handler when Updating Content - Live Binding</title>
      <link>http://edmondscommerce.github.io/jquery/jquery-keeping-click-handler-when-updating-content-live-binding.html</link>
      <pubDate>Wed, 31 Aug 2011 15:02:23 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/jquery/jquery-keeping-click-handler-when-updating-content-live-binding.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
If you are using jQuery and attaching click handlers etc to elements as part of your document ready block, you may find you are losing those handlers if you update the page with Javascript after load.&lt;/p&gt;

&lt;p&gt;For example if you have some kind of slide show which involves redrawing the contents of a div, you might find that the click handlers you had attached to the links of class &amp;lsquo;slideshow-link&amp;rsquo; stop working.&lt;/p&gt;

&lt;p&gt;Of course you can reattach handlers manually after dropping in your new HTML but that&amp;rsquo;s pretty messy.&lt;/p&gt;

&lt;p&gt;A much nicer solution is this:&lt;/p&gt;

&lt;p&gt;Instead of using&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;jQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.slideshow-link&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can use&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;jQuery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.slideshow-link&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;live&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The Live method will keep the attachment to elements matching the selector now and in the future.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://api.jquery.com/live/&#34;&gt;http://api.jquery.com/live/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gotta love jQuery ;)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>