<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/</link>
    <description>Recent content on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Nov 2016 10:31:29 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Magento 2 Vendor Module and App/code Issues</title>
      <link>https://edmondscommerce.github.io/magento-2-vendor-module-and-app/code-issues/</link>
      <pubDate>Tue, 29 Nov 2016 10:31:29 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-2-vendor-module-and-app/code-issues/</guid>
      <description>&lt;p&gt;We recently came across a recurring (and annoying) problem with some of our Magento 2 modules.
The issue was that when ever composer install/update was called the module would be copied to app/code and thus cause class name conflicts with the canonical module in vendor.&lt;/p&gt;

&lt;p&gt;The fix for this was hard to find and it turns out the Magento 2&amp;rsquo;s documentation needs updating.&lt;/p&gt;

&lt;p&gt;To fix the problem, look to your module&amp;rsquo;s &lt;code&gt;composer.json&lt;/code&gt; and find the &lt;code&gt;extra&lt;/code&gt; field.&lt;/p&gt;

&lt;p&gt;If it is present and contains a &lt;code&gt;map&lt;/code&gt; directive like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;s2&#34;&gt;&amp;quot;extra&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;map&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
            &lt;span class=&#34;s2&#34;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;s2&#34;&gt;&amp;quot;VendorName/ModuleName&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then remove it, but ensure that your PSR-4 namespacing is set up correctly.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;autoload&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;quot;files&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
            &lt;span class=&#34;s2&#34;&gt;&amp;quot;registration.php&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;quot;psr-4&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;VendorName\\ModuleName\\&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See the following &lt;a href=&#34;https://github.com/edmondscommerce/magento2-migrations/commit/ba6e5976873d73a817624e35f062d47da0537a99&#34;&gt;commit&lt;/a&gt; and &lt;a href=&#34;https://github.com/edmondscommerce/magento2-migrations/blob/master/composer.json&#34;&gt;composer.json&lt;/a&gt; for a full example&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Admins Black Friday Survival Public Service Announcement</title>
      <link>https://edmondscommerce.github.io/magento-admins-black-friday-survival-public-service-announcement/</link>
      <pubDate>Fri, 25 Nov 2016 11:25:47 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-admins-black-friday-survival-public-service-announcement/</guid>
      <description>

&lt;h1 id=&#34;magento-site-being-flooded-with-buyers-struggling-with-server-load&#34;&gt;Magento Site Being Flooded with Buyers, Struggling with Server Load?&lt;/h1&gt;

&lt;p&gt;If your Magento site is currently being flooded with orders and visitors and the server is struggling to cope then I have one simple and easy to action tip for you:&lt;/p&gt;

&lt;h3 id=&#34;do-as-little-as-possible-in-the-admin&#34;&gt;&lt;em&gt;Do as little as possible in the admin&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Did you know that every time you update product details and other wise change things in the admin then you are likely to cause one or both of the indexes and caches to require a flush?&lt;/p&gt;

&lt;p&gt;In normal operation that is not a big deal, but if your server is being maxed out then you really don&amp;rsquo;t want to force it to stop serving requests and spend precious seconds rebuilding caches and indexes.&lt;/p&gt;

&lt;p&gt;Furthermore, the admin is in itself a heavy beast that your webserver has to do a lot of work to prepare each page load. As a total &lt;em&gt;finger in the air estimate&lt;/em&gt; I&amp;rsquo;d say a single admin page view is worth around &lt;em&gt;10&lt;/em&gt; front end page views. If you are making good use of caching then that could be more like &lt;em&gt;100&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This means that if you want your site to continue working on the front end through Black Friday then I really suggest you restrict admin usage to the minimum.&lt;/p&gt;

&lt;h3 id=&#34;stuck-for-something-to-do&#34;&gt;Stuck for something to do?&lt;/h3&gt;

&lt;p&gt;Why not fire up Google Analytics real time stats, put your feet up and drink tea whilst watching people flood through your checkout process :)&lt;/p&gt;

&lt;h3 id=&#34;commercial-bit&#34;&gt;&lt;em&gt;Commercial Bit:&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Of course, if you are realising that you really could have been better prepared for today&amp;hellip;&lt;/p&gt;

&lt;p&gt;That you are losing sales because your site and server are not performing at their best..&lt;/p&gt;

&lt;p&gt;You are starting to think that you could do with some high quality professional Magento expertise&amp;hellip;&lt;/p&gt;

&lt;p&gt;Then why not get in touch with &lt;a href=&#34;https://www.edmondscommerce.co.uk&#34; target=&#34;_blank&#34;&gt;Edmonds Commerce&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;0044 113 880 5654&lt;/p&gt;

&lt;p&gt;Cheers&lt;/p&gt;

&lt;p&gt;Joseph&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento 2 - Error Running Setup:upgrade</title>
      <link>https://edmondscommerce.github.io/magento-2---error-running-setupupgrade/</link>
      <pubDate>Tue, 08 Nov 2016 11:48:47 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-2---error-running-setupupgrade/</guid>
      <description>&lt;p&gt;When trying to update a Magento 2 database recently using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;php bin/magento setup:upgrade
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I also tried:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;php bin/magento setup:upgrade --keep-generated
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I got the following error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;  [Exception]                                                                             &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  Warning: file_get_contents(.../var/di/setup.ser): failed to open   &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  stream: No such file or directory in .../vendor/magento/framework  &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;  /App/ObjectManager/ConfigLoader/Compiled.php on line 28&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It looks like a regression was introduced in 2.1.0 that stops you running &lt;code&gt;setup:upgrade&lt;/code&gt; after
running &lt;code&gt;setup:di:compile&lt;/code&gt;. A temporary fix for this is to remove all contents from
&lt;code&gt;var/di&lt;/code&gt; and &lt;code&gt;var/generation&lt;/code&gt;, run the update and then re-compile.&lt;/p&gt;

&lt;p&gt;This has been fixed in Magento 2.1.1 and is detailed in
&lt;a href=&#34;https://github.com/magento/magento2/issues/4795&#34; target=&#34;_blank&#34;&gt;this&lt;/a&gt; github issue.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento 2 Migrations</title>
      <link>https://edmondscommerce.github.io/magento-2-migrations/</link>
      <pubDate>Fri, 04 Nov 2016 14:00:49 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-2-migrations/</guid>
      <description>

&lt;h1 id=&#34;contents&#34;&gt;Contents&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#intro&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#m1mig&#34;&gt;Magento 1.x Migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#m2mig&#34;&gt;Magento 2.x Migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ecmig&#34;&gt;Edmonds Commerce Migrations&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&#34;intro&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;&lt;a name=&#34;mig&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;database-migrations&#34;&gt;Database Migrations&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;See also: &lt;a href=&#34;https://en.wikipedia.org/wiki/Schema_migration&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Schema_migration&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Database migrations are a way of setting database state pragmatically, it is used in various frameworks, platforms and ORMs like Laravel&amp;rsquo;s Eloquent, Symfony&amp;rsquo;s Doctrine among many.&lt;/p&gt;

&lt;p&gt;There are many different use cases for migrations during development, they can be used to reduce the technical debt to a database during development allowing it to be a decoupled part of the project.
Internally we use migrations for newer projects to bootstrap different parts of a Magento store before it is launched, like CMS pages, blocks and configuration of the store itself.&lt;/p&gt;

&lt;p&gt;This has the benefit of having a new store set up become much easier to manage, all the content is present and the only steps remaining for launch is to update DNS to the new platform.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;m1mig&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;magento-1-s-migrations&#34;&gt;Magento 1&amp;rsquo;s migrations&lt;/h1&gt;

&lt;p&gt;In Magento 1.x there is a system where by all changes in database structure and content is done incrementally using version numbering and a database table to track the status of database in comparison to a module&amp;rsquo;s version.&lt;/p&gt;

&lt;h2 id=&#34;install-upgrades-and-versioning&#34;&gt;Install, Upgrades and Versioning&lt;/h2&gt;

&lt;p&gt;There are two sides to Magento setup and migration scripts, structure (known as sql internally) and data.
When Magento encounters a new or updated module it will check if there are any changes to the database structure or contents by searching for a corresponding script in the sql and data directories.
The version number of the module triggers this when it is greater than the version number that Magento has stored, Magento will then automatically trigger the structure change and data updates in turn.&lt;/p&gt;

&lt;h2 id=&#34;application-flow&#34;&gt;Application Flow&lt;/h2&gt;

&lt;p&gt;Here is a detailed breakdown of how Magento 1 performs updates of the database&lt;/p&gt;

&lt;div&gt;
&lt;ul&gt;
    &lt;li&gt;Boot&lt;/li&gt;
    &lt;li&gt;Check for if any modules have increased in version number &lt;br/&gt;
        &lt;a href=&#34;https://github.com/OpenMage/magento-mirror/blob/magento-1.9/app/code/core/Mage/Core/Model/Resource/Setup.php#L314&#34;&gt;Code&lt;/a&gt;
        &lt;ul&gt;
            &lt;li&gt;
                Found a higher/lower version module
                &lt;ul&gt;
                    &lt;li&gt;Find SQL/Data scripts to run to reach target version &lt;br/&gt;
                        &lt;a href=&#34;https://github.com/OpenMage/magento-mirror/blob/magento-1.9/app/code/core/Mage/Core/Model/Resource/Setup.php#L616&#34;&gt;Code&lt;/a&gt;
                        &lt;ul&gt;
                            &lt;li&gt;Start update process&lt;/li&gt;
                            &lt;li&gt;
                                Execute SQL/Data scripts in sequence
                                &lt;ul&gt;
                                    &lt;li&gt;
                                        Run script from version X to version Y or run initial install script &lt;br/&gt;
                                        &lt;a href=&#34;https://github.com/OpenMage/magento-mirror/blob/magento-1.9/app/code/core/Mage/Catalog/data/catalog_setup/data-install-1.6.0.0.php&#34;&gt;Example Install&lt;/a&gt;&lt;br /&gt;
                                        &lt;a href=&#34;https://github.com/OpenMage/magento-mirror/blob/magento-1.9/app/code/core/Mage/Catalog/data/catalog_setup/data-upgrade-1.6.0.0.4-1.6.0.0.5.php&#34;&gt;Example Update&lt;/a&gt;
                                    &lt;/li&gt;
                                &lt;/ul&gt;
                            &lt;/li&gt;
                            &lt;li&gt;End update process&lt;/li&gt;
                        &lt;/ul&gt;
                    &lt;/li&gt;
                &lt;/ul&gt;
            &lt;/li&gt;
            &lt;li&gt;Return to normal application flow&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;Return output&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;h2 id=&#34;structure&#34;&gt;Structure&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Core Mage Catalog Setup Structure (Snippet)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;.
├── data
│   └── catalog_setup
│       ├── data-install-1.6.0.0.php
│       ├── data-upgrade-1.6.0.0.12-1.6.0.0.13.php
│       ├── data-upgrade-1.6.0.0.13-1.6.0.0.14.php
│       ├── data-upgrade-1.6.0.0.4-1.6.0.0.5.php
│       └── data-upgrade-1.6.0.0.8-1.6.0.0.9.php
├── etc
│   ├── config.xml
└── sql
    └── catalog_setup
        ├── install-1.6.0.0.php
        ├── mysql4-data-upgrade-0.7.57-0.7.58.php
        ├── mysql4-data-upgrade-0.7.63-0.7.64.php
        ├── mysql4-data-upgrade-1.4.0.0.28-1.4.0.0.29.php
        ├── mysql4-data-upgrade-1.4.0.0.42-1.4.0.0.43.php
        ├── mysql4-install-0.7.0.php
        ├── mysql4-install-1.4.0.0.0.php
        ├── mysql4-upgrade-0.6.40-0.7.0.php
        ├── mysql4-upgrade-0.7.0-0.7.1.php
        ├── mysql4-upgrade-0.7.1-0.7.2.php
        ├── mysql4-upgrade-0.7.11-0.7.12.php
        ├── mysql4-upgrade-0.7.12-0.7.13.php
        ├── mysql4-upgrade-0.7.13-0.7.14.php
        ├── mysql4-upgrade-0.7.14-0.7.15.php
        ├── mysql4-upgrade-0.7.15-0.7.16.php
        ├── mysql4-upgrade-0.7.16-0.7.17.php
        ├── mysql4-upgrade-0.7.17-0.7.18.php
        ├── mysql4-upgrade-0.7.18-0.7.19.php
        ├── mysql4-upgrade-0.7.19-0.7.20.php
        ├── mysql4-upgrade-0.7.20-0.7.21.php
        ├── mysql4-upgrade-0.7.2-0.7.3.php
        ├── upgrade-1.6.0.0.10-1.6.0.0.11.php
        ├── upgrade-1.6.0.0.11-1.6.0.0.12.php
        ├── upgrade-1.6.0.0.1-1.6.0.0.2.php
        ├── upgrade-1.6.0.0.14-1.6.0.0.15.php
        ├── upgrade-1.6.0.0.15-1.6.0.0.18.php
        ├── upgrade-1.6.0.0-1.6.0.0.1.php
        ├── upgrade-1.6.0.0.18-1.6.0.0.19.php
        ├── upgrade-1.6.0.0.19.1.1-1.6.0.0.19.1.2.php
        ├── upgrade-1.6.0.0.2-1.6.0.0.3.php
        ├── upgrade-1.6.0.0.3-1.6.0.0.4.php
        ├── upgrade-1.6.0.0.4-1.6.0.0.5.php
        ├── upgrade-1.6.0.0.5-1.6.0.0.6.php
        ├── upgrade-1.6.0.0.6-1.6.0.0.7.php
        ├── upgrade-1.6.0.0.7-1.6.0.0.8.php
        └── upgrade-1.6.0.0.9-1.6.0.0.10.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;configuring-structure-changes&#34;&gt;Configuring Structure Changes&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- app/code/core/Mage/Catalog/etc/config.xml --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;config&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;global&amp;gt;&lt;/span&gt;
        ...
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;resources&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;catalog_setup&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;setup&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;Mage_Catalog&lt;span class=&#34;nt&#34;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
                    &lt;span class=&#34;nt&#34;&gt;&amp;lt;class&amp;gt;&lt;/span&gt;Mage_Catalog_Model_Resource_Setup&lt;span class=&#34;nt&#34;&gt;&amp;lt;/class&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;/setup&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/catalog_setup&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/resources&amp;gt;&lt;/span&gt;
        ...
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/global&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Below are a few examples from Magento core modules that the data and structure of the database&lt;/p&gt;

&lt;h4 id=&#34;catalog-data-snippet-examples&#34;&gt;Catalog Data Snippet Examples&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;// Create Root Catalog Node&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;Mage::getModel(&amp;#39;catalog/category&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;load(1)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;setId(1)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;setStoreId(0)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;setPath(1)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;setLevel(0)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;setPosition(0)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;setChildrenCount(0)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;setName(&amp;#39;Root Catalog&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;setInitialSetupFlag(true)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;save();&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;//Add Category Attribute Groups&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$groups = array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;display&amp;#39;   =&amp;gt; array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;name&amp;#39;  =&amp;gt; &amp;#39;Display Settings&amp;#39;,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;sort&amp;#39;  =&amp;gt; 20,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;id&amp;#39;    =&amp;gt; null&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    ),&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &amp;#39;design&amp;#39;    =&amp;gt; array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;name&amp;#39;  =&amp;gt; &amp;#39;Custom Design&amp;#39;,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;sort&amp;#39;  =&amp;gt; 30,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;id&amp;#39;    =&amp;gt; null&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    )&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;foreach ($groups as $k =&amp;gt; $groupProp) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $installer-&amp;gt;addAttributeGroup($entityTypeId, $attributeSetId, $groupProp[&amp;#39;name&amp;#39;], $groupProp[&amp;#39;sort&amp;#39;]);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    $groups[$k][&amp;#39;id&amp;#39;] = $installer-&amp;gt;getAttributeGroupId($entityTypeId, $attributeSetId, $groupProp[&amp;#39;name&amp;#39;]);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;reviews-setup-snippets&#34;&gt;Reviews Setup Snippets&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Create table &amp;#39;review/review_entity&amp;#39;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$table = $installer-&amp;gt;getConnection()&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;newTable($installer-&amp;gt;getTable(&amp;#39;review/review_entity&amp;#39;))&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;addColumn(&amp;#39;entity_id&amp;#39;, Varien_Db_Ddl_Table::TYPE_SMALLINT, null, array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;identity&amp;#39;  =&amp;gt; true,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;unsigned&amp;#39;  =&amp;gt; true,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;nullable&amp;#39;  =&amp;gt; false,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;primary&amp;#39;   =&amp;gt; true,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        ), &amp;#39;Review entity id&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;addColumn(&amp;#39;entity_code&amp;#39;, Varien_Db_Ddl_Table::TYPE_TEXT, 32, array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;nullable&amp;#39;  =&amp;gt; false&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        ), &amp;#39;Review entity code&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;setComment(&amp;#39;Review entities&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$installer-&amp;gt;getConnection()-&amp;gt;createTable($table);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;/**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; * Create table &amp;#39;review/review_status&amp;#39;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$table = $installer-&amp;gt;getConnection()&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;newTable($installer-&amp;gt;getTable(&amp;#39;review/review_status&amp;#39;))&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;addColumn(&amp;#39;status_id&amp;#39;, Varien_Db_Ddl_Table::TYPE_SMALLINT, null, array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;identity&amp;#39;  =&amp;gt; true,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;unsigned&amp;#39;  =&amp;gt; true,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;nullable&amp;#39;  =&amp;gt; false,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;primary&amp;#39;   =&amp;gt; true,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        ), &amp;#39;Status id&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;addColumn(&amp;#39;status_code&amp;#39;, Varien_Db_Ddl_Table::TYPE_TEXT, 32, array(&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &amp;#39;nullable&amp;#39;  =&amp;gt; false,&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        ), &amp;#39;Status code&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    -&amp;gt;setComment(&amp;#39;Review statuses&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$installer-&amp;gt;getConnection()-&amp;gt;createTable($table);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;workflow&#34;&gt;Workflow&lt;/h2&gt;

&lt;p&gt;As mentioned in the introduction, we use migrations to bootstrap new stores (or existing stores) from install all the way through to being transactional.
In the case of Magento, we rarely use the SQL install scripts and tend to use data scripts (as that is what we are working with).&lt;/p&gt;

&lt;p&gt;Quite often we find that we are repeating ourselves when generating different content, like product attributes and over time we created a small module that standardises the creation of these elements.
We aptly named the new module &amp;ldquo;migrations&amp;rdquo; and from there we have added more functionality over time to speed up the creation of new sites and passing this benefit on to clients.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;m2mig&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;magento-2-migrations&#34;&gt;Magento 2 Migrations&lt;/h1&gt;

&lt;h2 id=&#34;differences-to-magento-1&#34;&gt;Differences to Magento 1&lt;/h2&gt;

&lt;p&gt;In Magento 2 there is a big shift in workflow, there are no version numbers in file names and the number of setup scripts does not increase as the module matures but the size of the scripts will do.
This is one of the many stumbling blocks M1 developers will encounter when moving to Magento 2.&lt;/p&gt;

&lt;p&gt;There is no concrete workflow on how setup scripts have to be done as there was in Magento 1, this can be confusing at first but allows a developer to define how they would like migrations to be run.&lt;/p&gt;

&lt;h3 id=&#34;idempotent-setup&#34;&gt;Idempotent Setup&lt;/h3&gt;

&lt;p&gt;One concept that prevails from this new approach is that migrations can now be idempotent out of the box.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Wikipedia: &lt;a href=&#34;https://en.wikipedia.org/wiki/Idempotence&#34; target=&#34;_blank&#34;&gt;https://en.wikipedia.org/wiki/Idempotence&lt;/a&gt;
&amp;gt; Idempotence is the property of certain operations in mathematics and computer science, that can be applied multiple times without changing the result beyond the initial application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This approach will emphasize that checks on the current database state has to be checked before changes are made, examples include checking that we do not recreate an attribute or other element that does not exist and visa versa when removing data or modify existing tables
Developers will need to be more cautious and test different variations of the setup script, it would also be a good idea to shard large setup files in to smaller categorised chunks for ease of use when making further changes.&lt;/p&gt;

&lt;h3 id=&#34;abstraction-and-dependency-injection&#34;&gt;Abstraction and Dependency Injection&lt;/h3&gt;

&lt;p&gt;In Magento 2 dependency injection and &lt;code&gt;ObjectManager&lt;/code&gt; has replaced the much loved super object &lt;code&gt;Mage&lt;/code&gt; meaning we now have more control over what is instantiated a class constructor.
This has also had an impact on how we approach setup scripts and migrations in that we can now abstract away reusable chunks of code and tailor them to our module.&lt;/p&gt;

&lt;p&gt;An example of this would be needing to create attributes in different ways, we could create a new class and inject the setup class used (as shown in the example above) or we could extend the setup class to add our new logic&lt;/p&gt;

&lt;p&gt;From here we could allow the use of file based system to load content like static blocks/pages and allow faster iteration of content (instead of using the Magento admin which takes donkey&amp;rsquo;s years).
An example of what this could look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;./app/code/vendor/module
  ├── etc
  ├── registration.php
  ├── Setup
  │   ├── CategorySetup.php
  │   ├── InstallData.php
  │   ├── InstallSchema.php
  │   ├── UpgradeData.php
  │   ├── UpgradeSchema.php
  │   ├── UpgradeSchema.php
  │   └── Cms
  │       ├── Blocks
  │       │   ├── Contact.phtml
  │       │   └── Delivery.phtml
  │       │    ...
  │       ├── Pages
  │       │   ├── Home.phtml
  │       │   └── About.phtml
  │       │    ...  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;structure-and-examples&#34;&gt;Structure and Examples&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Magento 2 Catalog&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./vendor/magento/module-catalog
  ├── etc
  │   ├── config.xml
  │   ├── di.xml
  │   ├── module.xml
  ├── registration.php
  ├── Setup
  │   ├── CategorySetup.php
  │   ├── InstallData.php
  │   ├── InstallSchema.php
  │   ├── UpgradeData.php
  │   └── UpgradeSchema.php
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$categorySetup-&amp;gt;installEntities();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        // Create Root Catalog Node&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $categorySetup-&amp;gt;createCategory()&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;load($rootCategoryId)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setId($rootCategoryId)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setStoreId(0)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setPath($rootCategoryId)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setLevel(0)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setPosition(0)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setChildrenCount(0)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setName(&amp;#39;Root Catalog&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setInitialSetupFlag(true)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;save();&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;        // Create Default Catalog Node&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $category = $categorySetup-&amp;gt;createCategory();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $category-&amp;gt;load($defaultCategoryId)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setId($defaultCategoryId)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setStoreId(0)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setPath($rootCategoryId . &amp;#39;/&amp;#39; . $defaultCategoryId)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setName(&amp;#39;Default Category&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setDisplayMode(&amp;#39;PRODUCTS&amp;#39;)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setIsActive(1)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setLevel(1)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setInitialSetupFlag(true)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;setAttributeSetId($category-&amp;gt;getDefaultAttributeSetId())&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            -&amp;gt;save();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a name=&#34;ecmig&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;ec-database-migrations-module&#34;&gt;EC Database Migrations Module&lt;/h1&gt;

&lt;p&gt;As mentioned previously we have a database migrations module internally that we tend to reuse and have started to migrate to Magento 2.
The purpose of the module is to bootstrap tasks that are repeated across Magento 2 projects and allow for changes to be idempotent at the same time.&lt;/p&gt;

&lt;p&gt;The module is still very young and is still under development but is shaping up to be a useful tool. There are still active issues that are being tackled
and we are embracing the open source approach to the development of the module to improve the development experience of every one involved.&lt;/p&gt;

&lt;h2 id=&#34;install-guide&#34;&gt;Install Guide&lt;/h2&gt;

&lt;p&gt;From the root of your Magento 2 project, install the composer dependency.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;composer require edmondscommerce/magento2-migrations:dev-master@dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;examples-1&#34;&gt;Examples&lt;/h3&gt;

&lt;p&gt;From with in your Magento 2 module&amp;rsquo;s setup/upgrade scripts you can now inject one of the many different interfaces available from the migrations module.
For the time being we have split larger parts of Magento&amp;rsquo;s infrastructure in to smaller interfaces for ease of management.&lt;/p&gt;

&lt;p&gt;Lets take a look at changing an arbitrary config change&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;class InstallData implements InstallDataInterface {&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    public function __construct(EavSetupFactory $eavSetupFactory, \EdmondsCommerce\Migrations\Contracts\Config\GeneralContract $generalConfig)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;generalConfig = $generalConfig;   &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public function install(...)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $setup-&amp;gt;startSetup();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        ...&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $this-&amp;gt;generalConfig-&amp;gt;setStoreName(&amp;#39;My Magento 2 Store&amp;#39;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;           &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        ...&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        $setup-&amp;gt;endSetup();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;With the use of database migrations we can remove the complexity of keeping environments in sync during development and reduce the value of the database when moving between environments.
From this we can always explicitly declare what should and should not be present in the database on any environment whether that be production or active development.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Libsodium and Pecl-libsodium on Centos7 and Php7</title>
      <link>https://edmondscommerce.github.io/installing-libsodium-and-pecl-libsodium-on-centos7-and-php7/</link>
      <pubDate>Wed, 02 Nov 2016 19:46:28 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/installing-libsodium-and-pecl-libsodium-on-centos7-and-php7/</guid>
      <description>&lt;p&gt;If you would like to work with state of the art encryption techniques in your PHP project then you need to check out &lt;a href=&#34;https://download.libsodium.org/doc/&#34; target=&#34;_blank&#34;&gt;libsodium&lt;/a&gt; and the corresponding PHP library, &lt;a href=&#34;https://pecl.php.net/package/libsodium&#34; target=&#34;_blank&#34;&gt;pecl-libsodium&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Getting it installed on your centos7 and PHP7 box though can be a little tricky&lt;/p&gt;

&lt;p&gt;Here is a bash script which will install all the required depencies and get it working:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env bash

if [[ &amp;quot;$(whoami)&amp;quot; != &amp;quot;root&amp;quot; ]]
then
    echo &amp;quot;please run this as root&amp;quot;
    exit 1
fi

yum install \
    php70w-pear \
    php70w-devel \
    gcc \
    curl-devel \
    libsodium \
    libsodium-devel

pecl install libsodium

echo &amp;quot;extension=libsodium.so&amp;quot; &amp;gt;&amp;gt; /etc/php.ini

php -i | grep sodium
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this package you can now do all kinds of enterprise level cryptography, suggest you have a read of this &lt;a href=&#34;https://paragonie.com/book/pecl-libsodium&#34; target=&#34;_blank&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Basic Clustat and Clusvcadm Usage</title>
      <link>https://edmondscommerce.github.io/basic-clustat-and-clusvcadm-usage/</link>
      <pubDate>Wed, 02 Nov 2016 15:55:15 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/basic-clustat-and-clusvcadm-usage/</guid>
      <description>

&lt;p&gt;I had to work on one of UKFasts clustered servers today and learnt a few new commands. I wanted to record
these here mainly for my future self but hopefully you&amp;rsquo;ll find them useful too.&lt;/p&gt;

&lt;h1 id=&#34;clustat&#34;&gt;clustat&lt;/h1&gt;

&lt;p&gt;This is the first command you&amp;rsquo;ll want to run (as root) on the server. This will give you the current
status of all the cluster nodes and services.&lt;/p&gt;

&lt;h1 id=&#34;clusvcadm&#34;&gt;clusvcadm&lt;/h1&gt;

&lt;p&gt;This is the command you&amp;rsquo;ll use to managage services (such as mysql).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-r &amp;ndash; relocate service. On UKFasts setup this will move the service to the other running node
(there are only 2).&lt;/li&gt;
&lt;li&gt;-e &amp;ndash; enable service. This is how you manually start services.&lt;/li&gt;
&lt;li&gt;-d &amp;ndash; disable service. This is how you manually stop services.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;useful-links&#34;&gt;Useful Links&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/8/clustat&#34; target=&#34;_blank&#34;&gt;clustat man page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/8/clusvcadm&#34; target=&#34;_blank&#34;&gt;clusvcadm man page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Magento Api Logging</title>
      <link>https://edmondscommerce.github.io/magento-api-logging/</link>
      <pubDate>Fri, 28 Oct 2016 11:30:16 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-api-logging/</guid>
      <description>&lt;p&gt;I recently had the need to debug the Magento API and instantly took to Google to see what solutions
already existed. I found a few solutions on
&lt;a href=&#34;http://stackoverflow.com/questions/12084772/magento-api-logs&#34; target=&#34;_blank&#34;&gt;stackoverflow&lt;/a&gt; but these all involved
either changing core files, adding code to index.php or setting up a proxy.&lt;/p&gt;

&lt;p&gt;After looking into this further I realised all the API calls come through a set of controllers in
Mage_Api. In order to log all API calls I simply needed to rewrite the controllers, add my logging
code and then call the original controller. I&amp;rsquo;ve created a module that does just this and added it to
GitHub &lt;a href=&#34;https://github.com/edmondscommerce/Magento-API-Logger&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Portable System Update on Shutdown</title>
      <link>https://edmondscommerce.github.io/portable-system-update-on-shutdown/</link>
      <pubDate>Fri, 28 Oct 2016 08:08:38 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/portable-system-update-on-shutdown/</guid>
      <description>

&lt;h1 id=&#34;another-update-on-shutdown-solution&#34;&gt;Another Update on Shutdown Solution?&lt;/h1&gt;

&lt;p&gt;While the other solutions on this blog (&lt;a href=&#34;https://edmondscommerce.github.io/auto-update-fedora-on-shutdown/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;
and &lt;a href=&#34;https://edmondscommerce.github.io/add-keybinding-to-dnf-upgrade-and-shutdown-to-gnome-shell/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;)
are probably more elegant they have dependencies on either the desktop (Gnome) or systemd.
This solution should be portable across Linux distros and desktops.&lt;/p&gt;

&lt;h1 id=&#34;the-solution&#34;&gt;The Solution&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://specifications.freedesktop.org/desktop-entry-spec/latest/&#34; target=&#34;_blank&#34;&gt;freedesktop.org&lt;/a&gt; define a specification
for application launchers. These launchers will run on all compatible desktops (which means almost all
Linux desktops).&lt;/p&gt;

&lt;p&gt;The desktop launcher for update on shutdown can be created using the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;lt;&amp;lt;&#39;EOF&#39; | bash
echo &amp;quot;[Desktop Entry]
Name=Shutdown
Exec=gnome-terminal --command=\&amp;quot;sudo bash -c &#39;dnf -y upgrade; shutdown now&#39;\&amp;quot;
Type=Application
Terminal=true&amp;quot; &amp;gt; ~/.local/share/applications/shutdown.desktop;
chmod u+x ~/.local/share/applications/shutdown.desktop;
ln -s ~/.local/share/applications/shutdown.desktop ~/Desktop/shutdown.desktop
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should give you a launcher on your desktop as well as in your normal application menu.&lt;/p&gt;

&lt;p&gt;To make this work for your distribution you may need to change &lt;code&gt;dnf -y upgrade&lt;/code&gt; to something
else like &lt;code&gt;apt-get update; apt-get -y upgrade;&lt;/code&gt; for Debian based distros.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Auto-update Fedora on Shutdown</title>
      <link>https://edmondscommerce.github.io/auto-update-fedora-on-shutdown/</link>
      <pubDate>Thu, 27 Oct 2016 16:14:45 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/auto-update-fedora-on-shutdown/</guid>
      <description>&lt;p&gt;With the &lt;a href=&#34;https://dirtycow.ninja&#34; target=&#34;_blank&#34;&gt;Dirty Cow&lt;/a&gt; exploit out in the wild, it is important to make sure that your Linux machines are kept up to date.&lt;/p&gt;

&lt;p&gt;The following commands will ensure your machine updates itself each time you shut it down&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;su
cat &amp;gt; /usr/lib/systemd/system-shutdown/upgrade &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;EOL &amp;amp;&amp;amp; chmod +x /usr/lib/systemd/system-shutdown/upgrade&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;/usr/bin/dnf upgrade -y&lt;/span&gt;
&lt;span class=&#34;s&#34;&gt;EOL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Add Keybinding to Dnf Upgrade and Shutdown to Gnome Shell</title>
      <link>https://edmondscommerce.github.io/add-keybinding-to-dnf-upgrade-and-shutdown-to-gnome-shell/</link>
      <pubDate>Thu, 27 Oct 2016 15:20:00 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/add-keybinding-to-dnf-upgrade-and-shutdown-to-gnome-shell/</guid>
      <description>&lt;p&gt;In Fedora I prefer to apply updates just before shutting down so that next time I boot up the updates will be in place.&lt;/p&gt;

&lt;p&gt;For me this seems like the best way to do it.&lt;/p&gt;

&lt;p&gt;To make that easier I also then create a keybinding so that I can hit &lt;code&gt;[Start]+[q]&lt;/code&gt; to trigger the upgrade/shutdown process in a terminal&lt;/p&gt;

&lt;p&gt;Being a lazy developer I prefer to have things automated and so here is a bash command to set this up:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat &amp;lt;&amp;lt;&#39;EOF&#39; | bash 
echo &amp;quot;setting up keybinding&amp;quot;;
keybindingsPath=&amp;quot;/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings&amp;quot;
custom0path=&amp;quot;$keybindingsPath/custom0&amp;quot;
dconf write $custom0path/binding &amp;quot;&#39;&amp;lt;Super&amp;gt;q&#39;&amp;quot;
dconf write $custom0path/command &amp;quot;&#39;gnome-terminal --command=\&amp;quot;sudo bash -c \&#39;dnf -y upgrade; shutdown now\&#39;\&amp;quot;&#39;&amp;quot;
dconf write $custom0path/name &amp;quot;&#39;upgrade and shutdown&#39;&amp;quot;
c0=&amp;quot;&#39;/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/&#39;&amp;quot;
gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings &amp;quot;[$c0]&amp;quot;
echo &amp;quot;

Done

try hitting [Start] + [q]

&amp;quot;
EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;just copy/paste into an open terminal window to set this up&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Basic atop Usage</title>
      <link>https://edmondscommerce.github.io/basic-atop-usage/</link>
      <pubDate>Wed, 26 Oct 2016 11:29:38 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/basic-atop-usage/</guid>
      <description>

&lt;h1 id=&#34;what-is-atop&#34;&gt;What is atop?&lt;/h1&gt;

&lt;p&gt;Taken from the man page:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The program atop is an interactive monitor to view the load on a Linux system. It shows the occupation
of the most critical hardware resources (from a performance point of view) on system level, i.e. cpu,
memory, disk and network.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;raw-data-format&#34;&gt;Raw Data Format&lt;/h1&gt;

&lt;p&gt;The raw data format is a binary log file that atop can be configured to record. This log file can be
generated for any length of time and allows you to go back in time to debug system performance issues.&lt;/p&gt;

&lt;h1 id=&#34;setup&#34;&gt;Setup&lt;/h1&gt;

&lt;p&gt;You can install atop from most Linux repos or download it directly from their
&lt;a href=&#34;http://www.atoptool.nl/downloadatop.php&#34; target=&#34;_blank&#34;&gt;site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In order to gain the benefits of the binary log file you can either configure atop to generate this
on an ongoing basis or you can run atop with the following command. This command would be most
useful for debugging easily repeatable bugs / issues.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;atop -w &amp;lt;log file path&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To configure atop for ongoing log generation you need to point a cron job at &lt;code&gt;atop.daily&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;0 0 * * * root /etc/atop/atop.daily
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE: this file seems to be missing from both Fedora and Centos when atop is installed from the repos.
I&amp;rsquo;m still looking into a fix for this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;atop will write it&amp;rsquo;s log files to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/var/log/atop/atop_YYYYMMDD
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To read these log files use:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;atop -r &amp;lt;log file path&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;basic-usage&#34;&gt;Basic Usage&lt;/h1&gt;

&lt;p&gt;For more detailed usage info I recommend you check out the very detailed man page.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;? &amp;ndash; help&lt;/li&gt;
&lt;li&gt;g &amp;ndash; Generic output&lt;/li&gt;
&lt;li&gt;m &amp;ndash; Memory output&lt;/li&gt;
&lt;li&gt;d &amp;ndash; Disk output&lt;/li&gt;
&lt;li&gt;n &amp;ndash; Network output&lt;/li&gt;
&lt;li&gt;c &amp;ndash; Show commandline of the process&lt;/li&gt;
&lt;li&gt;u &amp;ndash; Show activity by user&lt;/li&gt;
&lt;li&gt;p &amp;ndash; Show cumulative activity per program&lt;/li&gt;
&lt;li&gt;z &amp;ndash; Freeze the output&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When viewing a binary log:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;t &amp;ndash; View next sample&lt;/li&gt;
&lt;li&gt;T &amp;ndash; View previous sample&lt;/li&gt;
&lt;li&gt;r &amp;ndash; Rewind to the beginning&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;useful-links&#34;&gt;Useful Links&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linux.die.net/man/1/atop&#34; target=&#34;_blank&#34;&gt;atop(1) - Linux man page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Magento 2: How to add new tabs to the product page</title>
      <link>https://edmondscommerce.github.io/magento-2-how-to-add-new-tabs-to-the-product-page/</link>
      <pubDate>Tue, 18 Oct 2016 17:52:21 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-2-how-to-add-new-tabs-to-the-product-page/</guid>
      <description>&lt;p&gt;The tabs on the product page are handled by the &lt;code&gt;Magento_Catalog&lt;/code&gt;&amp;rsquo;s &lt;code&gt;product/view/details.phtml&lt;/code&gt; template file. In there the line &lt;code&gt;$block-&amp;gt;getGroupChildNames(&#39;detailed_info&#39;, &#39;getChildHtml&#39;)&lt;/code&gt; collects all blocks in the &lt;code&gt;detailed_info&lt;/code&gt; group for the tabs.&lt;/p&gt;

&lt;p&gt;This means the following layout XML will add a new tab:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        &amp;lt;referenceBlock name=&amp;quot;product.info.details&amp;quot;&amp;gt;
            &amp;lt;block class=&amp;quot;Magento\Framework\View\Element\Template&amp;quot; template=&amp;quot;Magento_Theme::path/to/template.phtml&amp;quot; name=&amp;quot;INSERT NAME&amp;quot; group=&amp;quot;detailed_info&amp;quot;&amp;gt;
                &amp;lt;arguments&amp;gt;
                    &amp;lt;argument name=&amp;quot;title&amp;quot; translate=&amp;quot;true&amp;quot; xsi:type=&amp;quot;string&amp;quot;&amp;gt;TAB TITLE HERE&amp;lt;/argument&amp;gt;
                &amp;lt;/arguments&amp;gt;
                &amp;lt;/block&amp;gt;
            &amp;lt;/block&amp;gt;
        &amp;lt;/referenceBlock&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;group=&amp;quot;detailed_info&amp;quot;&lt;/code&gt; part adds it to the tabbed area.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;argument name=&amp;quot;title&amp;quot;&lt;/code&gt; part of that sets a string value on the block which will be used for the tab&amp;rsquo;s title. The content of the block you&amp;rsquo;re adding will be used as the tab content.&lt;/p&gt;

&lt;p&gt;Unfortunately there&amp;rsquo;s no inbuilt way to determine the sort order of these tabs without overriding the &lt;code&gt;details.phtml&lt;/code&gt; template. This is a &lt;a href=&#34;https://github.com/magento/magento2/issues/4154&#34; target=&#34;_blank&#34;&gt;known problem&lt;/a&gt;, but you can choose &lt;a href=&#34;http://magento.stackexchange.com/questions/110796/change-order-of-tabs-on-product-page&#34; target=&#34;_blank&#34;&gt;one of the solutions om StackOverflow&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Supee-8788 Supee-1533 Conflict Fixed</title>
      <link>https://edmondscommerce.github.io/magento-supee-8788-supee-1533-conflict-fixed/</link>
      <pubDate>Thu, 13 Oct 2016 10:19:52 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-supee-8788-supee-1533-conflict-fixed/</guid>
      <description>

&lt;p&gt;TL;DR Run the script at the bottom.&lt;/p&gt;

&lt;h1 id=&#34;the-issue&#34;&gt;The Issue&lt;/h1&gt;

&lt;p&gt;If you&amp;rsquo;ve previously applied the SUPEE-1533 patch to your Magento site, then when you
try to apply the SUPEE-8788 patch you&amp;rsquo;ll see the following error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;checking file app/code/core/Mage/Adminhtml/controllers/DashboardController.php
Hunk #1 FAILED at 91.
1 out of 1 hunk FAILED
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is caused by the fact that the SUPEE-8788 patch seems to have been taken against an
un-patched version of Magento. This can be seen from the following:&lt;/p&gt;

&lt;p&gt;The SUPEE-8788 patch contains:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@@ -91,7 +91,7 @@ class Mage_Adminhtml_DashboardController extends Mage_Adminhtml_Controller_Actio
         if ($gaData &amp;amp;&amp;amp; $gaHash) {
             $newHash = Mage::helper(&#39;adminhtml/dashboard_data&#39;)-&amp;gt;getChartDataHash($gaData);
-            if ($newHash == $gaHash) {
+            if (hash_equals($newHash, $gaHash)) {
                 if ($params = unserialize(base64_decode(urldecode($gaData)))) {
                     $response = $httpClient-&amp;gt;setUri(Mage_Adminhtml_Block_Dashboard_Graph::API_URL)
                             -&amp;gt;setParameterGet($params)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The important line here is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                 if ($params = unserialize(base64_decode(urldecode($gaData)))) {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which is supposed to match up with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        if ($gaData &amp;amp;&amp;amp; $gaHash) {
            $newHash = Mage::helper(&#39;adminhtml/dashboard_data&#39;)-&amp;gt;getChartDataHash($gaData);
            if ($newHash == $gaHash) {
                $params = json_decode(base64_decode(urldecode($gaData)), true);
                if ($params) {
                    $response = $httpClient-&amp;gt;setUri(Mage_Adminhtml_Block_Dashboard_Graph::API_URL)
                            -&amp;gt;setParameterGet($params)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The important lines here are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                $params = json_decode(base64_decode(urldecode($gaData)), true);
                if ($params) {

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now they don&amp;rsquo;t match because of the change made in SUPEE-1533:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;         if ($gaData &amp;amp;&amp;amp; $gaHash) {
             $newHash = Mage::helper(&#39;adminhtml/dashboard_data&#39;)-&amp;gt;getChartDataHash($gaData);
             if ($newHash == $gaHash) {
-                if ($params = unserialize(base64_decode(urldecode($gaData)))) {
+                $params = json_decode(base64_decode(urldecode($gaData)), true);
+                if ($params) {
                     $response = $httpClient-&amp;gt;setUri(Mage_Adminhtml_Block_Dashboard_Graph::API_URL)
                             -&amp;gt;setParameterGet($params)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;the-fix&#34;&gt;The Fix&lt;/h1&gt;

&lt;p&gt;In order to apply SUPEE-8788 we need to temporarily revert the changes made to
&lt;code&gt;DashboardController.php&lt;/code&gt; by SUPEE-1533. We can then apply the patch and restore
the SUPEE-1533 changes.&lt;/p&gt;

&lt;p&gt;[NOTE: It&amp;rsquo;s really important you restore the SUPEE-1533 changes as the use of
json_encode here protects against the &lt;a href=&#34;https://magento.com/security-patch&#34; target=&#34;_blank&#34;&gt;Shoplift Bug&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;To install the patch copy the following script into a .sh file in the root of your
Magento install (along with the SUPEE-8788 patch) and run the script.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&#34;nv&#34;&gt;dashboard_controller&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;app/code/core/Mage/Adminhtml/controllers/DashboardController.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Remove &amp;#39;if ($params) {&amp;#39;&lt;/span&gt;
sed -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;96d&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dashboard_controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Replace json_encode line with serialize line&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;json_encode_line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$params = json_decode(base64_decode(urldecode($gaData)), true);&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;serialize_line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;if ($params = unserialize(base64_decode(urldecode($gaData)))) {&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
sed -i -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;s/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$json_encode_line&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$serialize_line&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&amp;quot;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dashboard_controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# This now puts the code in the state expected by the patch&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Apply SUPEE-8788 patch&lt;/span&gt;
sh PATCH_SUPEE-8788_CE_1.8.1.0_v1-2016-10-11-06-54-44.sh

&lt;span class=&#34;c1&#34;&gt;# Add back &amp;#39;if ($params) {&amp;#39;&lt;/span&gt;
sed -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;96i\                if ($params) {&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dashboard_controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Add back json_encode line&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;serialize_line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;if ($params = unserialize(base64_decode(urldecode($gaData)))) {&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;json_encode_line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;$params = json_decode(base64_decode(urldecode($gaData)), true);&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
sed -i -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;s/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$serialize_line&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$json_encode_line&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&amp;quot;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dashboard_controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&#34;handy-links&#34;&gt;Handy Links&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://magento.stackexchange.com/questions/140550/security-patch-supee-8788-possible-problems&#34; target=&#34;_blank&#34;&gt;SUPEE-8788 Stackoverflow thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://magento.com/security/patches/supee-8788&#34; target=&#34;_blank&#34;&gt;Official SUPEE-8788 page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Highlighting Empty Hrefs in Links Using Css</title>
      <link>https://edmondscommerce.github.io/highlighting-empty-hrefs-in-links-using-css/</link>
      <pubDate>Wed, 05 Oct 2016 17:23:16 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/highlighting-empty-hrefs-in-links-using-css/</guid>
      <description>&lt;p&gt;While developing a site, you often put a pile of placeholder links in with a plain &lt;code&gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;Link&amp;lt;/a&amp;gt;&lt;/code&gt;. These can sometimes sneak through because they&amp;rsquo;re so easily forgotten about.&lt;/p&gt;

&lt;p&gt;A simple CSS block will automatically highlight these for you, so you don&amp;rsquo;t forget:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a[href=&#39;&#39;]:after {
  content:&#39;!&#39;;
  background:red;
  color:#FFFFFF;
  padding-left:3px;
  padding-right:3px;
  opacity:0.3;
  white-space: nowrap;
}
a[href=&#39;&#39;]:hover:after {
  content:&#39;empty link&#39;;
  opacity:1.0;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can adjust the selector if you use &lt;code&gt;href=&amp;quot;#&amp;quot;&lt;/code&gt; instead of blank ones.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Find All Email Addresses in a Folder (eg Codebase)</title>
      <link>https://edmondscommerce.github.io/find-all-email-addresses-in-a-folder-eg-codebase/</link>
      <pubDate>Tue, 04 Oct 2016 16:12:06 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/find-all-email-addresses-in-a-folder-eg-codebase/</guid>
      <description>&lt;p&gt;Here is a nice little one liner to search recursively in a directory and then pull out all email addresses that it finds&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grep -shoPR &#39;[a-zA-Z_]+?@domain.co.uk&#39; * | sort -u

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will quickly find all email addresses and hten give you a sorted unique list&lt;/p&gt;

&lt;p&gt;Handy!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>