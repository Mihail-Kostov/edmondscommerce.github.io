<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/</link>
    <description>Recent content on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Jul 2016 20:05:32 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Fedora 24 Bash Script to Change Desktop Background</title>
      <link>https://edmondscommerce.github.io/fedora-24-bash-script-to-change-desktop-background/</link>
      <pubDate>Tue, 19 Jul 2016 20:05:32 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/fedora-24-bash-script-to-change-desktop-background/</guid>
      <description>

&lt;h2 id=&#34;bash-script-to-change-desktop-on-gnome-shell&#34;&gt;Bash Script to Change Desktop on Gnome Shell&lt;/h2&gt;

&lt;p&gt;Previously on this blog I had a script that will change your desktop background and can be used on cron&lt;/p&gt;

&lt;p&gt;This is an updated version of that script, mainly the pgrep no longer works as the gdm login is matching as well so we need to be more specific when pulling out the process ID.&lt;/p&gt;

&lt;p&gt;Here is the script, copy paste into a bash script, edit the path for images and then add to your crontab and enjoy nice backgrounds of your choosing.&lt;/p&gt;

&lt;p&gt;I like to combine this with a transparent top panel for something a bit less bland and depressing than the solid black bar that we have by default. You can install this &lt;a href=&#34;https://extensions.gnome.org/extension/358/activities-configurator/&#34; target=&#34;_blank&#34;&gt;gnome shell extension&lt;/a&gt; to easily set transparency and also other tweaks.`&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;ps waux &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;g&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;nome-session-binary &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -v gdm &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -d &lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; -f 5&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;DBUS_SESSION_BUS_ADDRESS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;grep -z DBUS_SESSION_BUS_ADDRESS /proc/&lt;span class=&#34;nv&#34;&gt;$PID&lt;/span&gt;/environ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;cut -d&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -f2-&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;GSETTINGS_BACKEND&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;dconf 
gsettings &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; org.gnome.desktop.background picture-uri &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;quot;file://&amp;#39;&lt;/span&gt;/home/joseph/Pictures/Wallpapers/&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;ls /home/joseph/Pictures/Wallpapers/ &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; shuf -n 1&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Magento 1.9.2.3 Fixes Php 5.6 Compatibility</title>
      <link>https://edmondscommerce.github.io/magento-1.9.2.3-fixes-php-5.6-compatibility/</link>
      <pubDate>Tue, 19 Jul 2016 19:20:14 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-1.9.2.3-fixes-php-5.6-compatibility/</guid>
      <description>&lt;p&gt;There&amp;rsquo;s been a long standing issue with Magento, or more specifically the Zend version it ships with, not supporting the latest version of PHP - v5.6&lt;/p&gt;

&lt;p&gt;The issue is in a couple of places where it calls a now deprecated function &lt;code&gt;iconv_set_encoding(&#39;internal_encoding&#39;, &#39;UTF-8&#39;);&lt;/code&gt; in &lt;code&gt;lib/Zend/Validate/Hostname.php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;With PHP 5.5 having gone out of support, leaving &lt;a href=&#34;http://php.net/supported-versions.php&#34; target=&#34;_blank&#34;&gt;PHP 5.6 being the only 5.x version currently supported&lt;/a&gt;, this has become a pressing issue.&lt;/p&gt;

&lt;p&gt;Fortunately Magento has finally addressed this with a change in 1.9.2.3 changing the code in question to use the valid &lt;code&gt;ini_set(&#39;default_charset&#39;, &#39;UTF-8&#39;);&lt;/code&gt; function call.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://community.magento.com/t5/Version-Upgrades/Is-1-9-2-3-compatible-with-PHP-5-6/td-p/27411&#34; target=&#34;_blank&#34;&gt;More details can be found at this Magento community post&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento 2 Dependency Injection and Swapping Dependencies with Virtual Types</title>
      <link>https://edmondscommerce.github.io/magento-2-dependency-injection-and-swapping-dependencies-with-virtual-types/</link>
      <pubDate>Tue, 19 Jul 2016 11:22:52 +0100</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-2-dependency-injection-and-swapping-dependencies-with-virtual-types/</guid>
      <description>&lt;p&gt;Recently we came across a scenario where we wanted to swap dependencies depending on the class that required them. The scenario was that we were using either the console or logging as an output
when writing a module to use an API for product data among other things.&lt;/p&gt;

&lt;p&gt;We wanted to be able to easily swap out the class that handled the output to logging or console (one for each output using an interface contract to standardise the classes)&lt;/p&gt;

&lt;p&gt;Suppose we have an output contract aptly named &lt;code&gt;OutputContract&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;interface OutputContract&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    /**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param string $message&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public function write($message);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;    /**&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     * @param string $message&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;     */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public function writeln($message);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We would then have two classes that implement this contract also aptly named &lt;code&gt;Console&lt;/code&gt; and &lt;code&gt;Logger&lt;/code&gt; (these can be placed in a namespace to group them together as implementations).&lt;/p&gt;

&lt;p&gt;In Magento 2 dependency injection we can explicitly declare what dependencies a specific class will be given but we can also declare a virtual type.
In this instance we have two classes that will use the output contract, one that is used when running under cron where we want to output to a log file and the other that will use used when running
a command using &lt;code&gt;bin/magento&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here is a sample di.xml that is used by a module to specify the dependencies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; ?&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;config&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:noNamespaceSchemaLocation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;urn:magento:framework:ObjectManager/etc/config.xsd&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;preference&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;for=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;EdmondsCommerce\Module\Contracts\OutputContract&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;EdmondsCommerce\Module\Helper\Output\Logger&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here we have specified that we want the output contract to use the logger output by default which is a sane default as everything is written to a log file to be referred to if issues arise.
When the interface is type hinted in a constructor we will get the type specified in the preference for that interface.&lt;/p&gt;

&lt;p&gt;As for swapping out the dependency we can do the following.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;    ...
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;virtualType&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;SimpleConsoleImport&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;EdmondsCommerce\Module\Helper\Importer&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;argument&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;output&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;object&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;EdmondsCommerce\Module\Helper\Output\Console&lt;span class=&#34;nt&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/virtualType&amp;gt;&lt;/span&gt;
    
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;type&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;EdmondsCommerce\Module\Console\Api\Products&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;arguments&amp;gt;&lt;/span&gt;
                &lt;span class=&#34;nt&#34;&gt;&amp;lt;argument&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;productImport&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;object&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;SimpleConsoleImport&lt;span class=&#34;nt&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;/arguments&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here instead of using a direct implementation or interface we have specified a virtual type. The virtual type declares that there is a pseudo class named &lt;code&gt;SimpleConsoleImport&lt;/code&gt; that uses a different
implementation of the &lt;code&gt;OutputContract&lt;/code&gt; which writes to the console instead of to a log file. This class is then used by the console command and so the output is written where we want it.&lt;/p&gt;

&lt;p&gt;This is a simple demonstration of how we can swap dependencies using the virtual type system which gives a lot of power to the developer which slightly resembles the rewrite system with swapping
out classes for bespoke code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fedora 24 Install on Lenovo X1 Carbon</title>
      <link>https://edmondscommerce.github.io/fedora-24-install-on-lenovo-x1-carbon/</link>
      <pubDate>Mon, 18 Jul 2016 14:48:36 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/fedora-24-install-on-lenovo-x1-carbon/</guid>
      <description>

&lt;h1 id=&#34;installing-fedora-on-my-new-lenovo-x1-carbon&#34;&gt;Installing Fedora on my new Lenovo X1 Carbon&lt;/h1&gt;

&lt;p&gt;I have just bought a nice new Lenovo x1 Carbon laptop. Plenty of power and portability was what I was looking for. It&amp;rsquo;s also really important that it runs Linux with the minumum of fuss.&lt;/p&gt;

&lt;p&gt;Having done a load of research it seemed that Lenovo was the brand of choice for Red Hat developers and so, hopefully, Fedora - which is very closely related to Red Hat - should work fine.&lt;/p&gt;

&lt;p&gt;Booting into the LiveCD was hassle free and the installation seemed to go great. But then trying to boot and it just wouldn&amp;rsquo;t work at all, neither would windows, or even the recovery system. It was bricked.&lt;/p&gt;

&lt;h2 id=&#34;bios&#34;&gt;BIOS&lt;/h2&gt;

&lt;p&gt;Much fiddling with BIOS later I had the idea of disabling the legacy boot options and forcing UEFI only. I know that Fedora has supported UEFI for some time so this should be no issue. I also had a sneaking (desparately hoping) suspicion that Fedora had detected the fact that the laptop BIOS was preconfigured to support legacy BIOS operating systems and so had not done its UEFI thing. Perhaps a reinstall with only UEFI enabled at the BIOS would fix things.&lt;/p&gt;

&lt;h2 id=&#34;success&#34;&gt;Success&lt;/h2&gt;

&lt;p&gt;Turns out the hunch was right, reinstalling with only UEFI enabled in the BIOS seems to have fixed things and so now I&amp;rsquo;m onto the more fun step of taking my baseline shiny new Fedora 24 and making it my own.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fedora Drive Space Regain Tip</title>
      <link>https://edmondscommerce.github.io/fedora-drive-space-regain-tip/</link>
      <pubDate>Fri, 15 Jul 2016 15:45:00 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/fedora-drive-space-regain-tip/</guid>
      <description>&lt;p&gt;I recently discovered a huge amount of drive space being used up in /var/cache&lt;/p&gt;

&lt;p&gt;On closer inspection the vast majority of this usage was in var/cache/packagekit&lt;/p&gt;

&lt;p&gt;For me there was 8GB of files in there, not great when you only have a relatively small SSD as your primary drive.&lt;/p&gt;

&lt;p&gt;To clean this up, the following command will do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo pkcon refresh force -c -1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Bash Header for all scripts</title>
      <link>https://edmondscommerce.github.io/bash-header-for-all-scripts/</link>
      <pubDate>Fri, 15 Jul 2016 12:46:53 +0100</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash-header-for-all-scripts/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;#!/usr/bin/env bash&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;readonly&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt; dirname &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;BASH_SOURCE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[0]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$DIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; -e
    &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; -u
    &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; -o pipefail
    &lt;span class=&#34;nv&#34;&gt;standardIFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$IFS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;IFS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;$&amp;#39;\n\t&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;    ===========================================&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;hostname&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$@&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;    ===========================================&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;    &amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above script makes bash prompt&amp;rsquo;s behaviour more predicatable when developing your automated scripts.
It will prevent the script from continuing any further when an error is encountered meaning that there is a much lower chance of anything going completely wrong in edge cases&lt;/p&gt;

&lt;p&gt;Another helpful feature is that the directory is normalised to the script&amp;rsquo;s working directory and stored in a variable to allow easier path referencing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Checking for Magento patches with FTP</title>
      <link>https://edmondscommerce.github.io/checking-for-magento-patches-with-ftp/</link>
      <pubDate>Wed, 01 Jul 2015 14:59:53 +0100</pubDate>
      
      <guid>https://edmondscommerce.github.io/checking-for-magento-patches-with-ftp/</guid>
      <description>&lt;p&gt;When you have an older version of Magento running on your server it is extremely important to ensure that you stay up to date with the latest security patches.
If you have FTP or Cpanel access (with the file browser) you can quickly and easily check how protected you are.&lt;/p&gt;

&lt;p&gt;With your favourite FTP application/CPanel, connect to your site and browser to your root public directory (the part exposed to requests).
From there navigate to Magento&amp;rsquo;s app/etc directory and search for a file called &lt;code&gt;applied.patches.list&lt;/code&gt;, this file is created following a security patch and will show where the changes have been made.&lt;/p&gt;

&lt;p&gt;In this file will be what changes were made, the date and time they were applied as well the patch that was applied.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2015-04-21 06:34:06 UTC | SUPEE-1533 | EE_1.12 | v1 | _ | n/a | SUPEE-1533_EE_1.12_v1.patch
patching file app/code/core/Mage/Adminhtml/Block/Dashboard/Graph.php
patching file app/code/core/Mage/Adminhtml/controllers/DashboardController.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Refer to the Magento website, the &lt;code&gt;applied.patches.list&lt;/code&gt; file and your Magento version to find out what needs to be applied as required.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Exploit - Stealing Customer Info Including Card Details - Check your site now!</title>
      <link>https://edmondscommerce.github.io/magento/magento-exploit-stealing-customer-info-including-card-details-check-your-site-now.html</link>
      <pubDate>Tue, 30 Jun 2015 11:53:51 +0100</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/magento-exploit-stealing-customer-info-including-card-details-check-your-site-now.html</guid>
      <description>

&lt;p&gt;We have detected malicious code running on one of our client&amp;rsquo;s Magento websites. The code in question is harvesting customer details which are then being stolen.&lt;/p&gt;

&lt;p&gt;The process is not very sophisticated though it does seem to be effective. Unfortunately investigating it further it seems that there are a number of hacked sites and there are even sensitive details including, in some cases, credit card information that is visible in Google&amp;rsquo;s own cache.&lt;/p&gt;

&lt;h3 id=&#34;analysis&#34;&gt;Analysis&lt;/h3&gt;

&lt;p&gt;As is common with this kind of exploit, there is a PHP file that then calls &lt;code&gt;eval&lt;/code&gt; on a base64 encoded set of code.&lt;/p&gt;

&lt;p&gt;In this case, the file was called abstractleft.php and was located in the Magento shell directory. The contents of the file begin with this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?PHP&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;eval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;gzinflate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;base64_decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;f3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Xxs38jiO&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;36&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Px&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Pyta92K1tDEnaBg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;....&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The top of the file indicates that it is a web shell.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/* WSO 2.1 (Web Shell by pgems.in) */&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The file is being used to generate a dump of data, with regular POST requests coming from the IP: &lt;code&gt;46.21.151.107&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In the case of our client, the issue is being resolved quickly and only seems to have been live for a day or so, however looking through Google&amp;rsquo;s index its clear that there are other sites that have been leaking a lot of data.&lt;/p&gt;

&lt;p&gt;In the worst case, the Magento sites have been using the Saved Credit Card payment method. This means that the data scrapes have been pulling customer details and also the full card details. This is another reason why it is a &lt;em&gt;really bad idea&lt;/em&gt; to use the Saved Credit Card payment method.&lt;/p&gt;

&lt;h3 id=&#34;defense&#34;&gt;Defense&lt;/h3&gt;

&lt;p&gt;It is not clear exactly how the client server was compromised however it is important to ensure that all access credentials are updated and also firewall rules are reviewed and updated.&lt;/p&gt;

&lt;p&gt;Ideally we would like to know exactly how the attacker gained access to the server to place the exploit file. This involves examining security logs and other logs. If the attack is not too sophisticated then there is a good chance that there is a lot of debug information that should be helpful in finding out exactly how the attack has taken place.&lt;/p&gt;

&lt;p&gt;The main thing for Magento sites now though is to ensure that all security patches have been applied. If your live site has not been patched then really you must expect this kind of hack.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adding Code Sniffer with Magento Standards to PHP Storm</title>
      <link>https://edmondscommerce.github.io/phpstorm/adding-code-sniffer-with-magento-standards-to-php-storm.html</link>
      <pubDate>Wed, 24 Jun 2015 09:53:52 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm/adding-code-sniffer-with-magento-standards-to-php-storm.html</guid>
      <description>&lt;p&gt;Keeping inline with the Magento coding standards is always good practice when working but it can often be hard to
stay on top of it, this is where PHP Code Sniffer comes in.&lt;/p&gt;

&lt;p&gt;Lets get setup, install PHP Code sniffer if you haven&amp;rsquo;t already
    yum install php-pear-PHP-CodeSniffer.noarch&lt;/p&gt;

&lt;p&gt;Next, a sanity check that every thing is working
    phpcs -v
    #Output
    #Registering sniffs in the PEAR standard&amp;hellip; DONE (27 sniffs registered)
    #Creating file list&amp;hellip; DONE (0 files in queue)&lt;/p&gt;

&lt;p&gt;Now we are ready to go and get our Magento coding standards to use sniffer with, we&amp;rsquo;ll use composer for this
    composer global require &amp;ldquo;magento-ecg/coding-standard&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Installing the package globally is my preferred way of working, the rule set will be used with all my Magento projects
and if I need to update them I only need to update the global composer repository with one command rather than updating
for every single project.&lt;/p&gt;

&lt;p&gt;Now it&amp;rsquo;s time to tell PHP Storm where to find our sniffer file.
In PHP Storm go to &lt;code&gt;settings-&amp;gt;Languages &amp;amp; Frameworks-&amp;gt;PHP-&amp;gt;Code Sniffer&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Under the configuration select menu choose local hit the more (elipsis &amp;hellip;) button then choose to browse to your phpcs
path and browse to your installed sniffer file, in my case the file was located in &lt;code&gt;/bin/phpcs&lt;/code&gt;.
With this done, hit the validate button and you should see green.&lt;/p&gt;

&lt;p&gt;Back on the main settings menu, navigate to &lt;code&gt;editor-&amp;gt;inspections-&amp;gt;PHP&lt;/code&gt; and enable the Code Sniffer checkbox if it isn&amp;rsquo;t
already. Choose &lt;code&gt;custom&lt;/code&gt; as the coding standard and hit the ellipsis (&amp;hellip;) button to browse to your intended rule set.&lt;/p&gt;

&lt;p&gt;In our case, we installed the Magento rule set earlier to our global composer repository which is located in the
home directory. &lt;code&gt;/home/&amp;lt;USER&amp;gt;/.composer/vendor/magento-ecg/coding-standard/Ecg&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re all set to go, in PHP Storm you can now choose to inspect code in various places such as individual files,
the entire project or individual directories. I prefer to stick to the directories that I can currently working with
such as the module within the namespace.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fixing product breadcrumbs in Magento</title>
      <link>https://edmondscommerce.github.io/fixing-product-breadcrumbs-in-magento.html</link>
      <pubDate>Mon, 22 Jun 2015 10:13:57 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/fixing-product-breadcrumbs-in-magento.html</guid>
      <description>&lt;p&gt;Some times Magento has trouble displaying breadcrumbs for products, there is an override you can added that some times fixes this.&lt;/p&gt;

&lt;p&gt;Firstly, if you haven&amp;rsquo;t already. Create a new module if you don&amp;rsquo;t already have one in either your local or community directories under app/code.&lt;/p&gt;

&lt;p&gt;Create a new observer and assign it the event &lt;code&gt;catalog_controller_product_init&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With your observer ready to go, assign the event target to your method of choice on your observer and throw in some code&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public function updateBreadCrumb(Varien_Event_Observer $observer)
{
    $current_product = Mage::registry(&#39;current_product&#39;);

    if ($current_product) {
        $categories = $current_product-&amp;gt;getCategoryCollection()
                      -&amp;gt;addAttributeToSelect(&#39;name&#39;)
                      -&amp;gt;setPageSize(1);
        foreach ($categories as $category) {
            Mage::unregister(&#39;current_category&#39;);
            Mage::register(&#39;current_category&#39;, $category);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As the code removes and readds the registered categories it will force Magento to regenerate the breadcrumbs.
Unless there is an issue with product categories in the database this should solve the problem.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Magento 1.9.1&#39;s Colour Swatches in your custom theme</title>
      <link>https://edmondscommerce.github.io/magento/using-magento-1-dot-9-1-s-colour-swatches-in-your-theme.html</link>
      <pubDate>Thu, 18 Jun 2015 18:56:49 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento/using-magento-1-dot-9-1-s-colour-swatches-in-your-theme.html</guid>
      <description>

&lt;p&gt;If you&amp;rsquo;ve upgraded to Magento 1.9.1 you might have noticed new functionality in the Admin to add colour swatches to your attributes. These work well but for reasons only known to Magento, these require you to be using the new rwd theme, or a derivitive of it. There&amp;rsquo;s no reference to it in base/default so if your theme isn&amp;rsquo;t a derivitive of rwd you&amp;rsquo;ll need to copy the code across.&lt;/p&gt;

&lt;p&gt;If you look in the rwd/default theme, you&amp;rsquo;ll notice there are folders for configurableswatches in layout, template and skin. These are the ones you&amp;rsquo;ll need to copy across. But there&amp;rsquo;s also a bit of customisation needed.&lt;/p&gt;

&lt;h3 id=&#34;step-1-copy-over-the-colourswatches-files-and-folders&#34;&gt;Step 1: Copy over the colourswatches files and folders&lt;/h3&gt;

&lt;p&gt;Copy these files from the rwd theme to the same places in your custom theme&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app/design/frontend/rwd/default/&lt;/code&gt;&lt;strong&gt;&lt;code&gt;layout/configurableswatches.xml&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;app/design/frontend/rwd/default/&lt;/code&gt;&lt;strong&gt;&lt;code&gt;template/configurableswatches/&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;skin/frontend/rwd/default/&lt;/code&gt;&lt;strong&gt;&lt;code&gt;js/configurableswatches/&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;step-2-update-your-theme-s-layout&#34;&gt;Step 2: Update your theme&amp;rsquo;s layout&lt;/h3&gt;

&lt;p&gt;The layout file &lt;code&gt;configurableswatches.xml&lt;/code&gt; expects certain blocks to be present, which are only set in rwd&amp;rsquo;s &lt;code&gt;catalog.xml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the following lines to your theme&amp;rsquo;s &lt;code&gt;catalog.xml&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;PRODUCT_TYPE_configurable&amp;gt;
        ...
         &amp;lt;reference name=&amp;quot;product.info.options.wrapper&amp;quot;&amp;gt;
             &amp;lt;block type=&amp;quot;catalog/product_view_type_configurable&amp;quot; name=&amp;quot;product.info.options.configurable&amp;quot; as=&amp;quot;options_configurable&amp;quot; before=&amp;quot;-&amp;quot; template=&amp;quot;catalog/product/view/type/options/configurable.phtml&amp;quot;&amp;gt;
    +             &amp;lt;block type=&amp;quot;core/text_list&amp;quot; name=&amp;quot;product.info.options.configurable.renderers&amp;quot; as=&amp;quot;attr_renderers&amp;quot; /&amp;gt;
    +             &amp;lt;block type=&amp;quot;core/text_list&amp;quot; name=&amp;quot;product.info.options.configurable.after&amp;quot; as=&amp;quot;after&amp;quot; /&amp;gt;
             &amp;lt;/block&amp;gt;
         &amp;lt;/reference&amp;gt;
     &amp;lt;/PRODUCT_TYPE_configurable&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-3-add-your-images&#34;&gt;Step 3: Add your images&lt;/h3&gt;

&lt;p&gt;There&amp;rsquo;s two ways you can set the swatch images:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Globally at &lt;code&gt;media/wysiwyg/swatches&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;On the attribute at &amp;gt; Catalog &amp;gt; Attributes &amp;gt; Manage Attributes &amp;gt; [your attribute] &amp;gt; Manage Label/Options (don&amp;rsquo;t forget to save the attribute after it&amp;rsquo;s uploaded)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;step-4-enable-the-swatches&#34;&gt;Step 4: Enable the swatches&lt;/h3&gt;

&lt;p&gt;You&amp;rsquo;ll need to enable the use of swatches at System Configuration &amp;gt; Catalog &amp;gt; Configurable Swatches.&lt;/p&gt;

&lt;p&gt;In General Settings, set Enabled to Yes and select your attribures in &amp;ldquo;Product Attributes to Show as Swatches in Product Detail&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;step-5-apply-css&#34;&gt;Step 5: Apply CSS&lt;/h3&gt;

&lt;p&gt;As with everything else the style information is only in rwd&amp;rsquo;s stylesheets. You&amp;rsquo;ll likely need to make some small modifications to make them look acceptable. As a baseline this should suffice:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.product-options .swatch-attr .configurable-swatch-list li {
    display: inline-block;
    border:1px solid #CACACA;
    padding: 1px;
}
.product-options .swatch-attr .configurable-swatch-list li.selected {
    border-color:#0095D3;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Removing untracked files but not git ignored ones</title>
      <link>https://edmondscommerce.github.io/git/removing-untracked-files-but-not-git-ignored-ones.html</link>
      <pubDate>Wed, 17 Jun 2015 12:06:25 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/git/removing-untracked-files-but-not-git-ignored-ones.html</guid>
      <description>&lt;p&gt;Quite often you drop a load of files in to a git repo, such as a Magento extension, and then immediately regret it. But now you have a pile of files scattered across the repo and no way to Ctrl+Z out of the situation.&lt;/p&gt;

&lt;p&gt;This leaves us with some options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git reset --hard HEAD&lt;/code&gt;, but that&amp;rsquo;ll only revert any changes to &lt;em&gt;tracked&lt;/em&gt; files. What about the untracked files in &lt;code&gt;git status&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;Manually &lt;code&gt;rm -rf file1 file2 folder1 folder2&lt;/code&gt; but that&amp;rsquo;s a lot of copypasting.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clean -f&lt;/code&gt;, but that &lt;em&gt;will remove all untracked files, including your gitignored ones&lt;/em&gt;, so we don&amp;rsquo;t want that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best way is to &lt;strong&gt;automate the &lt;code&gt;rm -rf&lt;/code&gt; procedure&lt;/strong&gt; mentioned above using the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git status --porcelain | sed &#39;s#^...##&#39; | while read f; do rm -rf $f; done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The TL;DR of this command is that it outputs &lt;code&gt;git status&lt;/code&gt; in a parseable way, and then loops over each file/folder and deletes it. You can see a &lt;a href=&#34;http://explainshell.com/explain?cmd=git+status+--porcelain+%7C+sed+%27s%23%5E...%23%23%27+%7C+while+read+f%3B+do+rm+-rf+%24f%3B+done&#34; target=&#34;_blank&#34;&gt;full command breakdown here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preparing Fedora for development with PHP Storm</title>
      <link>https://edmondscommerce.github.io/php/developer-setup.html</link>
      <pubDate>Mon, 15 Jun 2015 16:25:22 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php/developer-setup.html</guid>
      <description>&lt;p&gt;Today I was asked to prepare a workstation system for development with PHP Storm, this was my first time using Fedora over the popular Ubuntu so here&amp;rsquo;s how it went.&lt;/p&gt;

&lt;p&gt;Starting out, I visited the PHP Storm website hosted by the friendly people over at JetBrains to get a hold of my favourite IDE to develop with.
The package comes as a compressed tar ball that needs extracting with your favourite decompression software of choice.&lt;/p&gt;

&lt;p&gt;After extracting the IDE it is time to do install it, when I attempted this I quickly ran in to a problem with the open source version of Java that comes pre-installed with Fedora.
To remedy this you need to get the Oracle version of the Java Run Times to install and run PHP Storm successfully.&lt;/p&gt;

&lt;p&gt;After installing Java it is important that you tell Fedora to use Oracle&amp;rsquo;s version over the pre-installed OpenJDK mentioned before.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;alternatives --install /usr/bin/java java /usr/java/latest/jre/bin/java 200000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will force Fedora to use this specific version of Java over the default, the procedure is similar to using an alias.&lt;/p&gt;

&lt;p&gt;After we have Fedora setup to use the correct version of Java we can happily install and run PHP Storm.
CD in to your extracted PHP Storm folder we created earlier.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd bin
./phpstorm.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;During the process you will be given the option to create a shortcut meaning you won&amp;rsquo;t need to use the terminal to launch the IDE.
With that said, you can now happily use PHP Storm to develop your applications, be wary if you switch your Java version back to open source as it may not be supported.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Running out of disk space but df shows you have lots of space left</title>
      <link>https://edmondscommerce.github.io/linux/vps/server/running-out-of-disk-space-but-df-shows-you-have-lots-of-space-left.html</link>
      <pubDate>Thu, 07 May 2015 10:32:04 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/linux/vps/server/running-out-of-disk-space-but-df-shows-you-have-lots-of-space-left.html</guid>
      <description>&lt;p&gt;Had a strange occurency this morning with an server reporting it had no disk space when disk usage according to df was at 50%. After some head scratching I decided to read the man page for the df command and came across the -i flag. According the man page this lists inode information instead of block usage. After running it I got the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;Filesystem      Inodes   IUsed  IFree IUse% Mounted on
/dev/xvda1     &lt;span class=&#34;m&#34;&gt;2621440&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2621440&lt;/span&gt;      &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;  100% /
udev            &lt;span class=&#34;m&#34;&gt;124879&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;398&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;124481&lt;/span&gt;    1% /dev
tmpfs           &lt;span class=&#34;m&#34;&gt;126892&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;288&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;126604&lt;/span&gt;    1% /run
none            &lt;span class=&#34;m&#34;&gt;126892&lt;/span&gt;       &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;126888&lt;/span&gt;    1% /run/lock
none            &lt;span class=&#34;m&#34;&gt;126892&lt;/span&gt;       &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;126891&lt;/span&gt;    1% /run/shm
none            &lt;span class=&#34;m&#34;&gt;126892&lt;/span&gt;       &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;126891&lt;/span&gt;    1% /run/user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So it turned out that the system had reached its max inodes so the next line of investigation was to find any excess of files in an directory. Which was sone by using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in /var/*&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; find &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; wc -l&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will list the total number of files in a given directory. You can change the path to work your way down the directory tree finding directories with lots of files. In the end we found excess of old logs which I was able to remove.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Repeating Behat Scenarios when Testing Magento with SmartStep</title>
      <link>https://edmondscommerce.github.io/behat/repeating-behat-scenarios-when-testing-magento-with-smartstep.html</link>
      <pubDate>Wed, 15 Apr 2015 12:02:28 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/behat/repeating-behat-scenarios-when-testing-magento-with-smartstep.html</guid>
      <description>

&lt;p&gt;When behat testing Magento I found myself repeating the same Homepage &amp;gt; Category &amp;gt; Product &amp;gt; Add-to-cart &amp;gt; Cart page scenario for a variety of tests - checking that a category page has products; checking that items are added to the cart; testing the checkout itself etc etc.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t want to copy-paste the whole procedure because if I changed, say the &lt;code&gt;.product-list&lt;/code&gt; class, I&amp;rsquo;d have to update each of the Scenarios. Bit of a kick in the face to &lt;a href=&#34;http://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34; target=&#34;_blank&#34;&gt;DRY&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The standard Behat way is to create a method in the Context class which performs the add-to-cart procedure under the Step &lt;code&gt;Given I have added to cart&lt;/code&gt; or similar, but this defeats the object of using Gherkin to write the tests.&lt;/p&gt;

&lt;p&gt;Fortunately KnpLabs have soled this problem with &lt;a href=&#34;https://github.com/KnpLabs/FriendlyContexts/blob/master/doc/feature-smartStep.md&#34; target=&#34;_blank&#34;&gt;SmartSteps&lt;/a&gt;. This allows you to create a Scanerio that you want to be repeatable by tagging it as a &lt;code&gt;@smartStep&lt;/code&gt;. Once it&amp;rsquo;s tagged, you can easily embed that scenario into a new one by having a step &lt;code&gt;Given [scenario name]&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;adding-smartsteps-to-your-behat-tests&#34;&gt;Adding SmartSteps to your behat tests&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;composer.json&lt;/code&gt;, add a new dependency
&lt;code&gt;
&amp;quot;knplabs/friendly-contexts&amp;quot;: &amp;quot;dev-master&amp;quot;
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;behat.yml&lt;/code&gt;
```
default:
extensions:
    Knp\FriendlyContexts\Extension:
        smartTag: smartStep&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;- Tag your scenario

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;@smartStep
  Scenario: I arrive on the site and add a product to cart
    When I am on &amp;ldquo;/&amp;rdquo;
    Then I follow &amp;ldquo;My category&amp;rdquo;
    Then I follow &amp;ldquo;My product&amp;rdquo;
    Then I press &amp;ldquo;Add to Cart&amp;rdquo;
    And I should see &amp;ldquo;was added to your shopping cart&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- And then use the Scenario in any other scenarios with
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Given I arrive on the site and add a product to cart
```&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>