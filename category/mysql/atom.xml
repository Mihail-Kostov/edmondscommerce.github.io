<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mysql | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/category/mysql/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2013-12-02T19:08:33+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MySQL Substring not Returning Anything + Solution]]></title>
    <link href="http://edmondscommerce.github.io/mysql/mysql-substring-not-returning-anything-solution.html"/>
    <updated>2013-08-20T10:54:20+01:00</updated>
    <id>http://edmondscommerce.github.io/mysql/mysql-substring-not-returning-anything-solution</id>
    <content type="html"><![CDATA[<p>If you are puzzled why your simple usage of the MySQL SUBSTRING() function is not returning anything this could be your solution.</p>

<p>The substring function allows you to specify a string (eg a column), the start character and the length. If you are used to languages like PHP then you are probably used to this kind of function regarding 0 as the starting character. In fact this function regards 1 as the starting character. If you specify 0 then you simply won&rsquo;t get any results.</p>

<p>This does not work:
```</p>

<p>SELECT SUBSTRING(column, 0, 10) as tenchars</p>

<p>```</p>

<p>This does work:
```</p>

<p>SELECT SUBSTRING(column, 1, 10) as tenchars</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ERROR 1062 (23000) at line [Line No]: Duplicate entry for key '[Key Name]']]></title>
    <link href="http://edmondscommerce.github.io/mysql/error-1062-23000-at-line-line-no-duplicate-entry-for-key-key-name.html"/>
    <updated>2013-07-02T14:09:53+01:00</updated>
    <id>http://edmondscommerce.github.io/mysql/error-1062-23000-at-line-line-no-duplicate-entry-for-key-key-name</id>
    <content type="html"><![CDATA[<p>Importing a database dump from one location using mysqldump, and them importing it into a blank database I received this error:</p>

<p>ERROR 1062 (23000) at line [Line No]: Duplicate entry for key &lsquo;[Key Name]&rsquo;</p>

<p>The issue here is that a constraint is set up to prevent two rows containing the same value. Although key checks are disabled, it still can&rsquo;t add the rows. Sometimes as a useful technique to just get it running locally (obviously there&rsquo;s an issue here which does need resolving), simply change the &ldquo;INSERT INTO&rdquo; statement to &ldquo;INSERT IGNORE INTO&rdquo;, which will skip that entry.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SQLSTATE[28000]: Invalid authorization specification: 1045 Access denied for user + Solution]]></title>
    <link href="http://edmondscommerce.github.io/mysql/sqlstate28000-invalid-authorization-specification-1045-access-denied-for-user-solution.html"/>
    <updated>2013-02-12T18:03:29+00:00</updated>
    <id>http://edmondscommerce.github.io/mysql/sqlstate28000-invalid-authorization-specification-1045-access-denied-for-user-solution</id>
    <content type="html"><![CDATA[<p>I have recently been running some MySql scripts that wrote to a file.</p>

<p>These worked fine locally, but as soon as I deployed them I started to get the error above.</p>

<p>After much looking around I came across this solution.</p>

<p>When I was developing locally, I was connecting with a user that had global privileges. When I was running the code on the server I was connecting with a user that only had privileges for the database I was using.</p>

<p>The issue is that then FILE privilege is a Global setting, so the user did not have access to it, hence the access denied message.</p>

<p>Grant FILE privileges and you can connect as expected</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL 5.1 to 5.5 Migration]]></title>
    <link href="http://edmondscommerce.github.io/mysql/mysql-5-1-to-5-5-migration.html"/>
    <updated>2012-09-18T11:09:09+01:00</updated>
    <id>http://edmondscommerce.github.io/mysql/mysql-5-1-to-5-5-migration</id>
    <content type="html"><![CDATA[<p>According to pretty much every source there&rsquo;s only one sensible way to migrate from 5.0, 5.1 or 5.2 to 5.5 of mysql (or mariadb/percona for that matter), and it&rsquo;s not pretty (for a server with only two active magento installations for instance, this will take about 3 hours).</p>

<p>The answer is that you have to do an sql dump and restore.  This does take an age but does at least provide the reassurance that you are going to have nice clean databases after the upgrade.</p>

<p>So the commands are :&ndash;
```bash</p>

<p>mysqldump &mdash;all-databases &mdash;routines &mdash;events > fulldump.sql
mysqldump mysql &mdash;tables user > users.sql</p>

<p>```</p>

<p>Then upgrade mysql binaries to 5.5 and empty the database directory &ndash; such as /var/lib/mysql and start mysql with it&rsquo;s script (e.g. /etc/init.d/mysql start).   Note, if you&rsquo;re using a distribution that doesn&rsquo;t come with start scripts, you may want to run mysql_install as root before starting mysql however you start it.</p>

<p>Then the following will restore the databases and users :
```bash</p>

<p>mysql -u root # add -p if you set up a default password when upgrading/installing 5.5
\r mysql
source users.sql
source fulldump.sql
FLUSH PRIVILEGES;
\q</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL Server Gone Away - Large Packets the Issue?]]></title>
    <link href="http://edmondscommerce.github.io/mysql/mysql-server-gone-away-large-packets-the-issue.html"/>
    <updated>2012-08-15T12:58:23+01:00</updated>
    <id>http://edmondscommerce.github.io/mysql/mysql-server-gone-away-large-packets-the-issue</id>
    <content type="html"><![CDATA[<p>If you are scratching your head trying to figure out why you keep getting MySQL server gone away error messages despite the fact you have bumped up all the timeout etc configurations to high values then this could be your solution.</p>

<p>MySQL will also give you this error if you try to send a packet that is larger than the packet size defined. We had an application that was using MariaDB which has a default max allowed packet of 16M by default.</p>

<p>The application in question was sending large amounts of data to be stored and so the solution to the gone away issues was simply to increase the max_allowed_packet configuration in my.cnf, restart the mysql daemon and the problems are sorted.</p>
]]></content>
  </entry>
  
</feed>
