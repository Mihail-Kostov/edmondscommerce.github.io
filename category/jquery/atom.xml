<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jquery | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/category/jquery/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-11-12T14:02:06+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Add Jquery to Any Page via Console]]></title>
    <link href="http://edmondscommerce.github.io/jquery/add-jquery-to-any-page-via-console.html"/>
    <updated>2013-03-26T18:44:22+00:00</updated>
    <id>http://edmondscommerce.github.io/jquery/add-jquery-to-any-page-via-console</id>
    <content type="html"><![CDATA[<p>Sometimes you might want to do a little on the fly DOM editing using your favourite Javascript library &ndash; jQuery.</p>

<p>To do this you might need to include jQuery on the page, you can do this by pasting these lines into your console in Chrome or Firebug in Firefox.</p>

<pre class="lang:js decode:true " title="Run this in your console" >var jq = document.createElement('script');
jq.src = "http://code.jquery.com/jquery-latest.min.js";
document.getElementsByTagName('head')[0].appendChild(jq);
jQuery.noConflict();
</pre>


<p></p>

<p>And there you have it, the full power of jQuery at your fingertips</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sticky page scrolling in JavaScript with JQuery]]></title>
    <link href="http://edmondscommerce.github.io/jquery/sticky-page-scrolling-in-javascript-with-jquery.html"/>
    <updated>2013-02-20T17:35:30+00:00</updated>
    <id>http://edmondscommerce.github.io/jquery/sticky-page-scrolling-in-javascript-with-jquery</id>
    <content type="html"><![CDATA[<p>If you have a page that keeps getting longer because new items appear on it at the bottom and what&rsquo;s at the bottom of the page is most important it can be a paint to have to keep scrolling done to see it.</p>

<p>You can make it auto scroll continuously with JQuery but that&rsquo;s potentially really awkward if at any point you need to scroll up (it basically means you can&rsquo;t).</p>

<p>The best solution is to make the page auto scroll in a sticky fashion. So when the page is already scrolled all the way to the bottom it auto scrolls, when it&rsquo;s not at the bottom it does not scroll.</p>

<p>This can be achieved quite easily with the following code:
```javascript</p>

<p>var num = (lastDocumentHeight &ndash; $(window).height()) &ndash; $(document).scrollTop();
if(num == 0) {</p>

<pre><code>$(&amp;quot;html, body&amp;quot;).animate({ scrollTop: $(document).height() }, &amp;quot;slow&amp;quot;);
</code></pre>

<p>}
lastDocumentHeight = $(document).height();</p>

<p>```</p>

<p>In this example lastDocumentHeight is a global. It works by determining if the current position is the same as it was previously and this position equates to being at the bottom of the page then scroll. This needs to run after your page length has increased.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Boost your Magento store's image display with MagicZoom]]></title>
    <link href="http://edmondscommerce.github.io/javascript/php/magento/jquery/boost-your-magento-stores-image-display-with-magiczoom.html"/>
    <updated>2012-11-02T16:09:03+00:00</updated>
    <id>http://edmondscommerce.github.io/javascript/php/magento/jquery/boost-your-magento-stores-image-display-with-magiczoom</id>
    <content type="html"><![CDATA[<p>Magento&rsquo;s product images come with a workable, although somewhat unusual image zoom functionality. But many users want a lightbox which lets users click an image and see a large version. Of course, you can use just about any jQuery plugin in your templates &ndash; <a href="http://www.magictoolbox.com/magiczoom/" target="_blank">Magic Zoom</a> being one such perfect example.</p>

<p>But instead of manually installing and configuring the Javascript yourself, <a href="http://www.magictoolbox.com/magiczoom/modules/magento/" target="_blank">MagicZoom has its own Magento MagicZoom extension</a> which can be dropped straight in and integrates beautifully with Magento</p>

<p><img src="/assets/MagicZoomMagento1.png"></p>

<h2>Some highlights MagicZoom's Magento extension</h2>


<ul>
    <li>Automatically inserts the product title onto the zoomed box</li>
    <li>Automatically linking main image and thumbnails for navigation when zoomed</li>
    <li>Visible on pretty much any area of the site, not just the product view page</li>
    <li>Per-theme customisation</li>
    <li>An insane amount of user-configurable options without touching a line of code (see below)</li>
</ul>


<p><img src="/assets/MagentoMagicZoomConfig.png"></p>

<h2>Installation</h2>


<p>MagicZoom&rsquo;s extension comes with its own installer, although for me it was perfectly sufficient to simply drop in the files</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Comply with the cookie law with very little effort]]></title>
    <link href="http://edmondscommerce.github.io/jquery/comply-with-the-cookie-law-with-very-little-effort.html"/>
    <updated>2012-08-15T14:16:16+01:00</updated>
    <id>http://edmondscommerce.github.io/jquery/comply-with-the-cookie-law-with-very-little-effort</id>
    <content type="html"><![CDATA[<p>A lot of concern has been caused by the &ldquo;Cookie Law&rdquo; which says you must tell people that you use cookies if you do, and 99% of sites do!</p>

<p>Well here&rsquo;s a very simple jQuery bolt-on that deals with that, and although visitors need javascript enabled to see it, you have made &ldquo;best efforts&rdquo; to inform them, and on any eCommerce site you&rsquo;re going to have a &ldquo;this site requires javascript message&rdquo; anyway.</p>

<p>The file to download is from github (isn&rsquo;t opensource great?) <a href="https://github.com/carlwoodhouse/jquery.cookieBar" title="jQuery.cookiebar on github">here</a> and is as simple to implement as add the script file to the head and somewhere on the page insert the following :
```javascript</p>

<script type="text/javascript">
    $(document).ready(function() {
      $.cookieBar();
    });
</script>


<p>```</p>

<p>The example page is also on github : <a href="http://carlwoodhouse.github.com/jquery.cookieBar/" title="CookieBar example page"><a href="http://carlwoodhouse.github.com/jquery.cookieBar/">http://carlwoodhouse.github.com/jquery.cookieBar/</a></a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create a scrollable menu with an onHover effect]]></title>
    <link href="http://edmondscommerce.github.io/jquery/create-a-scrollable-menu-with-an-onhover-effect.html"/>
    <updated>2012-01-31T14:51:37+00:00</updated>
    <id>http://edmondscommerce.github.io/jquery/create-a-scrollable-menu-with-an-onhover-effect</id>
    <content type="html"><![CDATA[<p>I was recently asked by a client to create a scrollable, navigation menu for their site. However, they wanted it to have an onHover submenu that expanded to the side, over the top of the scrollbar.</p>

<p>The problem with this is that there is noway to do this using normal css, over the overflow:scroll hides the sub menu. If you put the submenus into a different div outside the scrollable area, then you can run into problems with the onHover thinking you&rsquo;ve left the target.</p>

<p>To get round this I put together the following jQuery, HTML and CSS, which I hope will help someone.</p>

<p>```html</p>

<div class="categories">
    <ul>
        <li class="level0 first parent">
            <a href="path/to/link">
            <p>First Item</p>
            </a>
            <ul style="display:none">
                <li class="level1 first parent">
                    <a href="path/to/link">
                        <p>sublevel-1</p>
                    </a>
                    <ul style="display:none">
                        <li class="level2 first">
                            <a href="path/to/link">
                                <p>sub-sublevel1</p>
                            </a>
                        </li>
                    </ul>
                </li>
            </ul>
        </li>
        <li class="level0">
            <a href="path/to/link">
                <p>Second Item</p>
            </a>
        </li>
    </ul>
    <div id="hoverMenu" style="display: none; ">
        <div id="subHoverMenu" style="display: none; "></div>
    </div>
</div>


<p>```</p>

<p>```css</p>

<p>.categories{background:white;height:310px;overflow:scroll;overflow-x:hidden;}
.categories .active{background:red;}
.categories ul{padding:9px 10px 0 10px;}
.categories ul li a{color:black;height:21px;line-height:21px;}
.categories ul li a p{font-size:13px;padding:0 0 0 0;margin:0 0 0 0;white-space:nowrap;}
.categories #hoverMenu{background:white;height:auto;position:absolute;width:auto;z-index:150;}
.categories #hoverMenu .active{background:red;}
.categories #hoverMenu li{padding:5px 10px 5px 20px;}
.categories #hoverMenu p{color:black;font-size:13px;white-space:nowrap;}
.categories #hoverMenu #subHoverMenu{background:white;width:auto;height:auto;position:absolute;z-index:150;}
.categories #hoverMenu #subHoverMenu .active{background:red;}</p>

<p>```</p>

<p>```javascript</p>

<pre><code>jQuery(document).ready(function() {
    jQuery(".categories li.level0").mouseenter(function() {
        jQuery(this).siblings().removeClass('active');
        jQuery(this).addClass('active');
        if(jQuery(this).hasClass('parent')) {
            jQuery('#hoverMenu ul').remove();
            var pos = jQuery(this).position(); 
            var mouseX = pos.left + 175;
            var mouseY = pos.top; 
            var subMenu=jQuery(this).children('ul:first')
            subMenu.clone(true, true).show().appendTo('#hoverMenu');
            jQuery('#hoverMenu').css({'top':mouseY,'left':mouseX});
            jQuery('#hoverMenu').show();
        } else {
            jQuery('#hoverMenu ul').remove();
            jQuery('#hoverMenu').hide();
        }
    })

    jQuery(".categories li.level1").bind('mouseenter', function() {
        jQuery(this).siblings().removeClass('active');
        jQuery(this).addClass('active');
        if(jQuery(this).children('ul').length) {
            jQuery('#subHoverMenu').empty();
            var subPos = jQuery(this).position();
            var subMouseX = jQuery(this).outerWidth();
            var subMouseY = subPos.top; 
            var subSubMenu=jQuery(this).children('ul:first')
            subSubMenu.clone(true, true).show().appendTo('#subHoverMenu');
            jQuery('#subHoverMenu').css({'top':subMouseY,'left':subMouseX});
            jQuery('#subHoverMenu').show();
        } else {
            jQuery('#subHoverMenu').empty().hide();
        }
    })

    jQuery(".categories li.level2").bind('mouseenter', function() {
        jQuery(this).siblings().removeClass('active');
        jQuery(this).addClass('active');
    })

    jQuery('#hoverMenu').mouseleave(function(){
        jQuery('#hoverMenu ul').remove();
        jQuery('#hovermenu').hide();
        jQuery('#subHoverMenu').empty().hide();
    })

    jQuery('#subHoverMenu').mouseleave(function(){
        jQuery(this).empty().hide();
    })

    jQuery('.categories').mouseleave(function() {
        jQuery('#hoverMenu ul').remove();
        jQuery('#hoverMenu').hide();
        jQuery('#subHoverMenu').empty().hide();
        jQuery(".col-left .category-list .categories li").removeClass('active');
    })
})
</code></pre>

<p>```</p>

<p>Obviously, change styles and content as required</p>
]]></content>
  </entry>
  
</feed>
