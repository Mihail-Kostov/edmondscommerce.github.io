<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: phpstorm | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/category/phpstorm/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-02-14T17:37:05+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Wrapping a List in Quotes in PHPStorm]]></title>
    <link href="http://edmondscommerce.github.io/phpstorm/wrapping-a-list-in-quotes-in-phpstorm.html"/>
    <updated>2013-12-06T11:35:58+00:00</updated>
    <id>http://edmondscommerce.github.io/phpstorm/wrapping-a-list-in-quotes-in-phpstorm</id>
    <content type="html"><![CDATA[<p>Some times you might find your self with a list of values you want to copy and paste from somewhere into your PHP code as an array of strings.</p>

<p>For example, take this list of carrier names that I need to use:</p>

<p><code>
Blue Package, USPS, UPS, UPSMI, FedEx, DHL, DHL Global Mail, Fastway, UPS Mail Innovations, Lasership, Royal Mail, FedEx SmartPost, OSM, OnTrac, Streamlite, Newgistics, Canada Post, City Link, GLS, GO!, Hermes Logistik Gruppe, Parcelforce, TNT, Target, SagawaExpress, NipponExpress, YamatoTransport, Other
</code></p>

<p>I really don&rsquo;t fancy wrapping each element of this list with quotes one by one, there must be a better way!</p>

<p>There is, you can use the regex replace functionality of PHPStorm to do this for you quickly and easily.</p>

<p>First of all paste the string into your PHPStorm editor and highlight it. Then hit <code>[ctrl]+[r]</code> to start your find and replace.</p>

<p>The &ldquo;In Selection&rdquo; tick box should be ticked already, you also need to tick the regex box.</p>

<p>Then in the find section, use this regex:
<code>
( |)([^,]+),
</code></p>

<p>And in your replace box, put this:</p>

<p><code>
\n'$2',
</code></p>

<p>This gets you nearly all the way there, you might just need to tidy up a bit you should now have something looking like this:</p>

<p><code>
'Blue Package',
'USPS',
'UPS',
'UPSMI',
'FedEx',
'DHL',
'DHL Global Mail',
'Fastway',
'UPS Mail Innovations',
'Lasership',
'Royal Mail',
'FedEx SmartPost',
'OSM',
'OnTrac',
'Streamlite',
'Newgistics',
'Canada Post',
'City Link',
'GLS',
'GO!',
'Hermes Logistik Gruppe',
'Parcelforce',
'TNT',
'Target',
'SagawaExpress',
'NipponExpress',
'YamatoTransport', Other
</code></p>

<p>The <code>Other</code> on the end has not been converted has it doesn&rsquo;t have a trailing comma. You could mess about with yoru regex trying to get this to also be converted, or you could say good enough and move on.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Syntax Highlighting with PHPStorm]]></title>
    <link href="http://edmondscommerce.github.io/phpstorm/ruby/ruby-syntax-highlighting-with-phpstorm.html"/>
    <updated>2013-11-28T10:30:12+00:00</updated>
    <id>http://edmondscommerce.github.io/phpstorm/ruby/ruby-syntax-highlighting-with-phpstorm</id>
    <content type="html"><![CDATA[<p>PHPStorm is my IDE of choice for PHP development of course and also as many other languages as I can get it to support. One of my favourite plugins for PHPStorm is BASH Support which makes it into a fully featured BASH IDE with function support and syntax highlighting and some code inspections.</p>

<p>As we are now moving to Octopress for blogging functionality I wanted a way to get Ruby syntax highlighting. There is a full blown IntelliJ based Ruby IDE but that is overkill for my needs. I had a look at Netbeans however it has now stopped supporting Ruby though there is a community supported plugin apparently.</p>

<p>My best IDE solution so far is simply Vim, perhaps the <a href="http://vim.spf13.com/">spf13 flavour</a>.</p>

<p>After a bit of Googling good old Stack Overflow came through for me with <a href="http://stackoverflow.com/questions/16451359/is-it-possible-to-get-ruby-syntax-highlighting-in-phpstorm">this post</a> that explains how to leverage PHPStorm&rsquo;s TextMate bundle support to get Ruby syntax highlighting. This works a treat though on my colour scheme (a slightly modified Darcula) it was unreadable. The final thing to do is to change the settings under Settings > TextMate Bundles and in the grid at the bottom next to my theme I switched the TextMate colour scheme from Mac Classic to RailsCasts and now it looks good.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magicento has a super quick way to enable Template Path Hints in Magento]]></title>
    <link href="http://edmondscommerce.github.io/phpstorm/magicento/magicento-has-a-super-quick-way-to-enable-template-path-hints-in-magento.html"/>
    <updated>2013-05-17T13:58:20+01:00</updated>
    <id>http://edmondscommerce.github.io/phpstorm/magicento/magicento-has-a-super-quick-way-to-enable-template-path-hints-in-magento</id>
    <content type="html"><![CDATA[<p>Magento&rsquo;s Template Path Hints feature can be super handy for working out which templates are in use, but <em>logging into the Admin, navigating to System, Configuration, Developer, Debug, Change Store Scope, Change to Yes, Press Save, Reload</em> is an arduous process. So much so that often it&rsquo;s easier to just suss it out from the folder structure.</p>

<p>No more! Magicento has an entry in its menu to enable these at the click of a menu item.</p>

<p><img src="/assets/MagicentoMenu.png"></p>

<p>There&rsquo;s a couple of settings which need to be enabled (see below) but once set up, it works great.</p>

<p><img src="/assets/MagicentoSettings-600x317.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHPStorm Regex Replace "Malformed Replacement String"]]></title>
    <link href="http://edmondscommerce.github.io/phpstorm/phpstorm-regex-replace-malformed-replacement-string.html"/>
    <updated>2013-01-24T17:39:08+00:00</updated>
    <id>http://edmondscommerce.github.io/phpstorm/phpstorm-regex-replace-malformed-replacement-string</id>
    <content type="html"><![CDATA[<p>If you are struggling using PHPStorm to find and replace code with Regex rules then this is your solution.</p>

<p>The problem is that when using the $ sign in your replacement string it confuses it because PHP Storm uses the $ sign to represent sub pattern replacements.</p>

<p>Take the following example code:</p>

<p>```php</p>

<p>$data = array();
$form=$page->find(&lsquo;form.edit_product&rsquo;, 0);</p>

<p>//standard inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;text&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>$data[$input-&gt;name]=$input-&gt;value;
</code></pre>

<p>}</p>

<p>//radio inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;radio&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>if($input-&gt;checked){
    $data[$input-&gt;name]=$input-&gt;value;
}
</code></pre>

<p>}</p>

<p>//checkbox inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;checkbox&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>if($input-&gt;checked){
    $data[$input-&gt;name]=$input-&gt;value;
}
</code></pre>

<p>}</p>

<p>//textareas
$textareas = $form->find(&lsquo;textarea&rsquo;);
foreach($textareas as $textarea){</p>

<pre><code>$data[$textarea-&gt;name]=$textarea-&gt;innertext;
</code></pre>

<p>}</p>

<p>```</p>

<p>And trying to replace the key being used in the data array with a processed one calling a method $this->dataName($key) to generate the following code:</p>

<p>```php</p>

<p>$data = array();
$form=$page->find(&lsquo;form.edit_product&rsquo;, 0);</p>

<p>//standard inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;text&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>$data[$this-&gt;dataName($input-&gt;name)]=$input-&gt;value;
</code></pre>

<p>}</p>

<p>//radio inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;radio&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>if($input-&gt;checked){
    $data[$this-&gt;dataName($input-&gt;name)]=$input-&gt;value;
}
</code></pre>

<p>}</p>

<p>//checkbox inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;checkbox&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>if($input-&gt;checked){
    $data[$this-&gt;dataName($input-&gt;name)]=$input-&gt;value;
}
</code></pre>

<p>}</p>

<p>//textareas
$textareas = $form->find(&lsquo;textarea&rsquo;);
foreach($textareas as $textarea){</p>

<pre><code>$data[$this-&gt;dataName($textarea-&gt;name)]=$textarea-&gt;innertext;
</code></pre>

<p>}</p>

<p>```</p>

<p>You might try the find pattern:</p>

<p>```</p>

<p>\$data[\$([^&ndash;]+)&ndash;>name]</p>

<p>```</p>

<p>And the replace pattern:
```</p>

<p>\$data[\$this->dataName(\$$1->name)]</p>

<p>```</p>

<p>However this will give you the dreaded <b>&ldquo;malformed replacement string&rdquo;</b> Error</p>

<p>The solution is simply to triple escape your dollar signs, so the replacement pattern becomes:</p>

<p>```</p>

<p>\\$data[\\$this->dataName(\\$$1->name)]</p>

<p>```</p>

<p>And it works, woot!</p>

<p>Also when it does work, PHP Storms replacement preview feature is really quite nice</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHPStorm: Get More Info on Auto-Complete (like netbeans)]]></title>
    <link href="http://edmondscommerce.github.io/phpstorm/phpstorm-get-more-info-on-auto-complete-like-netbeans.html"/>
    <updated>2012-12-13T17:00:20+00:00</updated>
    <id>http://edmondscommerce.github.io/phpstorm/phpstorm-get-more-info-on-auto-complete-like-netbeans</id>
    <content type="html"><![CDATA[<p>All developers love code completion, but sometimes the minimalist info that can come up in PHPStorm can be not quite enough.</p>

<p>Netbeans gave an excerpt that gave plenty of information from the docblock, and PHPStorm can do too, it just defaults to off.</p>

<p>The setting is under Editor->Code Completion and is &ldquo;Show full signatures&rdquo;.  The good news is it is an &ldquo;IDE Setting&rdquo; so it persists for all projects, the bad news is that that means the setting will be forgotten about before you next reinstall and want it again.</p>
]]></content>
  </entry>
  
</feed>
