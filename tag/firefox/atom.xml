<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: firefox | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/firefox/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2015-02-17T13:09:59+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Behat Selenium arguments[0] is undefined Problem + Solution]]></title>
    <link href="http://edmondscommerce.github.io/behat/behat-selenium-arguments-0-is-undefined-problem-plus-solution.html"/>
    <updated>2015-02-17T12:33:51+00:00</updated>
    <id>http://edmondscommerce.github.io/behat/behat-selenium-arguments-0-is-undefined-problem-plus-solution</id>
    <content type="html"><![CDATA[<p>Just spent a good amount of time struggling to see why my perfectly functional looking code was not working.</p>

<p>Tests were failing with the error message:</p>

<p><em>arguments[0] is undefined</em></p>

<p>A little bit of Googling later and I found the issue.</p>

<p>It seems that some Firefox versions will bomb out and give you this error message.</p>

<p>The simple solution, if you can, is to switch to using Chrome and Chromedriver</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disable JavaScript alerts for a page]]></title>
    <link href="http://edmondscommerce.github.io/javascript/disable-javascript-alerts-for-a-page.html"/>
    <updated>2013-08-28T09:21:30+01:00</updated>
    <id>http://edmondscommerce.github.io/javascript/disable-javascript-alerts-for-a-page</id>
    <content type="html"><![CDATA[<p>If you encounter a webpage that is generating a lot of alerts, the following bookmark will prevent them from stealing focus but still allow you to see what is being said.</p>

<p>```js</p>

<p>javascript:alert = function ( text ) { console.log( text ); return true; };</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reading JSON without Reading JSON!]]></title>
    <link href="http://edmondscommerce.github.io/programming/reading-json-without-reading-json.html"/>
    <updated>2013-02-08T16:16:19+00:00</updated>
    <id>http://edmondscommerce.github.io/programming/reading-json-without-reading-json</id>
    <content type="html"><![CDATA[<p>JSON is a well structure interoperable way of passing data between systems. It&rsquo;s a good way of passing large amount of data into a web page for JavaScript to process and between system on the internet regardless of there architecture or programming language.</p>

<p>JSON is one of the hardest data structure to read directly as a human in it&rsquo;s RAW format compared to other formal grammars such as XML, YAML or ini.</p>

<p>Fortunately there is an easy trick that you can do with Chrome, Firefox with Firebug and even Opera and IE9!</p>

<p>Take the JSON you have, wrap it in &ldquo;eval()&rdquo; the same as you would if you where writing a web page (because it is just JavaScript after all) run it and every modern browser this was tested with should allow you to inspect the resulting data structure.</p>

<p>Example JSON:
<code>
{&ldquo;glossary&rdquo;:{&ldquo;title&rdquo;:&ldquo;example glossary&rdquo;,&ldquo;GlossDiv&rdquo;:{&ldquo;title&rdquo;:&ldquo;S&rdquo;,&ldquo;GlossList&rdquo;:{&ldquo;GlossEntry&rdquo;:{&ldquo;ID&rdquo;:&ldquo;SGML&rdquo;,&ldquo;SortAs&rdquo;:&ldquo;SGML&rdquo;,&ldquo;GlossTerm&rdquo;:&ldquo;Standard Generalized Markup Language&rdquo;,&ldquo;Acronym&rdquo;:&ldquo;SGML&rdquo;,&ldquo;Abbrev&rdquo;:&ldquo;ISO 8879:1986&rdquo;,&ldquo;GlossDef&rdquo;:{&ldquo;para&rdquo;:&ldquo;A meta-markup language, used to create markup languages such as DocBook.&rdquo;,&ldquo;GlossSeeAlso&rdquo;:[&ldquo;GML&rdquo;,&ldquo;XML&rdquo;]},&ldquo;GlossSee&rdquo;:&ldquo;markup&rdquo;}}}}}
</code></p>

<table>
<tr>
<td>
Firefox with Firebug:
<img src="/assets/firefoxjson-600x328.png">
</td>
</tr>
<tr>
<td>
Chrome:
<img src="/assets/chromejson-600x313.png">
</td>
</tr>
<tr>
<td>
Opera:
<img src="/assets/bhtAjti.png">
</td>
</tr>
<tr>
<td>
Internet Explorer 9:
Note: To see this structure you need to click the "Add watcher" link displayed upon running the code.
<img src="/assets/ie9json.png">
</td>
</tr>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firefox and Responsive Web Design]]></title>
    <link href="http://edmondscommerce.github.io/css/firefox-and-responsive-web-design.html"/>
    <updated>2013-01-10T12:16:28+00:00</updated>
    <id>http://edmondscommerce.github.io/css/firefox-and-responsive-web-design</id>
    <content type="html"><![CDATA[<p>Responsive web design is an excellent way to make a site work really well for a variety of different screen sizes without having to serve more than one design to users. Responsive web design does pose additional challenges however.</p>

<p>Some of the challenges for you, as the developer, are being able to implement, test and debug the design implementation. Fortunately built in to Firefox&rsquo;s arsenal of developer tools is an interface for exactly that!</p>

<p>Lets take a website that uses a responsive design:
<img src="/assets/large-no-tools-600x396.png">
Here is the &lsquo;mobile&rsquo; view:<img src="/assets/small-no-tools.png"></p>

<p>So every thing is normal you can use the developer tools and Firebug or whatever. If you then need to make changes to the smaller version and use Firebug you would have to pop out Firebug (which may or may not be to your preference) then resize the main window. This works ok but Firebug currently isn&rsquo;t great for working with responsive designs as it doesn&rsquo;t show you all the rules that might apply based on the screen size and other conditions. This is one area that the Firefox built in tools beat Firebug. The styles editor shows you all rules that could apply and their conditions.</p>

<p>To activate Firefox&rsquo;s responsive design view press Ctrl + Shift + M. You can open the inspector and stlyes by pressing Ctrl + Shift + I. You can also access the responsive design view by going to Tools > Web Developer. With responsive design view enabled you can still use Firebug without a problem, unless you enable the built in element inspector then you kind of lose loads of screen space.</p>

<p><img src="/assets/small-tools-600x447.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Disable the Default DuckDuckGo Seach Engine in Firefox on Linux Mint?]]></title>
    <link href="http://edmondscommerce.github.io/linux%20mint/how-to-disabled-the-default-duckduckgo-seach-engine-in-firefox-on-linux-mint.html"/>
    <updated>2013-01-07T15:12:14+00:00</updated>
    <id>http://edmondscommerce.github.io/linux%20mint/how-to-disabled-the-default-duckduckgo-seach-engine-in-firefox-on-linux-mint</id>
    <content type="html"><![CDATA[<p>If you are using Firefox browser on Linux Mint you might have notice that the default search engine is not Google but DuckDuckGo.</p>

<p>DuckDuckGo are presenting themselves as the biggest threat to Google search engine bringing as the main advantage more privacy than what Google currently offer.</p>

<p>If you are happy with it than you are fine but if you feel like me that DuckDuckGo might have some interesting features, it does not bring the same result or way of using internet than Google search engine then you might want to come back to Google then please follow the below step by step procedure:</p>

<pre><code>Type about:config in the location bar and press Enter

Type keyword.URL in filter

Change the keyword.URL value to:

http://www.google.co.uk/search?ie=UTF-8&amp;oe=UTF-8&amp;sourceid=navclient&amp;gfns=1&amp;q=
</code></pre>

<p>Hope that help.</p>
]]></content>
  </entry>
  
</feed>
