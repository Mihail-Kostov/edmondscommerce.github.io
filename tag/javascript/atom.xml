<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: javascript | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/javascript/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-10-16T11:13:12+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NHS Website Hosting Malware]]></title>
    <link href="http://edmondscommerce.github.io/security/nhs-website-hosting-malware.html"/>
    <updated>2014-02-03T10:39:41+00:00</updated>
    <id>http://edmondscommerce.github.io/security/nhs-website-hosting-malware</id>
    <content type="html"><![CDATA[<p>This morning I was made aware that certain pages of the NHS website &ndash; the UK&rsquo;s National Health Service &ndash; were hosting malware that was automatically redirecting users to malicious pages. The story broke on the popular news site Reddit, you can see the actual reddit thread <a href="http://www.reddit.com/r/unitedkingdom/comments/1wv91h/nhsuk_compromised_many_pages_are_serving_malware/">here</a>.</p>

<p>The first and most important point is that if you ever find yourself unexpectedly redirected from a page to another page then you should definitely not agree to install any software suggsted by the redirected site. Your safest course of action is likely to close the tab or even your browser as soon as possible and then run a full virus scan after updating your virus software.</p>

<h3>Here is some information on this particular attack</h3>

<p>The list of URLs originally shown to be hosting this malware can be found <a href="http://pastebin.com/DbvR0iyj">here</a>.</p>

<p>The attack vector seems to be in a (possibly accidental) mis spelling of the domain name that is hosting some Javascript related to Google Translate.</p>

<h4>You can see a correct chunk of HTML here:</h4>

<p>``` html</p>

<script type="text/javascript" src="http://edmondscommerce.github.io/includes/AC_RunActiveContent.js"></script>


<script type="text/javascript" src="http://edmondscommerce.github.io//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>


<p><link type="text/css" rel="stylesheet" charset="UTF-8" href="https://translate.googleapis.com/translate_static/css/translateelement.css"><script type="text/javascript" charset="UTF-8" src="https://translate.googleapis.com/translate_static/js/element/main.js"></script></p>

<script type="text/javascript" src="http://edmondscommerce.github.io/includes/translate.js"></script>


<p>```</p>

<h4>And here is the compromised HTML</h4>

<p>``` html</p>

<script type="text/javascript" src="http://edmondscommerce.github.io//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>


<script type="text/javascript" src="http://edmondscommerce.github.io//translate.googleaspis.com/translate_static/js/element/19/element_main.js"></script>


<script type="text/javascript" src="http://edmondscommerce.github.io//translate.googleaspis.com/translate_static/js/element/element.js"></script>


<script type="text/javascript" src="http://edmondscommerce.github.io/includes/translate.js"></script>


<p>```</p>

<p>The domain name googleaspis.com is registered by regtons.com and though the <a href="http://www.whois.com/whois/googleaspis.com">Whois information</a> has the actual domain ownership details obfuscated by a Czech company that protect the actual real ownership details, it does seem that the server and other <a href="http://www.tcpiputils.com/browse/ip-address/31.170.179.179">internet services</a> are all based in the Czech Republic.</p>

<p>Checking the Google Safe Browsing information, you can see that Google have found <a href="http://www.google.co.uk/safebrowsing/diagnostic?site=hmr.nhs.uk/">numerous issues</a> on the NHS domains seemingly starting on the 31st of January this year.</p>

<p>It seems that the NHS have now confirmed that they are aware of this issue and are currently taking action to resolve the problem.</p>

<p>It is still not clear exactly how or why this issue cropped up in the first place. If it was an accident, how did it manage to get past what you would expect to be quite rigorous quality assurance processes? If this was a result of a malicious break in, how did they manage to compromise the website in this way and are there any further security issues that we should, as a nation, be worried about?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sticky page scrolling in JavaScript with JQuery]]></title>
    <link href="http://edmondscommerce.github.io/jquery/sticky-page-scrolling-in-javascript-with-jquery.html"/>
    <updated>2013-02-20T17:35:30+00:00</updated>
    <id>http://edmondscommerce.github.io/jquery/sticky-page-scrolling-in-javascript-with-jquery</id>
    <content type="html"><![CDATA[<p>If you have a page that keeps getting longer because new items appear on it at the bottom and what&rsquo;s at the bottom of the page is most important it can be a paint to have to keep scrolling done to see it.</p>

<p>You can make it auto scroll continuously with JQuery but that&rsquo;s potentially really awkward if at any point you need to scroll up (it basically means you can&rsquo;t).</p>

<p>The best solution is to make the page auto scroll in a sticky fashion. So when the page is already scrolled all the way to the bottom it auto scrolls, when it&rsquo;s not at the bottom it does not scroll.</p>

<p>This can be achieved quite easily with the following code:
```javascript</p>

<p>var num = (lastDocumentHeight &ndash; $(window).height()) &ndash; $(document).scrollTop();
if(num == 0) {</p>

<pre><code>$(&amp;quot;html, body&amp;quot;).animate({ scrollTop: $(document).height() }, &amp;quot;slow&amp;quot;);
</code></pre>

<p>}
lastDocumentHeight = $(document).height();</p>

<p>```</p>

<p>In this example lastDocumentHeight is a global. It works by determining if the current position is the same as it was previously and this position equates to being at the bottom of the page then scroll. This needs to run after your page length has increased.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reading JSON without Reading JSON!]]></title>
    <link href="http://edmondscommerce.github.io/programming/reading-json-without-reading-json.html"/>
    <updated>2013-02-08T16:16:19+00:00</updated>
    <id>http://edmondscommerce.github.io/programming/reading-json-without-reading-json</id>
    <content type="html"><![CDATA[<p>JSON is a well structure interoperable way of passing data between systems. It&rsquo;s a good way of passing large amount of data into a web page for JavaScript to process and between system on the internet regardless of there architecture or programming language.</p>

<p>JSON is one of the hardest data structure to read directly as a human in it&rsquo;s RAW format compared to other formal grammars such as XML, YAML or ini.</p>

<p>Fortunately there is an easy trick that you can do with Chrome, Firefox with Firebug and even Opera and IE9!</p>

<p>Take the JSON you have, wrap it in &ldquo;eval()&rdquo; the same as you would if you where writing a web page (because it is just JavaScript after all) run it and every modern browser this was tested with should allow you to inspect the resulting data structure.</p>

<p>Example JSON:
<code>
{&ldquo;glossary&rdquo;:{&ldquo;title&rdquo;:&ldquo;example glossary&rdquo;,&ldquo;GlossDiv&rdquo;:{&ldquo;title&rdquo;:&ldquo;S&rdquo;,&ldquo;GlossList&rdquo;:{&ldquo;GlossEntry&rdquo;:{&ldquo;ID&rdquo;:&ldquo;SGML&rdquo;,&ldquo;SortAs&rdquo;:&ldquo;SGML&rdquo;,&ldquo;GlossTerm&rdquo;:&ldquo;Standard Generalized Markup Language&rdquo;,&ldquo;Acronym&rdquo;:&ldquo;SGML&rdquo;,&ldquo;Abbrev&rdquo;:&ldquo;ISO 8879:1986&rdquo;,&ldquo;GlossDef&rdquo;:{&ldquo;para&rdquo;:&ldquo;A meta-markup language, used to create markup languages such as DocBook.&rdquo;,&ldquo;GlossSeeAlso&rdquo;:[&ldquo;GML&rdquo;,&ldquo;XML&rdquo;]},&ldquo;GlossSee&rdquo;:&ldquo;markup&rdquo;}}}}}
</code></p>

<table>
<tr>
<td>
Firefox with Firebug:
<img src="/assets/firefoxjson-600x328.png">
</td>
</tr>
<tr>
<td>
Chrome:
<img src="/assets/chromejson-600x313.png">
</td>
</tr>
<tr>
<td>
Opera:
<img src="/assets/bhtAjti.png">
</td>
</tr>
<tr>
<td>
Internet Explorer 9:
Note: To see this structure you need to click the "Add watcher" link displayed upon running the code.
<img src="/assets/ie9json.png">
</td>
</tr>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Comply with the cookie law with very little effort]]></title>
    <link href="http://edmondscommerce.github.io/jquery/comply-with-the-cookie-law-with-very-little-effort.html"/>
    <updated>2012-08-15T14:16:16+01:00</updated>
    <id>http://edmondscommerce.github.io/jquery/comply-with-the-cookie-law-with-very-little-effort</id>
    <content type="html"><![CDATA[<p>A lot of concern has been caused by the &ldquo;Cookie Law&rdquo; which says you must tell people that you use cookies if you do, and 99% of sites do!</p>

<p>Well here&rsquo;s a very simple jQuery bolt-on that deals with that, and although visitors need javascript enabled to see it, you have made &ldquo;best efforts&rdquo; to inform them, and on any eCommerce site you&rsquo;re going to have a &ldquo;this site requires javascript message&rdquo; anyway.</p>

<p>The file to download is from github (isn&rsquo;t opensource great?) <a href="https://github.com/carlwoodhouse/jquery.cookieBar" title="jQuery.cookiebar on github">here</a> and is as simple to implement as add the script file to the head and somewhere on the page insert the following :
```javascript</p>

<script type="text/javascript">
    $(document).ready(function() {
      $.cookieBar();
    });
</script>


<p>```</p>

<p>The example page is also on github : <a href="http://carlwoodhouse.github.com/jquery.cookieBar/" title="CookieBar example page"><a href="http://carlwoodhouse.github.com/jquery.cookieBar/">http://carlwoodhouse.github.com/jquery.cookieBar/</a></a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Var_dump got you down? Collapse it, with jQuery!]]></title>
    <link href="http://edmondscommerce.github.io/php/var_dump-got-you-down-collapse-it-with-jquery.html"/>
    <updated>2012-08-01T09:50:01+01:00</updated>
    <id>http://edmondscommerce.github.io/php/var_dump-got-you-down-collapse-it-with-jquery</id>
    <content type="html"><![CDATA[<p>Okay, so anyone who&rsquo;s worked with php knows that sometimes your only option is to var_dump() and die().  Usually when xdebug is having a moody day and refusing to cooperate.</p>

<p>But even though the xdebug var_dump() is that much better than php&rsquo;s built-in version, if you dump for instance a magento object you can&rsquo;t follow back what you want up the tree of cascading objects.</p>

<p>Enter: Kint.</p>

<p>Kint is a collapsible jQuery-based var_dump that works really well, with a lot of configuration but works flawlessly out of the box.  Simply include the class file (using absolute paths is fine because you&rsquo;re not going to deploy this to a live server, right?), and start using it&rsquo;s static class methods&hellip; or their <em>really</em> short aliases :</p>

<p>``` php</p>

<p>require_once (&lsquo;/home/myname/usefulstuff/kint/Kint.class.php&rsquo;);
Kint::dump($variable1,$variable2);
// or simply
d($variable1,$variable2); // shorthand alias of Kint::dump()
dd($variable); // execution will stop after this statement; same as d($variable);die;
```</p>

<p>Example output (wordpress may break the javascript, also available as an example at <a href="http://jsfiddle.net/NNfMW" title="http://jsfiddle.net/NNfMW"><a href="http://jsfiddle.net/NNfMW">http://jsfiddle.net/NNfMW</a></a>/) :</p>

<p>``` js</p>

<script>var d=!1;if("undefined"===typeof f){var g=function(a){var b=window.getSelection(),c=document.createRange();c.selectNodeContents(a);b.removeAllRanges();b.addRange(c)},h=function(a){a.className=a.className.replace(/(\s|^)kint-minus(\s|$)/," ");return a},i=function(a){var b;b||(b="dd");do a=a.nextElementSibling;while(a.nodeName.toLowerCase()!=b);return a},j=function(a,b){var c=i(a),e=a.getElementsByClassName("_kint-collapse")0
;"undefined"==typeof b&&(b="block"==c.style.display);b?(c.style.display="none",h(e)):
(c.style.display="block",h(e).className+=" kint-minus")},l=function(a,b){var c=a.parentNode.parentNode.getElementsByClassName(b)[0];c.style.display="block"==c.style.display?"none":"block"},f={};window.addEventListener("load",function(){for(var a=document.getElementsByClassName("kint-parent"),b=a.length,c,e=document.getElementsByClassName("kint");b--;)a[b].addEventListener("mousedown",function(){j(this)},d);a=document.getElementsByClassName("_kint-collapse");for(b=a.length;b--;)a[b].addEventListener("mousedown",
function(a){var b=this;setTimeout(function(){if(0<parseInt(b.a,10))b.a--;else{for(var a=b.parentNode,c=i(a),k=c.getElementsByClassName("kint-parent"),e=k.length,c="block"==c.style.display;e--;)j(k[e],c);j(a,c)}},300);a.stopPropagation()},d),a[b].addEventListener("dblclick",function(a){this.a=2;for(var b=document.getElementsByClassName("kint-parent"),c=b.length,e="block"==i(this.parentNode).style.display;c--;)j(b[c]
,e);a.stopPropagation()},d);for(b=e.length;b--;){a=eb
.getElementsByTagName("var");
for(c=a.length;c--;)a[c]
.addEventListener("mouseup",function(){g(this)},d);a=eb
.getElementsByTagName("dfn");for(c=a.length;c--;)a[c]
.addEventListener("mouseup",function(){g(this)},d)}a=document.getElementsByClassName("kint-args-parent");for(b=a.length;b--;)ab
.addEventListener("click",function(a){l(this,"kint-args");a.preventDefault()},d);a=document.getElementsByClassName("kint-source-parent");for(b=a.length;b--;)a[b].addEventListener("click",function(a){l(this,"kint-source");a.preventDefault()},
d);a=document.getElementsByClassName("kint-object-parent");for(b=a.length;b--;)a[b].addEventListener("click",function(a){l(this,"kint-object");a.preventDefault()},d);a=document.getElementsByClassName("kint-ide-link");for(c=a.length;c--;)a[c]
.addEventListener("click",function(a){a.preventDefault();a=new XMLHttpRequest;a.open("GET",this.href);a.send(null);return d},d)},d)}</script>




<div class="kint" style="box-shadow: 6px 0 3px -3px #e3ecf0 inset"><dl><dt class="kint-parent"><div class="kint-plus _kint-collapse"></div><dfn>$mydeeparray</dfn> <var>array</var> <span>(1)</span><dd><dl><dt class="kint-parent"><div class="kint-plus _kint-collapse"></div>'<dfn>Level1</dfn>' => <var>array</var> <span>(1)</span><dd><dl><dt class="kint-parent"><div class="kint-plus _kint-collapse"></div>'<dfn>Level2</dfn>' => <var>array</var> <span>(1)</span><dd><dl><dt> <var>string</var>(8) "Level 42"</dl></dd></dl></dd></dl></dd></dl><span>Called from <u>/home/someone/Examples/scratchpad/scratch.php</u> line <i>15</i></span></div>


<p>```</p>
]]></content>
  </entry>
  
</feed>
