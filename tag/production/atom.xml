<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: production | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/production/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-02-03T12:08:25+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Magento Database Migrations to Track Configuration Changes]]></title>
    <link href="http://edmondscommerce.github.io/magento/using-magento-database-migrations-to-track-configuration-changes.html"/>
    <updated>2013-05-21T09:11:44+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/using-magento-database-migrations-to-track-configuration-changes</id>
    <content type="html"><![CDATA[<p>Often when working on a Magento site, there is a requirement to build custom functionality or implement new themes etc but to finish the job, the final step will be to perform some admin configuration.</p>

<p>This manual step can introduce the possiblity of human error if a step is missed or not performed exactly correctly.</p>

<p>Also if the configuration is to be applied multiple times across staging, pre production and final production then these risks increase.</p>

<p>The only sure way to make sure that the correct configuration is applied and also to provide a proper audit trail for configuration changes is to use Magento&rsquo;s database migrations &ndash; install and upgrade scripts &ndash; to update the database programmatically with the required configuration changes.</p>

<p>To assist with this, there is a nice simple module you can find on Git Hub:</p>

<p><a href="https://github.com/danslo/MigrationHelper"><a href="https://github.com/danslo/MigrationHelper">https://github.com/danslo/MigrationHelper</a></a></p>

<p>This module will automatically create the migration files for you which can be a real time saver.</p>

<p>I would always suggest you create your own custom namespaced configuration migration module that is purely to track these configuration changes.</p>
]]></content>
  </entry>
  
</feed>
