<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: magento problem | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/magento-problem/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2015-04-15T12:23:48+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Magento Category Move Error Exception General error: 1205 + solution]]></title>
    <link href="http://edmondscommerce.github.io/magento/magento-category-move-error-exception-general-error-1205-solution.html"/>
    <updated>2013-04-05T15:44:14+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/magento-category-move-error-exception-general-error-1205-solution</id>
    <content type="html"><![CDATA[<p>There is a problem in Magento that when you try to move a category by dragging it in the admin, it can cause the above error, whilst causing the rest of the site to slow down.</p>

<p>This is caused by the system trying to re-index every product within the space of a transaction.</p>

<p>An easy way to get round this is to switch the indexing mode from auto to manual and then move the categories.</p>

<p>You will still need to re-index the site, but this can be run on a cron when the site is quite.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to get a configurable products parent in Magento]]></title>
    <link href="http://edmondscommerce.github.io/magento/how-to-get-a-configurable-products-parent-in-magento.html"/>
    <updated>2012-01-20T15:19:23+00:00</updated>
    <id>http://edmondscommerce.github.io/magento/how-to-get-a-configurable-products-parent-in-magento</id>
    <content type="html"><![CDATA[<p>I recently needed magento to be able to load a product, and if that product was part of a configurable product detect this and return the parent product if that existed. Looking around google I came across this code snippet and thought it should work</p>

<p>```php</p>

<p>$<em>product = Mage::getModel(&lsquo;catalog/product&rsquo;)&ndash;>load($productId);
$parentIdArray = $</em>product->loadParentProductIds()</p>

<pre><code>             -&gt;getData('parent_product_ids');
</code></pre>

<p>if(!empty($parentIdArray)) {</p>

<pre><code>// do something
</code></pre>

<p>}</p>

<p>```</p>

<p>The problem is that the loadParentProductIds method was depreciated in 1.4.2.0 and I&rsquo;m running 1.6. The new way of doing detecting if a product has a parent is to do this
```php</p>

<p>$configurable_product_model = Mage::getModel(&lsquo;catalog/product_type_configurable&rsquo;);
$parentIdArray= $configurable_product_model->getParentIdsByChild($productId);
if(!empty($parentIdArray)) {</p>

<pre><code>// do something
</code></pre>

<p>}</p>

<p>```</p>

<p>Using this method I overrode the Mage_Catalog_Model_Product class and added this method, which will always return a configurable product if the product is associated with one. Be aware, that if you products belong to more than one configurable product you will have to modify the logic</p>

<p>```php</p>

<p>public function getConfigurableProduct() {</p>

<pre><code>switch ($this-&gt;type_id) {
    case 'configurable':
        return $this;
        break;
    default:
        $configurable_product_model = Mage::getModel('catalog/product_type_configurable');
        $parentId= $configurable_product_model-&gt;getParentIdsByChild($this-&gt;getId());
        if(isset($parentId[0])) {
            $this-&gt;load($parentId[0]);
        }
        break;
}

return $this;
</code></pre>

<p>}</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Console Log not working in Magento + solution]]></title>
    <link href="http://edmondscommerce.github.io/magento/console-log-not-working-in-magento-solution.html"/>
    <updated>2011-12-16T13:10:11+00:00</updated>
    <id>http://edmondscommerce.github.io/magento/console-log-not-working-in-magento-solution</id>
    <content type="html"><![CDATA[<p>If you are writing any javascript in magento and try to debug using console.log, you may find that nothing happens in Chrome, but everything works as expected in Firefox.</p>

<p>The reason for this is that varien have included a blank console object to prevent any calls to the console throwing an error if a console isn&rsquo;t defined. However they explicitly check for firebug, which means if your running chrome the built in console is replaced.</p>

<p>To fix this you need to edit the js/varien/js.js file and find the following line
<code>
 if (!(&ldquo;console&rdquo; in window) || !(&ldquo;firebug&rdquo; in console))
</code></p>

<p>Replace the line with the following
<code>
 if (!(&ldquo;console&rdquo; in window) || typeof console !== &lsquo;object&rsquo;)
</code></p>

<p>and you can start console logging in chrome</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento javascript stopped working + solution]]></title>
    <link href="http://edmondscommerce.github.io/magento/magento-javascript-stopped-working-solution.html"/>
    <updated>2011-08-11T14:52:58+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/magento-javascript-stopped-working-solution</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve just spent to long trying to fix an infuriating problem with a simple fix. If you create a new theme from scratch and suddenly realise that none of your magento javascript is working, it could be because you&rsquo;ve included jQuery and forgotten to include the noConflict argument.</p>

<p>If you have included jQuery, then make sure the following line is included at the top of your page.</p>

<p><code>
jQuery.noConflict();
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento Install Problem + Solution 'sales_flat_quote' already exists]]></title>
    <link href="http://edmondscommerce.github.io/magento/magento-install-problem-solution-sales_flat_quote-already-exists.html"/>
    <updated>2009-03-10T14:48:16+00:00</updated>
    <id>http://edmondscommerce.github.io/magento/magento-install-problem-solution-sales_flat_quote-already-exists</id>
    <content type="html"><![CDATA[<p>Trying to do a clean install of Magento 1.2.1.2 I kept hitting this SQL error.</p>

<p><strong>Base table or view already exists: 1050 Table &lsquo;sales_flat_quote&rsquo; already exists</strong></p>

<p>In the end I opted to manually edit the related install file and add DELETE IF EXISTS statements before each CREATE TABLE statement.</p>

<p>The file in question is located here:</p>

<p><strong>/app/code/core/Mage/Sales/sql/sales_setup</strong></p>

<p>and the problem file is</p>

<p><strong>mysql4-install-0.9.0.php</strong></p>

<p>The solution is to edit the file and add DROP TABLE IF EXISTS statements before each CREATE TABLE statement</p>

<p>eg</p>

<p>```php</p>

<p>DROP TABLE IF EXISTS  <code>{$installer-&gt;getTable('sales_flat_quote')}</code>;</p>

<p>CREATE TABLE <code>{$installer-&gt;getTable('sales_flat_quote')}</code> (&hellip;..</p>

<p>```</p>

<p>I have created an issue on their bug tracker <a href="http://www.magentocommerce.com/bug-tracking/issue/?issue=5517" rel="nofollow">here</a>.</p>
]]></content>
  </entry>
  
</feed>
