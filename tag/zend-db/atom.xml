<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: zend_db | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/zend-db/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-11-11T14:12:46+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Zend Framework DB Exceptions  - Show SQL]]></title>
    <link href="http://edmondscommerce.github.io/zend%20framework/zend-framework-db-exceptions-show-sql.html"/>
    <updated>2009-04-15T14:59:25+01:00</updated>
    <id>http://edmondscommerce.github.io/zend%20framework/zend-framework-db-exceptions-show-sql</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>Its all well and good showing me the MySQL error information, but these kinds of messages always refer to the actual SQL being submitted.</p>

<p>As Zend_Db is an abstraction layer, it is often not exactly clear precisely what SQL is being submitted and causing an error.</p>

<p>To fix this and make the exceptions display the actual SQL as well, you need to make a small edit to the file Zend/Db/Statement/{adapter}.php</p>

<p>For me I tend to use the Mysqli adapter so I have edited the file Mysqli.php</p>

<p>In there is a function _prepare.</p>

<p>Line 84 of that file I have updated to the following:</p>

<p>```php</p>

<p>throw new Zend_Db_Statement_Mysqli_Exception(&ldquo;Mysqli prepare error: &rdquo; . $mysqli->error . &ldquo;<br><br>SQL:<br>&rdquo; . $sql);</p>

<p>```</p>

<p>if you wanted to do the same for a different adapter, it should be easy enough to add the <code>php
. "&lt;br&gt;&lt;br&gt;SQL:&lt;br&gt;" . $sql
</code> bit to it.</p>
]]></content>
  </entry>
  
</feed>
