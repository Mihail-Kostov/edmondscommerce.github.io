<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: html | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/html/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-10-16T10:23:53+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Prevent zooming in a mobile browser]]></title>
    <link href="http://edmondscommerce.github.io/css/prevent-zooming-in-a-mobile-browser.html"/>
    <updated>2013-07-26T14:09:53+01:00</updated>
    <id>http://edmondscommerce.github.io/css/prevent-zooming-in-a-mobile-browser</id>
    <content type="html"><![CDATA[<p>It may some times be necessary to prevent a user from zooming in on a mobile browser.</p>

<p>This can be done with the following meta tag</p>

<p>```html</p>

<p><meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
<meta name="viewport" content="width=device-width" /></p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Form File Upload Limits with PHP]]></title>
    <link href="http://edmondscommerce.github.io/php/form-file-upload-limits-with-php.html"/>
    <updated>2013-01-11T16:49:24+00:00</updated>
    <id>http://edmondscommerce.github.io/php/form-file-upload-limits-with-php</id>
    <content type="html"><![CDATA[<p>If you have a form designed to handle file uploads which is failing due to file size then you might like this:</p>

<p>```php</p>

<p>$arrayMaxes = array(</p>

<pre><code>'upload_max_filesize' =&gt; intval(ini_get('upload_max_filesize')),
'post_max_size' =&gt; intval(ini_get('post_max_size')),
'memory_limit' =&gt; intval(ini_get('memory_limit'))
</code></pre>

<p>);
$maxUploadSize = min($arrayMaxes);
foreach ($arrayMaxes as $key => $value) {</p>

<pre><code>if ($value == min($arrayMaxes)) {
    $minimumOfThree = $key;
    break;
}
</code></pre>

<p>}</p>

<p>echo &ldquo;The maximum file size you can upload is $maxUploadSize, this is due to the php.ini setting $mininimumOfThree&rdquo;;</p>

<p>```</p>

<p>This will calculate the smallest value that will be allowed based upon php.ini settings.</p>

<p>You can then incorporate this into your form logic and display so that users have a clear understanding of how large a file they can upload.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Responsive Web Design for Mobile and Tablet Optimised Web Sites]]></title>
    <link href="http://edmondscommerce.github.io/web%20design/responsive-web-design-for-mobile-and-tablet-optimised-web-sites.html"/>
    <updated>2012-11-02T17:42:15+00:00</updated>
    <id>http://edmondscommerce.github.io/web%20design/responsive-web-design-for-mobile-and-tablet-optimised-web-sites</id>
    <content type="html"><![CDATA[<p>If you are at all involved or exposed to the world of web design and web development then you have no doubt heard of the phrase &ldquo;responsive&rdquo; web design. If you browse the popular theme sites for themes for platforms like WordPress and Magento then you can see responsive themes becoming more popular.</p>

<p>So what does it mean and how does it work?</p>

<h3>What does Responsive Web Design Mean?</h3>


<p>Responsive designs change the layout and visible content on a page depending on the width, height and other factors of the device or window rendering the page. You can generally test out responsive designs by simply unmaximising a browser window and then resizing it down to smaller sizes such as 320 pixels wide. On a normal design you would be quite lucky if the site still rendered in a readable way at that width. More than likely you will only be able to see a fraction of the page and would have to sideways scroll to see the rest of it.</p>

<p>On a responsively designed site, the layout would change as the screen width gets smaller. It might hide certain elements such as side columns and may make things rearrange in a more vertical way to allow them to be displayed without the need for side scrolling.</p>

<p>In a nutshell, this is what responsive web design means.</p>

<h3>How Does Responsive Web Design Work?</h3>


<p>Responsive web design works by using a CSS3 technique called <a href="http://www.w3.org/TR/css3-mediaqueries/" title="W3C Media Queries Information" target="_blank">Media Queries</a>.</p>

<p>CSS has had the concept of media specific style sheets for quite some time. Traditionally though this was limited to print and screen, allowing for example to remove background images from a page when printing and perhaps adjust font family and size for better printing results.</p>

<p>The media queries functionality extends this concept significantly, allowing custom style rules to be applied based upon a range of differnt media options. The most commonly used of these for responsive web design are width and height.</p>

<p>The full list of properties that can be utilised with media queries include:</p>

<blockquote>width
height
device-width
device-height
orientation
aspect-ratio
device-aspect-ratio
color
color-index
monochrome
resolution
scan
grid</blockquote>




<h3>Get Your Web Site Working Responsively</h3>


<p>If you want to upgrade your web site to use responsive design techniques to better support the wide range of internet devices in use today then <strong><a href="http://edmondscommerce.github.io/contact-us">get in touch</a></strong> with Edmonds Commerce today to discuss how we can help you.</p>

<h3>Some Useful and Interesting Links</h3>


<p><a href="http://www.w3.org/TR/css3-mediaqueries/ " target="_blank"><a href="http://www.w3.org/TR/css3-mediaqueries/">http://www.w3.org/TR/css3-mediaqueries/</a></a>
<a href="http://johnpolacek.github.com/scrolldeck.js/decks/responsive/" target="_blank"><a href="http://johnpolacek.github.com/scrolldeck.js/decks/responsive/">http://johnpolacek.github.com/scrolldeck.js/decks/responsive/</a></a>
<a href="http://reference.sitepoint.com/css/mediaqueries" target="_blank"><a href="http://reference.sitepoint.com/css/mediaqueries">http://reference.sitepoint.com/css/mediaqueries</a></a>
<a href="http://mediaqueri.es/" target="_blank"><a href="http://mediaqueri.es/">http://mediaqueri.es/</a></a>
<a href="http://mac-blog.org.ua/css-3-media-queries-cheat-sheet/" target="_blank"><a href="http://mac-blog.org.ua/css-3-media-queries-cheat-sheet/">http://mac-blog.org.ua/css-3-media-queries-cheat-sheet/</a></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple PHP Scraping with jQuery Like Selectors using Simple HTML Dom]]></title>
    <link href="http://edmondscommerce.github.io/scraping/simple-php-scraping-with-jquery-like-selectors-using-simpledom.html"/>
    <updated>2012-08-21T18:29:43+01:00</updated>
    <id>http://edmondscommerce.github.io/scraping/simple-php-scraping-with-jquery-like-selectors-using-simpledom</id>
    <content type="html"><![CDATA[<p>If you need to do some HTML parsing, scraping etc then you generally have the choice of using the DOM approach to parse the HTML or using regex to pull bits out. I quite like both approaches, there are pros and cons to both so having both options available is the best to ensure you use the right tool for the job on a case by case basis.</p>

<p>Recently though I discovered Simple HTML Dom. This makes the DOM based approach almost ridiculously easy, especially if you are comfortable with jQuery like selectors for pulling out specific DOM nodes.</p>

<p>You can read all about it here:
<a href="http://simplehtmldom.sourceforge.net/manual.htm" title="Simple HTML Dom" target="_blank"><a href="http://simplehtmldom.sourceforge.net/manual.htm">http://simplehtmldom.sourceforge.net/manual.htm</a></a></p>

<p>First impressions are really good, its very easy and the lead in time from installation to using is really fast. I like that, never been much of a fan of having to RTFM for everything!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Comply with the cookie law with very little effort]]></title>
    <link href="http://edmondscommerce.github.io/jquery/comply-with-the-cookie-law-with-very-little-effort.html"/>
    <updated>2012-08-15T14:16:16+01:00</updated>
    <id>http://edmondscommerce.github.io/jquery/comply-with-the-cookie-law-with-very-little-effort</id>
    <content type="html"><![CDATA[<p>A lot of concern has been caused by the &ldquo;Cookie Law&rdquo; which says you must tell people that you use cookies if you do, and 99% of sites do!</p>

<p>Well here&rsquo;s a very simple jQuery bolt-on that deals with that, and although visitors need javascript enabled to see it, you have made &ldquo;best efforts&rdquo; to inform them, and on any eCommerce site you&rsquo;re going to have a &ldquo;this site requires javascript message&rdquo; anyway.</p>

<p>The file to download is from github (isn&rsquo;t opensource great?) <a href="https://github.com/carlwoodhouse/jquery.cookieBar" title="jQuery.cookiebar on github">here</a> and is as simple to implement as add the script file to the head and somewhere on the page insert the following :
```javascript</p>

<script type="text/javascript">
    $(document).ready(function() {
      $.cookieBar();
    });
</script>


<p>```</p>

<p>The example page is also on github : <a href="http://carlwoodhouse.github.com/jquery.cookieBar/" title="CookieBar example page"><a href="http://carlwoodhouse.github.com/jquery.cookieBar/">http://carlwoodhouse.github.com/jquery.cookieBar/</a></a>.</p>
]]></content>
  </entry>
  
</feed>
