<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: property | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/property/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2013-11-29T16:52:40+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Magento: Be Careful with Magic Properties]]></title>
    <link href="http://edmondscommerce.github.io/magento/magento-be-careful-with-magic-properties.html"/>
    <updated>2012-08-29T14:14:53+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/magento-be-careful-with-magic-properties</id>
    <content type="html"><![CDATA[<p>In certain places in Magento, you can simply access the data from an object by property, but <strong>beware</strong>!</p>

<p>For instance, in the product template the following two code snippets have the same effect :&ndash;
<code>php
$_qty = $_product-&gt;stock_item-&gt;stock_qty;
</code>
and
<code>php
$_qty = $_product-&gt;getStockItem()-&gt;getStockQty();
</code></p>

<p>However only the latter will work if you call it from the category view.  This is because the product is not fully loaded, and even doing a
<code>php
$_newproductobject = Mage::getModel('catalog/product')-&gt;load($_product-&gt;getId());
</code>
will not help!</p>

<p>So the moral of this is, use the getters not the magic property.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP, __get() and empty() Not Working As You Expect? - Solution]]></title>
    <link href="http://edmondscommerce.github.io/php/php-__get-and-empty-not-working-as-you-expect-solution.html"/>
    <updated>2010-03-19T10:57:32+00:00</updated>
    <id>http://edmondscommerce.github.io/php/php-__get-and-empty-not-working-as-you-expect-solution</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>If you are tearing your hair out trying to figure out why empty($object->property) = true when var_dump($object->property) outputs a value &ndash; this might be the problem.</p>

<p>It arises if you are using the magic __get() method to serve up object properties.</p>

<p>Apparently PHP&rsquo;s empty() function actually uses isset() to determine if the property is empty or not. To get this to work properly, you also need to declare a magic __isset() method.</p>

<p>This is how I got around this problem:</p>

<p>```php</p>

<p>public function __get($key){</p>

<pre><code>if(/* some condition to return your key */){
    return $this-&gt;$key;
}
return null;
</code></pre>

<p>}</p>

<p>public function __isset($key){</p>

<pre><code>if(null===$this-&gt;__get($key)){
    return false;
}
return true;
</code></pre>

<p>}</p>

<p>```</p>

<p>thanks to Janci&rsquo;s comment <a href="http://www.php.net/manual/en/function.empty.php#93117">here</a>, I&rsquo;m not sure how long that would have taken me to figure out on my own, but for sure you saved me a LOT of time. I hope this blog post helps out someone else who hits this same issue.</p>
]]></content>
  </entry>
  
</feed>
