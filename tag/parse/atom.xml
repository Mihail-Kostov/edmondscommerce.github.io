<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: parse | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/parse/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2013-12-04T20:41:36+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tip: Parse XML Values in bash e.g. Magento local.xml]]></title>
    <link href="http://edmondscommerce.github.io/bash/tip-parse-xml-values-in-bash-e-g-magento-local-xml.html"/>
    <updated>2012-08-23T11:37:58+01:00</updated>
    <id>http://edmondscommerce.github.io/bash/tip-parse-xml-values-in-bash-e-g-magento-local-xml</id>
    <content type="html"><![CDATA[<p>Not the most elegant way to do this, and probably could do with some extra tweaks but it works for our purposes, so presented here in case it fits yours :</p>

<p>```bash</p>

<h1>xml_value path/to/file node_key</h1>

<p>function xml_value(){</p>

<pre><code>grep "&lt;$2&gt;.*&lt;.$2&gt;" $1 | sed -e "s/&lt;\!\[CDATA\[//" | sed -e "s/\]\]&gt;//" | sed -e "s/^.*&lt;$2/&lt;$2/" | cut -f2 -d"&gt;"| cut -f1 -d"&lt;"
</code></pre>

<p>}
```</p>

<p>It also strips out the CDATA tags, which we needed to pull the database details from Magento&rsquo;s local.xml</p>

<p>To use this to get, for example, the database host, you would use the following:</p>

<p><code>bash
DB_HOST=$(xml_value app/etc/local.xml host)
</code></p>

<p>To use this</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple PHP Scraping with jQuery Like Selectors using Simple HTML Dom]]></title>
    <link href="http://edmondscommerce.github.io/scraping/simple-php-scraping-with-jquery-like-selectors-using-simpledom.html"/>
    <updated>2012-08-21T18:29:43+01:00</updated>
    <id>http://edmondscommerce.github.io/scraping/simple-php-scraping-with-jquery-like-selectors-using-simpledom</id>
    <content type="html"><![CDATA[<p>If you need to do some HTML parsing, scraping etc then you generally have the choice of using the DOM approach to parse the HTML or using regex to pull bits out. I quite like both approaches, there are pros and cons to both so having both options available is the best to ensure you use the right tool for the job on a case by case basis.</p>

<p>Recently though I discovered Simple HTML Dom. This makes the DOM based approach almost ridiculously easy, especially if you are comfortable with jQuery like selectors for pulling out specific DOM nodes.</p>

<p>You can read all about it here:
<a href="http://simplehtmldom.sourceforge.net/manual.htm" title="Simple HTML Dom" target="_blank"><a href="http://simplehtmldom.sourceforge.net/manual.htm">http://simplehtmldom.sourceforge.net/manual.htm</a></a></p>

<p>First impressions are really good, its very easy and the lead in time from installation to using is really fast. I like that, never been much of a fan of having to RTFM for everything!</p>
]]></content>
  </entry>
  
</feed>
