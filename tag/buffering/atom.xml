<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: buffering | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/buffering/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-03-26T11:38:07+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Debugging Output Buffering Being Disabled]]></title>
    <link href="http://edmondscommerce.github.io/php/debugging-output-buffering-being-disabled.html"/>
    <updated>2012-08-21T17:09:55+01:00</updated>
    <id>http://edmondscommerce.github.io/php/debugging-output-buffering-being-disabled</id>
    <content type="html"><![CDATA[<p>If you are confused as to exactly which bit of code is killing your output buffer in PHP then you might love this little trick. Combined with Xdebug it can get you to the root of the problem quickly and easily.</p>

<p>The trick involves using the callback function capability of ob_start.</p>

<p>Firstly you need to make a callback handler, for example:</p>

<p>```php</p>

<p>function ob_callback(){</p>

<pre><code>echo 'wtf';
</code></pre>

<p>}</p>

<p>```</p>

<p>Then in your IDE, set a break point on the echo line. If you aren&rsquo;t using Xdebug, you could do something like this instead:</p>

<p>```php</p>

<p>function ob_callback(){</p>

<pre><code>echo '&lt;h1&gt;Output Buffer Has Been Killed&lt;/h1&gt;&lt;pre&gt;';
var_dump(debug_backtrace());
die;
</code></pre>

<p>}</p>

<p>```</p>

<p>Then where you are starting your output buffer, simply pass in the function name as a parameter like so:</p>

<p>```php</p>

<p>ob_start(&lsquo;ob_callback&rsquo;);</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
