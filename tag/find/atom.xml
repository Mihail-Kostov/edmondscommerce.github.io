<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: find | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/find/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2013-12-05T20:04:47+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PHPStorm Regex Convert Array to Object Syntax]]></title>
    <link href="http://edmondscommerce.github.io/php/phpstorm-regex-convert-array-to-object-syntax.html"/>
    <updated>2013-08-27T14:40:35+01:00</updated>
    <id>http://edmondscommerce.github.io/php/phpstorm-regex-convert-array-to-object-syntax</id>
    <content type="html"><![CDATA[<p>If you are converting some code from using array syntax to object property syntax then you might like this little snippet of regex.</p>

<p>This is design to paste straight into the find/replace dialogue in PHPStorm</p>

<p>Find:
```</p>

<p>\$(\w+)[&lsquo;([^&rsquo;]+)&lsquo;]</p>

<p>```</p>

<p>Replace:
```</p>

<p>\\$$1->$2</p>

<p>```</p>

<p>And that is it</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHPStorm Regex Replace "Malformed Replacement String"]]></title>
    <link href="http://edmondscommerce.github.io/phpstorm/phpstorm-regex-replace-malformed-replacement-string.html"/>
    <updated>2013-01-24T17:39:08+00:00</updated>
    <id>http://edmondscommerce.github.io/phpstorm/phpstorm-regex-replace-malformed-replacement-string</id>
    <content type="html"><![CDATA[<p>If you are struggling using PHPStorm to find and replace code with Regex rules then this is your solution.</p>

<p>The problem is that when using the $ sign in your replacement string it confuses it because PHP Storm uses the $ sign to represent sub pattern replacements.</p>

<p>Take the following example code:</p>

<p>```php</p>

<p>$data = array();
$form=$page->find(&lsquo;form.edit_product&rsquo;, 0);</p>

<p>//standard inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;text&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>$data[$input-&gt;name]=$input-&gt;value;
</code></pre>

<p>}</p>

<p>//radio inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;radio&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>if($input-&gt;checked){
    $data[$input-&gt;name]=$input-&gt;value;
}
</code></pre>

<p>}</p>

<p>//checkbox inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;checkbox&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>if($input-&gt;checked){
    $data[$input-&gt;name]=$input-&gt;value;
}
</code></pre>

<p>}</p>

<p>//textareas
$textareas = $form->find(&lsquo;textarea&rsquo;);
foreach($textareas as $textarea){</p>

<pre><code>$data[$textarea-&gt;name]=$textarea-&gt;innertext;
</code></pre>

<p>}</p>

<p>```</p>

<p>And trying to replace the key being used in the data array with a processed one calling a method $this->dataName($key) to generate the following code:</p>

<p>```php</p>

<p>$data = array();
$form=$page->find(&lsquo;form.edit_product&rsquo;, 0);</p>

<p>//standard inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;text&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>$data[$this-&gt;dataName($input-&gt;name)]=$input-&gt;value;
</code></pre>

<p>}</p>

<p>//radio inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;radio&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>if($input-&gt;checked){
    $data[$this-&gt;dataName($input-&gt;name)]=$input-&gt;value;
}
</code></pre>

<p>}</p>

<p>//checkbox inputs
$inputs = $form->find(&lsquo;input[type=&ldquo;checkbox&rdquo;]&rsquo;);
foreach($inputs as $input){</p>

<pre><code>if($input-&gt;checked){
    $data[$this-&gt;dataName($input-&gt;name)]=$input-&gt;value;
}
</code></pre>

<p>}</p>

<p>//textareas
$textareas = $form->find(&lsquo;textarea&rsquo;);
foreach($textareas as $textarea){</p>

<pre><code>$data[$this-&gt;dataName($textarea-&gt;name)]=$textarea-&gt;innertext;
</code></pre>

<p>}</p>

<p>```</p>

<p>You might try the find pattern:</p>

<p>```</p>

<p>\$data[\$([^&ndash;]+)&ndash;>name]</p>

<p>```</p>

<p>And the replace pattern:
```</p>

<p>\$data[\$this->dataName(\$$1->name)]</p>

<p>```</p>

<p>However this will give you the dreaded <b>&ldquo;malformed replacement string&rdquo;</b> Error</p>

<p>The solution is simply to triple escape your dollar signs, so the replacement pattern becomes:</p>

<p>```</p>

<p>\\$data[\\$this->dataName(\\$$1->name)]</p>

<p>```</p>

<p>And it works, woot!</p>

<p>Also when it does work, PHP Storms replacement preview feature is really quite nice</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Transfer Server Permissions]]></title>
    <link href="http://edmondscommerce.github.io/linux/transfer-server-permissions.html"/>
    <updated>2012-09-17T15:00:01+01:00</updated>
    <id>http://edmondscommerce.github.io/linux/transfer-server-permissions</id>
    <content type="html"><![CDATA[<p>So sometimes you might have a restored backup without the correct permissions (whether that be because the backup didn&rsquo;t store the permissions, the file system refused to take them, or you simply forgot to add the -p flag to tar!) and you want to copy the permissions from one machine to another.</p>

<p>Here&rsquo;s a little script to do just that that we found whilst browsing the internet to do just that (uses perl and find) :&ndash;
```bash</p>

<p>find / -type f -o -type d 2>/dev/null | while read FILE; do   perl -le'</p>

<pre><code>printf "chmod %o \"%s\"\n", 07777 &amp; (stat)[2], $_
for @ARGV
</code></pre>

<p>  &lsquo; &ldquo;$FILE&rdquo;; done > /tmp/file_perms.sh</p>

<p>```</p>

<p>If you run that on the server with the correct permissions, then transfer the file to the server with the wrong permissions and run the file with the following command, it will fix the perms on that server :&ndash;
```bash</p>

<p>sh /tmp/file_perms.sh</p>

<p>```</p>

<p>Which may save a lot of transfer time restoring a new backup.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu Bulk Find And Replace GUI - Regexxer]]></title>
    <link href="http://edmondscommerce.github.io/ubuntu/ubuntu-bulk-find-and-replace-gui-regexxer.html"/>
    <updated>2010-01-29T13:21:27+00:00</updated>
    <id>http://edmondscommerce.github.io/ubuntu/ubuntu-bulk-find-and-replace-gui-regexxer</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>If you need to do a bulk find and replace operation on a load of files within a particular folder structure, for example when refactoring some of your code, then instead of trying to use your IDE you could give this little app a try.</p>

<p>It&rsquo;s called Regexxer:</p>

<p><a href="http://regexxer.sourceforge.net/"><a href="http://regexxer.sourceforge.net/">http://regexxer.sourceforge.net/</a></a></p>

<p>And is in the Ubuntu repositories (Software Centre) so is only a couple of clicks away from being installed.</p>

<p>(Note previously I have recommended Search Monkey and I still think that&rsquo;s a great tool, but it doesn&rsquo;t seem to do replace, only find).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find Files Modified in the last X Days]]></title>
    <link href="http://edmondscommerce.github.io/linux/find-files-modified-in-the-last-x-days.html"/>
    <updated>2010-01-04T14:29:01+00:00</updated>
    <id>http://edmondscommerce.github.io/linux/find-files-modified-in-the-last-x-days</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>If you need to check which files (eg PHP files for example) have been modified within the last few days, you can run this quick command.</p>

<p>```</p>

<p>find . -mtime -36 -iname &ldquo;*.php&rdquo; -fprint modded.txt</p>

<p>```</p>

<p>This will generate a list and save it to a file called modded.txt.</p>
]]></content>
  </entry>
  
</feed>
