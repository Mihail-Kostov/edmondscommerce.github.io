<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: developer | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/developer/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-02-14T17:47:11+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Prestashop Debug Mode using the Magento Environment Variable Method]]></title>
    <link href="http://edmondscommerce.github.io/prestashop/prestashop-debug-mode-using-the-magento-environment-variable-method.html"/>
    <updated>2013-04-25T10:14:30+01:00</updated>
    <id>http://edmondscommerce.github.io/prestashop/prestashop-debug-mode-using-the-magento-environment-variable-method</id>
    <content type="html"><![CDATA[<p>Magento developers are no doubt familiar with the concept of defining a server environment variable MAGE_IS_DEVELOPER_MODE so that when running Magento locally it is always in developer mode but there is no chance of accidently deploying a live site in developer mode.</p>

<p>This little trick will allow you to use the same environment variable to also have the same effect when working with PrestaShop.</p>

<p>To explain &ndash; developer mode generally means that things like error messages and debugging information are displayed clearly in the browser which makes things much easier when you are developing, to see what is going wrong.</p>

<p>On a live site you want to keep error information hidden and generally display to the customer a more friendly error message screen that perhaps helps them find their way back to a functional section of the site or gives them information to contact the site owner directly for assistance.</p>

<p>Anyway, to put PrestaShop in debug mode locally but have no risk of deployign this to live you can alter the file: config/defines.inc.php</p>

<p>from
```php</p>

<p>define(&lsquo;<em>PS_MODE_DEV</em>&rsquo;, false);</p>

<p>```</p>

<p>to
```php</p>

<p>define(&lsquo;<em>PS_MODE_DEV</em>&rsquo;, isset($_SERVER[&lsquo;MAGE_IS_DEVELOPER_MODE&rsquo;]));</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PrestaShop - Developer Notes]]></title>
    <link href="http://edmondscommerce.github.io/prestashop/prestashop-developer-notes.html"/>
    <updated>2013-03-19T17:47:26+00:00</updated>
    <id>http://edmondscommerce.github.io/prestashop/prestashop-developer-notes</id>
    <content type="html"><![CDATA[<p>PrestaShop is a fully featured shopping platform and offers much of the functionality that other eCommerce shopping platforms do. Compared to, for example, Magento PrestaShop is significantly simpler to develop for.</p>

<p>Here is the run down of the key aspects that any one building a web site on PrestaShop should be aware of.</p>

<h2>Modules</h2>


<p>PrestaShop is based around a modular design which is quite similar to Joomlas module system.
A modules presence and position on the front end is defined by hooking the module into a particular section on the frontend. There are loads of hooks that can be used. Most modules will add them selves to the hook they think is most appropriate on install. The ordering of modules also defines the order they appear in a given hook.
A key point of managing modules that can easily be over looked is that you can grab and drag modules in a given hook by clicking and holding the position change buttons.</p>

<h2>Themes</h2>


<p>Off the shelf themes are usually not simply a new set of templates and CSS but also modules as well. Quite allot of themes are built around specific modules being in specific hooks some times in a specific order.</p>

<h2>Creating your own module</h2>


<p>Defining your own module is really straight forward:
Create a folder in modules called my_module.
Create a file called my_module.php, in this file create a class called My_module which extends Module.
Create a config.xml with the following template:
&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;UTF-8&rdquo; ?>
<module></p>

<pre><code>&lt;name&gt;my_module&lt;/name&gt;
&lt;displayName&gt;My Module&lt;/displayName&gt;
&lt;version&gt;1&lt;/version&gt;
&lt;description&gt;A test module, it does nothing&lt;/description&gt;
&lt;author&gt;My self&lt;/author&gt;
&lt;tab&gt;front_office_features&lt;/tab&gt;
&lt;is_configurable&gt;0&lt;/is_configurable&gt;
&lt;need_instance&gt;1&lt;/need_instance&gt;
</code></pre>

<p></module>
Done, the module will appear in the module list but do nothing. You can look at the base module class to see all the function available that get called by PrestaShop are different times to do what you need to do.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firefox and Responsive Web Design]]></title>
    <link href="http://edmondscommerce.github.io/css/firefox-and-responsive-web-design.html"/>
    <updated>2013-01-10T12:16:28+00:00</updated>
    <id>http://edmondscommerce.github.io/css/firefox-and-responsive-web-design</id>
    <content type="html"><![CDATA[<p>Responsive web design is an excellent way to make a site work really well for a variety of different screen sizes without having to serve more than one design to users. Responsive web design does pose additional challenges however.</p>

<p>Some of the challenges for you, as the developer, are being able to implement, test and debug the design implementation. Fortunately built in to Firefox&rsquo;s arsenal of developer tools is an interface for exactly that!</p>

<p>Lets take a website that uses a responsive design:
<img src="/assets/large-no-tools-600x396.png">
Here is the &lsquo;mobile&rsquo; view:<img src="/assets/small-no-tools.png"></p>

<p>So every thing is normal you can use the developer tools and Firebug or whatever. If you then need to make changes to the smaller version and use Firebug you would have to pop out Firebug (which may or may not be to your preference) then resize the main window. This works ok but Firebug currently isn&rsquo;t great for working with responsive designs as it doesn&rsquo;t show you all the rules that might apply based on the screen size and other conditions. This is one area that the Firefox built in tools beat Firebug. The styles editor shows you all rules that could apply and their conditions.</p>

<p>To activate Firefox&rsquo;s responsive design view press Ctrl + Shift + M. You can open the inspector and stlyes by pressing Ctrl + Shift + I. You can also access the responsive design view by going to Tools > Web Developer. With responsive design view enabled you can still use Firebug without a problem, unless you enable the built in element inspector then you kind of lose loads of screen space.</p>

<p><img src="/assets/small-tools-600x447.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Uploading Multiple Files - Nothing in _POST, _FILES or _REQUEST +Solution]]></title>
    <link href="http://edmondscommerce.github.io/php/uploading-multiple-files-nothing-in-_post-_files-or-_request-solution.html"/>
    <updated>2012-12-17T15:27:14+00:00</updated>
    <id>http://edmondscommerce.github.io/php/uploading-multiple-files-nothing-in-_post-_files-or-_request-solution</id>
    <content type="html"><![CDATA[<p>When you&rsquo;re uploading multiple files (HTML5 feature &ndash; remember IE as yet STILL does not support this), it may not be the fact you&rsquo;re uploading multiple files that&rsquo;s actually causing the problem.</p>

<p>The problem often is actually caused by the various php memory limits in play, one way to avoid getting caught by this is using the following snippet in the form&rsquo;s php to remind you which restrictions are in play (note the min_by_key() function is from the php.net comments) :&ndash;</p>

<p>```php</p>

<p>&lt;?php
function min_by_key($arr, $key){</p>

<pre><code>$min = array();
foreach ($arr as $val) {
    if (!isset($val[$key]) and is_array($val)) {
        $min2 = min_by_key($val, $key);
        $min[$min2] = 1;
    } elseif (!isset($val[$key]) and !is_array($val)) {
        return false;
    } elseif (isset($val[$key])) {
        $min[$val[$key]] = 1;
    }
}
return min( array_keys($min) );
</code></pre>

<p>}</p>

<p>$arrayMaxes = array(</p>

<pre><code>'upload_max_filesize'=&gt;intval(ini_get('upload_max_filesize')),
'post_max_size'=&gt;intval(ini_get('post_max_size')),
'memory_limit'=&gt;intval(ini_get('memory_limit'))
</code></pre>

<p>);
$maxUploadSize = min($arrayMaxes);
foreach ($arrayMaxes as $key=>$value) {</p>

<pre><code>if ($value == min($arrayMaxes)) {
    $minimumOfThree = $key;
}
</code></pre>

<p>}?></p>

<p><p>Max filesize &lt;?php echo $maxUploadSize; ?>M Maximum filesize due to server setting &lt;?php echo $minimumOfThree; ?> in php.ini</p></p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHPStorm: Get More Info on Auto-Complete (like netbeans)]]></title>
    <link href="http://edmondscommerce.github.io/phpstorm/phpstorm-get-more-info-on-auto-complete-like-netbeans.html"/>
    <updated>2012-12-13T17:00:20+00:00</updated>
    <id>http://edmondscommerce.github.io/phpstorm/phpstorm-get-more-info-on-auto-complete-like-netbeans</id>
    <content type="html"><![CDATA[<p>All developers love code completion, but sometimes the minimalist info that can come up in PHPStorm can be not quite enough.</p>

<p>Netbeans gave an excerpt that gave plenty of information from the docblock, and PHPStorm can do too, it just defaults to off.</p>

<p>The setting is under Editor->Code Completion and is &ldquo;Show full signatures&rdquo;.  The good news is it is an &ldquo;IDE Setting&rdquo; so it persists for all projects, the bad news is that that means the setting will be forgotten about before you next reinstall and want it again.</p>
]]></content>
  </entry>
  
</feed>
