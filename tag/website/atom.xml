<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: website | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/website/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2015-05-07T15:20:44+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Wget For Beginners]]></title>
    <link href="http://edmondscommerce.github.io/linux/wget-for-beginners.html"/>
    <updated>2012-11-19T08:02:25+00:00</updated>
    <id>http://edmondscommerce.github.io/linux/wget-for-beginners</id>
    <content type="html"><![CDATA[<h3>What is Wget in general ?</h3>


<p>Wget is a free utility for non-interactive download of file from the web. The user doesnâ€™t need to login system every time <a href="http://www.gnu.org/software/wget/" rel="nofollow">Wget</a> can download the entire web page or mirroring the entire web page. If download crashed or stop for various reason Wget will start download again from where it stopped. It is highly recommended for downloading file from web with slow network connections.</p>

<h2>How to Use Wget ? </h2>


<p>```php</p>

<p>wget -t 10 www.google.com</p>

<p>```</p>

<p>If network connection fails Wget will to try to reconnect 20 times in default.With -t command we can specify how many times it need to  reconnect.</p>

<p>```php</p>

<p>wget -p &mdash;convert-links -r www.google.com -o logfile</p>

<p>```</p>

<p>This command will download the site -p and &mdash;convert will make sure all linked files are linked to downloaded document such as images and external links it enables complete offline viewing. Log file can be enabled with -O command to view the output message.</p>

<p>```php</p>

<p>wget &mdash;spider &mdash;force-html www.google.com</p>

<p>```</p>

<p>&mdash;spider Will check the webpage is existent or not.
&mdash;force  It will enforce the file type that have to be downloaded.</p>

<p>```php</p>

<p>wget -u mozilla www.google.com</p>

<p>```</p>

<p>some site access allowed to certain user <a href="http://www.user-agents.org/" rel="nofollow">agents</a>. So to access with certain user agent you can use this command.</p>

<p>Ftp connection download is achieved by</p>

<p>```php</p>

<p>wget -r <a href="ftp://username:password@ftp.example.com">ftp://username:password@ftp.example.com</a></p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento Multi Store, Websites and Storeviews Explained]]></title>
    <link href="http://edmondscommerce.github.io/magento/magento-multi-store-websites-and-storeviews-explained.html"/>
    <updated>2012-10-16T13:56:19+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/magento-multi-store-websites-and-storeviews-explained</id>
    <content type="html"><![CDATA[<p>One of the most exciting features of Magento for many merchants is the ability to run multiple front end websites with a single administration area. For those of you who have managed multiple separate installations of a cart system to power many websites, perhaps selling the same products, then this on its own can make a huge difference in terms of ease of management.</p>

<p>Magento has had multi store functionality designed in from the ground up. This results in a multistore implementation that feels solid and intuitive and also very powerful. This is in contrast to other carts' multi store systems which can often feel like a bit of a bolt on after thought that isn&rsquo;t as clearly embedded into the system.</p>

<h2>Magento Scopes</h2>


<p>Magento has a hierarchical system of stores with 4 levels.</p>

<h3>Global Scope</h3>


<p>The top of the hierarchy is the global scope. This scope defines the default values for the various attributes that products and categories contain. You can not see the global scope as a store front but in the admin side the global scope is the one you work in by default and is likely to be where you spend most of your admin time.</p>

<h3>Website Scope</h3>


<p>Magento has the concept of websites. You can think of a website as a domain name (though this is perhaps an over simplification). A website can contain one or more stores.</p>

<h3>Store Scope</h3>


<p>A store is the item that contains products and categories. A category structure is built from a &ldquo;root&rdquo; category. The root category is not displayed on the front end, its children categories become the top level categories for the store when viewed in the front end. A store can have it&rsquo;s own root category and structure or can share the same one used by other stores.</p>

<h3>Store View</h3>


<p>Every store contains at least one store view. You can generally think of store views as translations of a store (though this is not the only use case). The category structure will be the same for the various store views and this scope is generally used to store alternative values for textual content such as product names, descriptions etc.</p>

<h2>Editing Values on a Per Scope Basis</h2>


<p>When you are editing products, categories or configuration in your Magento admin you will have a drop down in the top left of the screen that determines which scope you are currently working in. As a best practice always try to be as close to the global scope as possible when making your edits, only descending into the lower scopes as required.</p>

<h2>Possibilites</h2>


<p>The possibilities of these various scopes are almost limitless, you can manage a large and diverse range of store fronts that may or may not be clearly related to each other from the customers point of view from a single Magento administration. Like many things in Magento, this powerful system can become complex and we really strongly advise that you plan out your store structure before you start actually adding things so that you ensure you are building a nice logical system that is going to scale up as you grow.</p>
]]></content>
  </entry>
  
</feed>
