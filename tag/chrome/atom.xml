<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: chrome | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/chrome/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-10-16T11:46:06+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mute Chrome/Chromium in Gnome Shell]]></title>
    <link href="http://edmondscommerce.github.io/linux/mute-chrome-slash-chromium-in-gnome-shell.html"/>
    <updated>2014-08-04T10:09:42+01:00</updated>
    <id>http://edmondscommerce.github.io/linux/mute-chrome-slash-chromium-in-gnome-shell</id>
    <content type="html"><![CDATA[<p>You might not be aware that in Gnome Shell and likely anything else using Linux you can easily block sound from entire applications.</p>

<p>For me this means blocking annoying auto playing videos with sound that are cropping up as I&rsquo;m trying to listen to some nice tunes whilst I work.</p>

<p>To block the sound is very easy, simply go to the sound control panel which in Gnome Shell is access via the top right panel.</p>

<p>Once into the sound section, go to the right most tab where you can control sounds on an application by application basis. Simply turn off the annoying onces.</p>

<p><img src="/assets/mute-chromium.png"></p>

<p>Beautiful :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disable JavaScript alerts for a page]]></title>
    <link href="http://edmondscommerce.github.io/javascript/disable-javascript-alerts-for-a-page.html"/>
    <updated>2013-08-28T09:21:30+01:00</updated>
    <id>http://edmondscommerce.github.io/javascript/disable-javascript-alerts-for-a-page</id>
    <content type="html"><![CDATA[<p>If you encounter a webpage that is generating a lot of alerts, the following bookmark will prevent them from stealing focus but still allow you to see what is being said.</p>

<p>```js</p>

<p>javascript:alert = function ( text ) { console.log( text ); return true; };</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Easily Test Mobile Version of your Site with Chrome]]></title>
    <link href="http://edmondscommerce.github.io/Mobile%20optimisation/easily-test-mobile-version-of-your-site-with-chrome.html"/>
    <updated>2013-06-03T15:33:27+01:00</updated>
    <id>http://edmondscommerce.github.io/Mobile%20optimisation/easily-test-mobile-version-of-your-site-with-chrome</id>
    <content type="html"><![CDATA[<p>If you have opted to have a customised mobile theme displayed for mobile users of your web site then it can be useful to be able to test this theme from the desktop. This is quite simple to do and there are plugins for most browsers. These days though Chrome users have this functionality built in, and quite nicely as well.</p>

<p>To access a mobile version of a site simply open Chrome and navigate to the site you would like to view in mobile version.</p>

<p>Then hit F12 to bring up the developer tools. Alternatively you can go to the right hand menu and select developer tools under the tools menu. This should bring up a screen looking similar to this:</p>

<p><img src="/assets/Screenshot-from-2013-06-03-162921-600x475.png"></p>

<p>In the bottom right hand corner of this screen you will see a little cog icon, please click that:</p>

<p><img src="/assets/Screenshot-from-2013-06-03-162956.png"></p>

<p>This gives you the overrides menu where you can select the phone you want to emulate. You can also tick the device metrics box so that the displayable area corresponds to that of the phone giving you a good emultation of the phone experience.<img src="/assets/Screenshot-from-2013-06-03-163013-600x354.png"></p>

<p>Tick the box next to User Agent and choose a phone.</p>

<p>Once you have selected the phone you want to emulate under the &ldquo;user agent&rdquo; section and also optionally ticked the box next to &ldquo;Device metrics&rdquo; then you can reload the page (hit [ctrl] + [f5]) and the page will be reloaded and should show you the mobile version of your site.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Jquery to Any Page via Console]]></title>
    <link href="http://edmondscommerce.github.io/jquery/add-jquery-to-any-page-via-console.html"/>
    <updated>2013-03-26T18:44:22+00:00</updated>
    <id>http://edmondscommerce.github.io/jquery/add-jquery-to-any-page-via-console</id>
    <content type="html"><![CDATA[<p>Sometimes you might want to do a little on the fly DOM editing using your favourite Javascript library &ndash; jQuery.</p>

<p>To do this you might need to include jQuery on the page, you can do this by pasting these lines into your console in Chrome or Firebug in Firefox.</p>

<pre class="lang:js decode:true " title="Run this in your console" >var jq = document.createElement('script');
jq.src = "http://code.jquery.com/jquery-latest.min.js";
document.getElementsByTagName('head')[0].appendChild(jq);
jQuery.noConflict();
</pre>


<p></p>

<p>And there you have it, the full power of jQuery at your fingertips</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reading JSON without Reading JSON!]]></title>
    <link href="http://edmondscommerce.github.io/programming/reading-json-without-reading-json.html"/>
    <updated>2013-02-08T16:16:19+00:00</updated>
    <id>http://edmondscommerce.github.io/programming/reading-json-without-reading-json</id>
    <content type="html"><![CDATA[<p>JSON is a well structure interoperable way of passing data between systems. It&rsquo;s a good way of passing large amount of data into a web page for JavaScript to process and between system on the internet regardless of there architecture or programming language.</p>

<p>JSON is one of the hardest data structure to read directly as a human in it&rsquo;s RAW format compared to other formal grammars such as XML, YAML or ini.</p>

<p>Fortunately there is an easy trick that you can do with Chrome, Firefox with Firebug and even Opera and IE9!</p>

<p>Take the JSON you have, wrap it in &ldquo;eval()&rdquo; the same as you would if you where writing a web page (because it is just JavaScript after all) run it and every modern browser this was tested with should allow you to inspect the resulting data structure.</p>

<p>Example JSON:
<code>
{&ldquo;glossary&rdquo;:{&ldquo;title&rdquo;:&ldquo;example glossary&rdquo;,&ldquo;GlossDiv&rdquo;:{&ldquo;title&rdquo;:&ldquo;S&rdquo;,&ldquo;GlossList&rdquo;:{&ldquo;GlossEntry&rdquo;:{&ldquo;ID&rdquo;:&ldquo;SGML&rdquo;,&ldquo;SortAs&rdquo;:&ldquo;SGML&rdquo;,&ldquo;GlossTerm&rdquo;:&ldquo;Standard Generalized Markup Language&rdquo;,&ldquo;Acronym&rdquo;:&ldquo;SGML&rdquo;,&ldquo;Abbrev&rdquo;:&ldquo;ISO 8879:1986&rdquo;,&ldquo;GlossDef&rdquo;:{&ldquo;para&rdquo;:&ldquo;A meta-markup language, used to create markup languages such as DocBook.&rdquo;,&ldquo;GlossSeeAlso&rdquo;:[&ldquo;GML&rdquo;,&ldquo;XML&rdquo;]},&ldquo;GlossSee&rdquo;:&ldquo;markup&rdquo;}}}}}
</code></p>

<table>
<tr>
<td>
Firefox with Firebug:
<img src="/assets/firefoxjson-600x328.png">
</td>
</tr>
<tr>
<td>
Chrome:
<img src="/assets/chromejson-600x313.png">
</td>
</tr>
<tr>
<td>
Opera:
<img src="/assets/bhtAjti.png">
</td>
</tr>
<tr>
<td>
Internet Explorer 9:
Note: To see this structure you need to click the "Add watcher" link displayed upon running the code.
<img src="/assets/ie9json.png">
</td>
</tr>
</table>

]]></content>
  </entry>
  
</feed>
