<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: wordpress | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/wordpress/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2015-06-24T10:23:39+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Correct recursive backups in bash]]></title>
    <link href="http://edmondscommerce.github.io/bash/correct-recursive-backups-in-bash.html"/>
    <updated>2013-02-20T20:54:57+00:00</updated>
    <id>http://edmondscommerce.github.io/bash/correct-recursive-backups-in-bash</id>
    <content type="html"><![CDATA[<p>Sometime a backup script can go wrong, and rather the overwrite the old files you place a copy of the new ones into the same folder.</p>

<p>This can then escalate and before you know it you have multiple levels of the same files.</p>

<p>If you just want to flatten these files then this script can do that you</p>

<p>```bash</p>

<p>// The duplicated directory
DUPLICATED_DIR_NAME=&lsquo;uploads&rsquo;
// A new directory for the files to go into
NEW_DIR_NAME=&lsquo;realuploads&rsquo;
for f in <code>find ./ | grep $DUPLICATED_DIR_NAME/$DUPLICATED_DIR_NAME</code>;
do
NEWFILE=<code>echo $f | sed 's/$DUPLICATED_DIR_NAME\//\//g'</code>;
NEWDIR=../$NEW_DIR_NAME/<code>dirname $NEWFILE</code>;
if [[ ! -d $NEWDIR ]]
then
mkdir $NEWDIR;
fi
cp -f &quot;$f&quot; ../$NEW_DIR_NAME/$NEWFILE;
done</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpress: Disqus plugin hiding content on mobile]]></title>
    <link href="http://edmondscommerce.github.io/wordpress/wordpress-disqus-plugin-hiding-content-on-mobile.html"/>
    <updated>2012-08-22T10:46:58+01:00</updated>
    <id>http://edmondscommerce.github.io/wordpress/wordpress-disqus-plugin-hiding-content-on-mobile</id>
    <content type="html"><![CDATA[<p>If you use the disqus plugin on your wordpress site, you may be surprised to learn that your content is hidden on mobile devices (specifically ipad/iphone).</p>

<p>The problem that occurs is that the content is covered by a nice white box that you can&rsquo;t see through.</p>

<p>Thankfully there&rsquo;s a nice quick fix.  In your site&rsquo;s css rules, simply add the following :&ndash;
```css</p>

<h1>disqus_thread { clear: both !important; }</h1>

<p>```</p>

<p>And mobile users can see your content again!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpress Install/Update Plugins etc Locally via Admin]]></title>
    <link href="http://edmondscommerce.github.io/wordpress/wordpress-installupdate-plugins-etc-locally-via-admin.html"/>
    <updated>2012-07-26T15:42:00+01:00</updated>
    <id>http://edmondscommerce.github.io/wordpress/wordpress-installupdate-plugins-etc-locally-via-admin</id>
    <content type="html"><![CDATA[<p>If you like the admin functionality to manage plugins, themes and other updates that wordpress features and would like to have this working when you are developing locally then you might find that you need to set up an FTP server locally just for this purpose.</p>

<p>Perhaps a better solution, especially if you use a *nix based desktop such as Linux is to try this extension:</p>

<p><a href="http://wordpress.org/extend/plugins/ssh-sftp-updater-support/"><a href="http://wordpress.org/extend/plugins/ssh-sftp-updater-support/">http://wordpress.org/extend/plugins/ssh-sftp-updater-support/</a></a></p>

<p>This will extend the FTP functionality to also use SFTP or SSH for the updates. If you are already running an SSH server on your desktop then there is very little left to do. If you are not then a quick</p>

<p>```</p>

<p>sudo apt-get install openssh-server</p>

<p>```</p>

<p>And you are ready to go.</p>

<p>From this point you can then use the admin functionality to manage plugins etc which is a nice slick way of doing things.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpress Upgrade Bash Script]]></title>
    <link href="http://edmondscommerce.github.io/wordpress/wordpress-upgrade-bash-script.html"/>
    <updated>2012-04-11T11:28:46+01:00</updated>
    <id>http://edmondscommerce.github.io/wordpress/wordpress-upgrade-bash-script</id>
    <content type="html"><![CDATA[<p>If you would like to upgrade wordpress directly on the command line using bash then you might like this little script:</p>

<p>```bash</p>

<h1>!/bin/bash</h1>

<h1>This is a script to upgrade wordpress.</h1>

<h1>Put it in your wordpress document root (the folder that contains wp-config.php)</h1>

<h1>chmod +x to make executable</h1>

<h1>./wp-upgrade.bash to run</h1>

<h1>Originally here: <a href="http://yabfog.com/blog/2011/12/12/wordpress-update-bash-script">http://yabfog.com/blog/2011/12/12/wordpress-update-bash-script</a></h1>

<p>DIR=&ldquo;$( cd -P &rdquo;$( dirname &ldquo;${BASH_SOURCE[0]}&rdquo; )&ldquo; &amp;&amp; pwd )&rdquo;
TMPDIR=/tmp/wp-upgrader
mkdir -p $TMPDIR
WPDIR=$TMPDIR/wordpress
mkdir -p $WPDIR
cd $TMPDIR
rm -rf latest.zip ./wordpress # Clean up from the last run
wget -nd <a href="http://wordpress.org/latest.zip">http://wordpress.org/latest.zip</a>
unzip latest.zip
mv $DIR/wp-config.php $DIR/.wp-config.php.backup # Stash your configuration someplace safe
rm $DIR/<em>.{txt,html,php} # Delete the old install
rm -rf $DIR/{wp-admin,wp-includes} # Delete more. Don&rsquo;t delete plugins or themes.
cp -aR $WPDIR/</em> $DIR/
mv $DIR/.wp-config.php.backup  $DIR/wp-config.php # Restore the configuration</p>

<h1>You may not need the last two lines. I like to give my web server the ability to write files.</h1>

<h1>chown -R .www-data $DIR/*.php $DIR/wp-admin $DIR/wp-includes</h1>

<h1>chmod -R g+w $DIR/*.php $DIR/wp-includes</h1>

<p>```</p>

<p>Please don&rsquo;t use on a live site or anything like that, but for local development its a quick way to upgrade the site.</p>

<p>The script was originally <a href="http://yabfog.com/blog/2011/12/12/wordpress-update-bash-script">here</a> I simply edited it a little</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Architecture Wordpress Website for SDM Architecture]]></title>
    <link href="http://edmondscommerce.github.io/portfolio/architecture-wordpress-website-for-sdm-architecture.html"/>
    <updated>2012-03-12T20:21:28+00:00</updated>
    <id>http://edmondscommerce.github.io/portfolio/architecture-wordpress-website-for-sdm-architecture</id>
    <content type="html"><![CDATA[<p>We have recently launched a clean, clear and simple web site for local architects <a href="http://www.sdmarchitecture.co.uk/">SDM architecture</a> who are based in Baildon near Shipley, Bradford and Leeds.</p>

<p>The brief was a clean web site that Stephen the owner can easily manage with his own content showcasing his work and attracting new clients.</p>

<p>All in all the project was a big success with a very rapid turnaround.</p>

<p>Stephen said
&ldquo;you have been very helpful and I have appreciated everything you have done for me&rdquo;.</p>

<p>here is a screenshot:</p>

<p><img src="/assets/Screenshot-600x320.png"></p>
]]></content>
  </entry>
  
</feed>
