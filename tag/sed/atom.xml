<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: sed | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/sed/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2015-06-24T10:23:39+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tip: Remove spaces from filenames one-liner]]></title>
    <link href="http://edmondscommerce.github.io/bash/tip-remove-spaces-from-filenames-one-liner.html"/>
    <updated>2012-11-26T16:16:58+00:00</updated>
    <id>http://edmondscommerce.github.io/bash/tip-remove-spaces-from-filenames-one-liner</id>
    <content type="html"><![CDATA[<p>There is often the case when you need to remove spaces from filenames &ndash; for instance when importing broken data feeds into <a title="Magento" href="http://www.edmondscommerce.co.uk/platforms/magento">Magento</a> or <a title="osCommerce" href="http://www.edmondscommerce.co.uk/platforms/osCommerce">osCommerce</a> systems.</p>

<p>The following strips spaces and replaces them with nothing :&ndash;</p>

<p><code>bash
find directoryname -name '* *' -type f | while read f; do mv &amp;quot;$f&amp;quot; &amp;quot;$(echo $f | sed s/&amp;quot; &amp;quot;/&amp;quot;&amp;quot;/g)&amp;quot;;  done
</code></p>

<p>or alternatively replace them with underscores :&ndash;</p>

<p><code>bash
find directoryname -name '* *' -type f | while read f; do mv &amp;quot;$f&amp;quot; &amp;quot;$(echo $f | sed s/&amp;quot; &amp;quot;/&amp;quot;_&amp;quot;/g)&amp;quot;;  done
</code></p>

<p>Or any other character/string combo you like, you can even be more clever moving them out into subdirectories with more sed magic but you get the idea.  The reason the read command is there is to get the spaces in found filenames which if you simply use a &ldquo;for&rdquo; loop, bash splits on the spaces.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Format searched log files]]></title>
    <link href="http://edmondscommerce.github.io/bash/format-searched-log-files.html"/>
    <updated>2012-08-16T15:45:56+01:00</updated>
    <id>http://edmondscommerce.github.io/bash/format-searched-log-files</id>
    <content type="html"><![CDATA[<p>When you are monitoring a log file you may want to narrow it down, and format the results. This simple one line command will break up the output from a log file to make it easier to quickly read</p>

<p><code>
tail -f /path/to/log | grep &ldquo;search term&rdquo; | sed &rsquo;s/(.*)/&mdash;&mdash;&mdash;&mdash;&mdash;\n\1\n&mdash;&mdash;&mdash;&mdash;&mdash;/&lsquo;
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Formatting the output from tail]]></title>
    <link href="http://edmondscommerce.github.io/linux/formatting-the-output-from-tail.html"/>
    <updated>2012-01-11T16:27:41+00:00</updated>
    <id>http://edmondscommerce.github.io/linux/formatting-the-output-from-tail</id>
    <content type="html"><![CDATA[<p>If you need to monitor a log file in real time, then using a combination of tail and grep will allow you to watch the important parts of the file. However if the log file spans more than one line then it can quickly become difficult to read.</p>

<p>By using sed you are able to format the text so it is easier to read like this</p>

<p><code>
tail -f /path/to/file | sed -u G | grep -A 1 searchTerm
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sed Error Unknown option to 's' + Solution]]></title>
    <link href="http://edmondscommerce.github.io/linux/sed-error-unknown-option-to-s-solution.html"/>
    <updated>2011-03-02T22:34:30+00:00</updated>
    <id>http://edmondscommerce.github.io/linux/sed-error-unknown-option-to-s-solution</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>If you are struggling to figure out why your Sed script is failing this could well be the solution.</p>

<p>Every example you see using sed specifies / as a delimiter.</p>

<p>Now what if your pattern actually includes a slash in the body text?</p>

<p>If you are using a variable you might not realise that you are including a slash.</p>

<p>Easy thing to do, just switch the delimiter to something else like #</p>

<p>so</p>

<p><code>
sed "s/find/$REPLACE/"
</code></p>

<p>becomes</p>

<p><code>
sed "s#find#$REPLACE#"
</code></p>

<p>and hey presto it works!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento Remove Hard Coded URLs from Theme]]></title>
    <link href="http://edmondscommerce.github.io/magento/magento-remove-hard-coded-urls-from-theme.html"/>
    <updated>2010-09-02T14:14:18+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/magento-remove-hard-coded-urls-from-theme</id>
    <content type="html"><![CDATA[<p>If you are working on a theme, you may find that there are hard coded links dotted all over the place.</p>

<p>This can make testing a site offline (and thereby not on the same URL) a bit of a pain.</p>

<p>Here is a quick fix for you:</p>

<ol>
<li>Remove all hard coded links from the CMS section:</li>
</ol>


<p>```sql</p>

<p>update cms_block set content = replace(content, &lsquo;<a href="http://www.domain.com/">http://www.domain.com/</a>&rsquo;, &lsquo;&rsquo;);</p>

<p>```</p>

<p>```sql</p>

<p>update cms_page set content = replace(content, &lsquo;<a href="http://www.domain.com/">http://www.domain.com/</a>&rsquo;, &lsquo;&rsquo;);</p>

<p>```</p>

<ol>
<li>Remove all hard coded links from the theme files.</li>
</ol>


<p>This is a command line one using grep and sed.</p>

<p>Firstly, cd into the root theme folder</p>

<p>```</p>

<p>cd app/design/frontent/default/hardtheme</p>

<p>```</p>

<p>Now find files with hard coded links</p>

<p>```</p>

<p>grep -rl &lsquo;<a href="http://www.domain.com">http://www.domain.com</a>&rsquo; ./</p>

<p>```</p>

<p>Now to automatically remove all those,</p>

<p>```</p>

<p>grep -rl &lsquo;<a href="http://www.domain.com">http://www.domain.com</a>&rsquo; ./ | xargs sed -i &rsquo;s/<a href="http://domain.com//">http://domain.com//</a>&lt;?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB);?>/'</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
