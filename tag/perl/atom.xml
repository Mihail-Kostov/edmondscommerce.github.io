<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: perl | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/perl/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-02-14T17:47:11+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Transfer Server Permissions]]></title>
    <link href="http://edmondscommerce.github.io/linux/transfer-server-permissions.html"/>
    <updated>2012-09-17T15:00:01+01:00</updated>
    <id>http://edmondscommerce.github.io/linux/transfer-server-permissions</id>
    <content type="html"><![CDATA[<p>So sometimes you might have a restored backup without the correct permissions (whether that be because the backup didn&rsquo;t store the permissions, the file system refused to take them, or you simply forgot to add the -p flag to tar!) and you want to copy the permissions from one machine to another.</p>

<p>Here&rsquo;s a little script to do just that that we found whilst browsing the internet to do just that (uses perl and find) :&ndash;
```bash</p>

<p>find / -type f -o -type d 2>/dev/null | while read FILE; do   perl -le'</p>

<pre><code>printf "chmod %o \"%s\"\n", 07777 &amp; (stat)[2], $_
for @ARGV
</code></pre>

<p>  &lsquo; &ldquo;$FILE&rdquo;; done > /tmp/file_perms.sh</p>

<p>```</p>

<p>If you run that on the server with the correct permissions, then transfer the file to the server with the wrong permissions and run the file with the following command, it will fix the perms on that server :&ndash;
```bash</p>

<p>sh /tmp/file_perms.sh</p>

<p>```</p>

<p>Which may save a lot of transfer time restoring a new backup.</p>
]]></content>
  </entry>
  
</feed>
