<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: curl | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/curl/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-03-26T11:38:07+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Product Information Scraper]]></title>
    <link href="http://edmondscommerce.github.io/portfolio/product-information-scraper.html"/>
    <updated>2011-06-09T14:25:59+01:00</updated>
    <id>http://edmondscommerce.github.io/portfolio/product-information-scraper</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<h2>Bespoke Object-Oriented PHP Automated Scraping System</h2>


<p>The aim of this project is to put together an automated price retrial system, capable of running on its own. The system will collect general information for general products as well as more detailed information for named products.</p>

<h3>Discs Like New</h3>


<p>Discs Like New  offer a professional, effective and affordable <a href=”http://www.discslikenew.com/”>disc repair service </a>to business customers throughout the UK and Europe.</p>

<p><h3>
<img src="/assets/code_snippet.jpg">
The project is interesting as it wants to be run from both a web browser, so it can be set up and product files can be uploaded; and from the command line so it can quietly run in the background. This means that it will have to detect this state and modify what it outputs accordingly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Curl 404 but Fine in Browser + Solution]]></title>
    <link href="http://edmondscommerce.github.io/scraping/curl-404-but-fine-in-browser-solution.html"/>
    <updated>2009-05-19T13:55:09+01:00</updated>
    <id>http://edmondscommerce.github.io/scraping/curl-404-but-fine-in-browser-solution</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>I just hit an intriguing situation where a page that was perfectly viewable in my browser was not visible via curl.</p>

<p>I scratched my head and messed around testing the page in variety of online proxy services and local web browsers. I even stared messing about with telnet and manually typing headers. My conclusion was that the simpler systems such as text based browsers were not able to see the page and were instead given a 404 message.</p>

<p>However better more modern browsers could see the page. Likewise the page was visible in the Google cache and aso Google Translate.</p>

<p>In the end I downloaded a neat little firefox add-on called Tamper Data. This allows you to tweak your request headers before they are submitted. 5 minutes later I realised that it was the Gzip compatibility which was causing the issue.</p>

<p>Curl (being the awesome tool that it is) can handle Gzip compression, but I wasn&rsquo;t using it. I have now added the following line to my curl function and I am pulling pages fine.</p>

<p>```php</p>

<p> if(!empty($compression)){</p>

<pre><code>curl_setopt($go,CURLOPT_ENCODING , $compression);
</code></pre>

<p> }</p>

<p>```<h4>More&hellip;</h4></p>

<pre><code>        &lt;div style="font-size: .6em;"&gt;&lt;a href="http://warungkoe.cn/uncategorized/what-every-cfo-should-know-compliance-to-404-of-sarbanes-oxley-part-2.html" rel="nofollow"&gt;What every CFO should know Compliance to &lt;b&gt;404&lt;/b&gt; of Sarbanes Oxley &lt;b&gt;...&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.ideopia.com/wavybrainy/2009/05/naked-html-designers-glorify-error-404-pages/" rel="nofollow"&gt;WavyBrainy » Naked HTML: Designers Glorify Error &lt;b&gt;404&lt;/b&gt; Pages&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.danraine.com/smart-404-pages/" rel="nofollow"&gt;Smart &lt;b&gt;404&lt;/b&gt; Pages « Dan Raine&lt;/a&gt;&lt;br&gt;&lt;a href="http://sceneddl.net/music/speaklowhandsup2009404/" rel="nofollow"&gt;SceneDDL » Speak Low-Hands Up-2009-&lt;b&gt;404&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.404techsupport.com/2009/05/17/monitores-monitor-energy-saver/" rel="nofollow"&gt;&lt;b&gt;404&lt;/b&gt; Tech Support » MonitorES - Monitor Energy Saver&lt;/a&gt;&lt;br&gt;&lt;a href="http://payhalf.com/2009/05/18/4999-rip-curl-core-22-xback-springsuit-shortsleeve-womens-by-whiskeymilitia/" rel="nofollow"&gt;[$49.99] Rip &lt;b&gt;Curl&lt;/b&gt; Core 2/2 XBack Springsuit ShortSleeve Women`s by &lt;b&gt;...&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="http://daniel.haxx.se/blog/2009/05/18/curl-7-19-5/" rel="nofollow"&gt;daniel.haxx.se » &lt;b&gt;curl&lt;/b&gt; 7.19.5&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.hansensurf.com/surfers/?p=401" rel="nofollow"&gt;HansenSurf Blog » » Rip &lt;b&gt;Curl&lt;/b&gt; WLP Fanning Signature Boardshort&lt;/a&gt;&lt;br&gt;&lt;a href="http://dodoincfedora.wordpress.com/2009/05/15/curl-or-libcurl-for-the-app-noob-doubts/" rel="nofollow"&gt;&lt;b&gt;cURL&lt;/b&gt; or libcurl for the app?? Noob doubts.. « Ankur&amp;#39;s Fedora Blog&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.ekremseren.com/2009/05/compression-tools-lzma-bzip2-gzip/" rel="nofollow"&gt;Compression Tools: lzma, bzip2 &amp;amp; &lt;b&gt;gzip&lt;/b&gt; | Ekrem SEREN&amp;#39;s Weblog&lt;/a&gt;&lt;br&gt;&lt;a href="http://farrokhi.net/blog/archives/535" rel="nofollow"&gt;Multi-threaded &lt;b&gt;gzip&lt;/b&gt; | Geek Style&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.lateralcode.com/gzip-files-with-htaccess-and-php/" rel="nofollow"&gt;&lt;b&gt;GZip&lt;/b&gt; files with .htaccess and PHP&lt;/a&gt;&lt;br&gt;&lt;a href="http://wadearnold.com/blog/?p=221" rel="nofollow"&gt;&lt;b&gt;GZip&lt;/b&gt; compression is not part of AMF! | Wade Arnold&lt;/a&gt;&lt;br&gt;&lt;a href="http://www.webveteran.com/blog/index.php/web-coding/coldfusion/fix-for-ie6-and-gzip-compressed-javascripts/" rel="nofollow"&gt;Fix for IE6 and &lt;b&gt;gzip&lt;/b&gt; compressed javascripts | Freelance Web &lt;b&gt;...&lt;/b&gt;&lt;/a&gt;&lt;br&gt;&lt;/div&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building Spiders: Grab Data, Post Forms and Interact with Web Sites Automatically]]></title>
    <link href="http://edmondscommerce.github.io/php/curl/spidering/firefox/programming/building-spiders-grab-data-post-forms-and-interact-with-web-sites-automatically.html"/>
    <updated>2008-02-14T11:56:16+00:00</updated>
    <id>http://edmondscommerce.github.io/php/curl/spidering/firefox/programming/building-spiders-grab-data-post-forms-and-interact-with-web-sites-automatically</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>One of the most useful and powerful things you can do with PHP is to create a programme which will simulate a web browser and can grab data, post data to forms and generally interact with other web sites &ndash; automatically.</p>

<p>For PHP to be able to work like this it must have the CURL library installed and active. It is the CURL library which actually handles all of the interaction and PHP is my scripting language of choice for interacting with CURL.</p>

<p>A simple CURL function is like this:</p>

<p>```php</p>

<p>function curl($url){</p>

<p>$timeout = &lsquo;300&rsquo;; //how long before CURL gives up on this page
$go = curl_init();
curl_setopt ($go, CURLOPT_URL, $url);
curl_setopt ($go, CURLOPT_RETURNTRANSFER, 1);
curl_setopt ($go, CURLOPT_FOLLOWLOCATION, 1);
curl_setopt ($go, CURLOPT_TIMEOUT, $timeout);
$page = curl_exec($go);
curl_close($go);
return $page;</p>

<p>}</p>

<p>```</p>

<p>This function when called and echoed will output the entire html of the $url specified.</p>

<p>For grabbing data from this page to be inserted into a database (for example when spidering a suppliers web site for product information to be inserted into your site) we then use regular expressions to find what we are looking for and then insert that into the database.</p>

<p>so for example if we wanted to grab the product title and we knew that this was wrapped in a h1 tag with the class &ldquo;product title&rdquo; we could use this regexp to grab this:</p>

<p>```php</p>

<p>$page = curl($url);</p>

<p>$pattern = &lsquo;%</p>

<h1 class="product_title">(.+?)</h1>


<p>%i';</p>

<p>preg_match($pattern,$page,$matches);</p>

<p>print_r($matches); //we can see the entire array of matches and choose which we want to insert into the database</p>

<p>```</p>

<p>We can also Post data to web sites using curl. This allows us to do all kinds of things including grabbing data that is displayed on the submission of post forms. Here is an example Curl Post Function:
```php</p>

<p>function curl_post($url,$post_data){</p>

<p>$timeout = &lsquo;300&rsquo;; //how long before CURL gives up on this page
$go = curl_init();
curl_setopt ($go, CURLOPT_URL, $url);
curl_setopt ($go, CURLOPT_RETURNTRANSFER, 1);
curl_setopt ($go, CURLOPT_FOLLOWLOCATION, 1);
curl_setopt ($go, CURLOPT_TIMEOUT, $timeout);
//now for the post section
curl_setopt($go, CURLOPT_POST, true);</p>

<p>curl_setopt($go, CURLOPT_POSTFIELDS, $post_data);
$page = curl_exec($go);
curl_close($go);
return $page;
}</p>

<p>```</p>

<p>It can be tricky to figure out exactly what data should be in the post string. To help you out though is this incredibly handy addon for firefox: <a href="https://addons.mozilla.org/en-US/firefox/addon/3829" target="_blank">Live Http Headers</a>.</p>

<p>This addon lets you see exactly what is going on between your browser and the web site you are visiting. This can quickly and easily give you the information you need to replicate the same behaviour with your CURL script.</p>

<p>Edmonds Commerce specialise in working with PHP and CURL. If you have any spidering, screen scraping or other application that requires PHP to actively interact with other web sites &ndash; <a href="http://www.edmondscommerce.co.uk/contact-about-curl-and-php.html">get in touch today</a> to see how we can help you benefit from this incredibly powerful technique.</p>

<p>Related Resources</p>

<p><a href="http://www.phpfour.com/blog/2008/01/20/php-http-class/" rel="nofollow"><a href="http://www.phpfour.com/blog/2008/01/20/php-http-class/">http://www.phpfour.com/blog/2008/01/20/php-http-class/</a></a></p>

<p><a href="http://www.phpclasses.org/browse/package/1988.html" rel="nofollow"><a href="http://www.phpclasses.org/browse/package/1988.html">http://www.phpclasses.org/browse/package/1988.html</a></a></p>

<p><a href="http://www.phpit.net/article/using-curl-php/" rel="nofollow"><a href="http://www.phpit.net/article/using-curl-php/">http://www.phpit.net/article/using-curl-php/</a></a></p>

<p><a href="http://skeymedia.com/intro-to-curl-with-php/" rel="nofollow"><a href="http://skeymedia.com/intro-to-curl-with-php/">http://skeymedia.com/intro-to-curl-with-php/</a></a></p>
]]></content>
  </entry>
  
</feed>
