<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: table | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/table/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2013-12-04T14:45:41+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA["Base table or view already exists: 1050 Table ‘*’ already exists" After Deleting Tables]]></title>
    <link href="http://edmondscommerce.github.io/magento/base-table-or-view-already-exists-1050-table-already-exists-after-deleting-tables.html"/>
    <updated>2013-01-08T16:27:02+00:00</updated>
    <id>http://edmondscommerce.github.io/magento/base-table-or-view-already-exists-1050-table-already-exists-after-deleting-tables</id>
    <content type="html"><![CDATA[<p>If for example you&rsquo;re removing an extension and want to clear out its information from the database, you&rsquo;ll need to establish the rows and tables it&rsquo;s inserted, as well as some standard Magento table entries.</p>

<p>So you&rsquo;ve removed everything, cleared your cache and now you go to the homepage to check everything is all good, and boom, PDOException:</p>

<p><code>
Base table or view already exists: 1050 Table ‘*’ already exists
</code></p>

<p>In my case it was <code>salesrule</code>, which made me question why it was trying to create the table afresh. The reason I got this is that I&rsquo;d erroneously removed salesrule_setup from core_resource, and therefore Magento was reinstalling the module. Reinstating the row, and clearing my cache solved the issue</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run Multiple MySQL Queries in a Single Function]]></title>
    <link href="http://edmondscommerce.github.io/php/run-multiple-mysql-queries-in-a-single-function.html"/>
    <updated>2012-11-14T12:45:09+00:00</updated>
    <id>http://edmondscommerce.github.io/php/run-multiple-mysql-queries-in-a-single-function</id>
    <content type="html"><![CDATA[<p>If you want to be able to run multiple queries in a single function call, for example doing the classic drop table blah; create table blah; then you might like this function.</p>

<p>The use case is for things like database migration systems which you might copy and paste chunks of SQL including multiple queries from things like phpMyAdmin</p>

<p>```php</p>

<p>/<em>*
 * Run multiple queries passed in as a single string
 * This is optimised for copying and pasting from phpMyAdmin
 *
 * Handy for things like database migration systems
 *
 * @param string $sql  multiple queries terminated with ; and a new line
 </em>/
function multiQuery($sql)
{</p>

<pre><code>$sqls = preg_split('%;$%m', trim($sql));
foreach ($sqls as $q) {
    if (empty($q)) {
        continue;
    }
    mysql_query($q); //suggest you replace this with your custom query function or if not throw in some extra error checking at least
}
</code></pre>

<p>}</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento Inline Translate Not Working + Solution]]></title>
    <link href="http://edmondscommerce.github.io/magento/magento-inline-translate-not-working-solution.html"/>
    <updated>2012-05-04T09:04:03+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/magento-inline-translate-not-working-solution</id>
    <content type="html"><![CDATA[<p>If you are puzzled as to why inline translate in Magento is not saving a particular translation, this could be your issue.</p>

<p>Inline translate uses the table core_translation to store the translations.</p>

<p>The fields that store the data are set to VARCHAR(255) fields.</p>

<p>If your source string is longer than 255 characters, it will fail silently to save the translation.</p>

<p>The simplest solution is to shorten the source string and stick to using inline translate on strings that are shorter than 255 characters.</p>

<p>You could alternatively modify the table but we prefer not to do that kind of thing unless we really have to.</p>

<p>Another workaround for text sections that need to be long is to simply use a static block instead.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Copying Text from PDF table is not formatted correctly + solution]]></title>
    <link href="http://edmondscommerce.github.io/ubuntu/copying-text-from-pdf-table-is-not-formatted-correctly-solution.html"/>
    <updated>2011-12-02T17:41:53+00:00</updated>
    <id>http://edmondscommerce.github.io/ubuntu/copying-text-from-pdf-table-is-not-formatted-correctly-solution</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>If you need to extract the information from a PDF table sometimes when you copy and paste it into a text editor the formatting is incorrect making the information useless.</p>

<p>In cases like this, you can use pdfedit to extract the text in the correct formatting and then do what you need with it.</p>

<p>To use the program first make sure it&rsquo;s installed. If not install it like this</p>

<p><code>
sudo apt-get install pdfedit
</code></p>

<p>then use it to open the PDF. Click through the the correct page and then click Page &ndash;> Extract Text From Page</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Very High Speed Batch Update Multiple Rows of a Table in Single Query]]></title>
    <link href="http://edmondscommerce.github.io/mysql/very-high-speed-batch-update-multiple-rows-of-a-table-in-single-query.html"/>
    <updated>2011-10-13T14:00:26+01:00</updated>
    <id>http://edmondscommerce.github.io/mysql/very-high-speed-batch-update-multiple-rows-of-a-table-in-single-query</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>If you need to update a large number of rows on a single table then your first reaction may be to write a loop that updates one row at a time.</p>

<p>Of course if the table is large then this can result in a very large number of SQL queries.</p>

<p>Taking a bit of inspiration from <a href="http://www.kavoir.com/2009/05/mysql-update-multiple-rows-with-one-single-query.html">this post</a> I have put together this simple PHP function that will allow you to update as many rows as you want.</p>

<p>The trade off is basically memory usage as you build up a big array of row update information preparing for the batch. For this reason you may want to tune the number of rows you update per query.</p>

<p>```php</p>

<p>function bulkUpdateSingleColumn($table, $id_column, $update_column, array &amp;$idstovals){</p>

<pre><code>    $sql = "update $table set $update_column = CASE $id_column ";
    foreach($idstovals as $id=&gt;$val){
        $sql .= " WHEN '$id' THEN '$val' \n";
    }
    $sql .= " END 
    WHERE $id_column in (" . implode(',', array_keys($idstovals)) . ")";
</code></pre>

<p>//debugging info</p>

<pre><code>    echo '&lt;small&gt;'.$sql.'&lt;/small&gt;';
    $idstovals=array();        
    db_query($sql);       
    done();        
}
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
