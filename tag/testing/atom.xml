<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: testing | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/testing/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-12-08T12:55:30+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Apache JMeter For Load Testing]]></title>
    <link href="http://edmondscommerce.github.io/load%20testing/using-apache-jmeter-for-load-testing.html"/>
    <updated>2014-05-27T13:01:39+01:00</updated>
    <id>http://edmondscommerce.github.io/load%20testing/using-apache-jmeter-for-load-testing</id>
    <content type="html"><![CDATA[<p>Load testing is something that you really need a decent solution for. A simple tool such as Apache Bench (ab) is overly simplistic for todays web applications.</p>

<p>After some research I decided to use Apache Jmeter as the tool of choice. It is written in Java so easy enough to run on any platform.
It features a GUI which is ideal for creating your tests, then a command line version which is what you should use to run your tests.</p>

<p>For my purposes I wanted to feed in a large list of URLs, for that I followed these instructions:
<a href="http://asciiville.com/musings/coder/how-to-feed-jmeter-from-csv">http://asciiville.com/musings/coder/how-to-feed-jmeter-from-csv</a></p>

<p>This allows you to create a csv file with your choice of URLs. It was actually quite hard to find a decent and succint guide to getting this set up but thankfully that page fitted my requirements.</p>

<p>Once I started to run the test I quickly realised that my system was grinding to a halt with out of memory errors. A bit more searching yielded this page which advises on how to properly run Jmeter including the fact that you really should run it on the command line for proper testing.
<a href="http://blazemeter.com/blog/jmeter-performance-and-tuning-tips">http://blazemeter.com/blog/jmeter-performance-and-tuning-tips</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Prototype For Mobile Devices Fast & Easy?]]></title>
    <link href="http://edmondscommerce.github.io/web%20design/how-to-prototype-for-mobile-devices-fast-easy.html"/>
    <updated>2013-07-29T11:29:32+01:00</updated>
    <id>http://edmondscommerce.github.io/web%20design/how-to-prototype-for-mobile-devices-fast-easy</id>
    <content type="html"><![CDATA[<p><img src="/assets/ProtoIO.png"></p>

<p>As a designer who is keen on usability and user centric, well tested web systems I was in a desperate need of silly fast and useful mobile prototyping system. Up until recently I’ve used paper prototyping and later uploading images on various smart phones (always struggling with inaccurate representation of actual interface size, look and feel of the interactions).</p>

<p>Thankfully, that is the past and the future holds much brighter and functional solution for <a href="https://proto.io/" title="Proto.io - Rapid fast mobile prototyping" target="_blank">rapid fast mobile prototyping thanks to Proto.io </a></p>

<p>I see that they have been around for a while, which only brings lots of benefits to us – usability testers and designers. Prototyping application interface is improved and it has some really good functionality, although there is still room to grow like to support keyboard commands, more tutorials and find a way of making the overall work flow more intuitive as I found it hard to get into. Thankfully, proto.io team has created video tutorials for some of the most important questions.</p>

<p>Once I got the basic idea and figured out some work-arounds, I was able to upload my mobile site design in the application and create a working prototype. It is awesome, how fast and easy it is to test the prototypes on various devices. The most important feature I found is that I can access the fully working prototype from whatever device.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome Auto Populate Form Fields - Form Fuzzer]]></title>
    <link href="http://edmondscommerce.github.io/chrome/chrome-auto-populate-form-fields-form-fuzzer.html"/>
    <updated>2012-09-13T10:42:59+01:00</updated>
    <id>http://edmondscommerce.github.io/chrome/chrome-auto-populate-form-fields-form-fuzzer</id>
    <content type="html"><![CDATA[<p>If you ever used Webmaster Tools in Firefox but have now switched to using Chrom(e|ium) instead then you probably miss the form filler &ndash; especially if you ever need to test checkouts or other form intensive web site user stories.</p>

<p>A nice little extension that I just discovered takes care of this, <a href="https://chrome.google.com/webstore/detail/cbpplldpcdcfejdaldmnfhlodoadjhii" target="_blank">Chrome Form Fuzzer</a>.</p>

<p>You can configure it for simple form filling or with a little creative configuration it could easily be used for security testing and more in depth testing to ensure that input is being sanitised and filtered properly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VirtualBox Images For Download of Various Linux and Other Open Source Systems]]></title>
    <link href="http://edmondscommerce.github.io/virtualbox/virtualbox-images-for-download-of-various-linux-and-other-open-source-systems.html"/>
    <updated>2012-02-23T12:42:17+00:00</updated>
    <id>http://edmondscommerce.github.io/virtualbox/virtualbox-images-for-download-of-various-linux-and-other-open-source-systems</id>
    <content type="html"><![CDATA[<p>Virtualbox is an amazing tool for testing and developing on various systems.</p>

<p>Now it&rsquo;s even easier as there is a nicely organised repository of clean VirtualBox images you can download and get running with in a matter of minutes.</p>

<p><a href="http://virtualboxes.org/"><a href="http://virtualboxes.org/">http://virtualboxes.org/</a></a></p>

<p>We are going to use them for some <a href="http://www.edmondscommerce.co.uk">Magento</a> performance optimisation testing on various platforms as we perfect our <a href="http://www.edmondscommerce.co.uk/magento/magento-optimised-hosting/">Magento Server Optimisation</a> skills and try to benchmark some new ideas.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHPUnit, LAMP, Magento and Netbeans]]></title>
    <link href="http://edmondscommerce.github.io/netbeans/phpunit-lamp-magento-and-netbeans.html"/>
    <updated>2012-01-10T13:11:10+00:00</updated>
    <id>http://edmondscommerce.github.io/netbeans/phpunit-lamp-magento-and-netbeans</id>
    <content type="html"><![CDATA[<p>When using PHPUnit with xampp the first the to do is install PHPUnit through pear. You usually need to update pear first, after that you should be able to follow the instructions <a href="http://pear.phpunit.de/">here</a></p>

<p>Getting PHPUnit working with Magento is fairly straight forward. It&rsquo;s just a case of including Mage.php and then calling Mage::app(); in the setup method of your test class:</p>

<p>```php
&lt;?php</p>

<p>require_once &lsquo;../app/Mage.php&rsquo;;</p>

<p>class TemplateTest extends PHPUnit_Framework_TestCase {</p>

<pre><code>public function setUp() {
    Mage::app();
}

public function testExample() {
    $helper = Mage::helper('core');
    $this-&gt;assertTrue($helper instanceof Mage_Core_Helper_Data, "Magento isn't running!");
}
</code></pre>

<p>}
```</p>

<p>If you use NetBeans as your IDE you&rsquo;ll be glad to know that it has support for running your tests directly without having to use a terminal. This does require a bit of configuration. You need to tell NetBeans where the PHPUnit script is under Tools > Options > PHP > Unit Testing. If you are using it with XAMPP it will be located at /opt/lampp/bin/phpunit. To begin running the tests you then go Run > Test Project and NetBeans will ask you where your tests are. After that you will get a &ldquo;Test File&rdquo; source folder in the Projects pane. You can now right click each test file and choose &ldquo;Run file&rdquo; and netbeans will run it. If you have xdebug setup the debug option also works nicely.</p>
]]></content>
  </entry>
  
</feed>
