<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: solution | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/solution/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-10-16T10:23:53+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim Locking Up, Always When you are Ready to Save? Solution]]></title>
    <link href="http://edmondscommerce.github.io/linux/vim-locking-up-always-when-you-are-ready-to-save-solution.html"/>
    <updated>2013-10-04T10:33:41+01:00</updated>
    <id>http://edmondscommerce.github.io/linux/vim-locking-up-always-when-you-are-ready-to-save-solution</id>
    <content type="html"><![CDATA[<p>If you are constantly frustated by Vim freezing up on you are editing a file on a server then this is quite possibly your problem, and your solution.</p>

<p>The issue is that most text editors and IDEs have [ctrl]+[s] mapped to save. If you do a lot of file editing then you probably bash the [ctrl]+[s] combo all the time, without even thinking about it&hellip;</p>

<p>Now back to Vim. As it is running in the terminal then it can be frozen by using the [ctrl]+[s] combination. You probably weren&rsquo;t aware of that feature.</p>

<p>To bring things back to life, just hit the [ctrl]+[q] combo. There are ways to permanently disable this which you can try.</p>

<p>For full information on this, check out this great <a href="http://unix.stackexchange.com/questions/12107/how-to-unfreeze-after-accidentally-pressing-ctrl-s-in-a-terminal" target="_blank">stack exchange page</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disable JavaScript alerts for a page]]></title>
    <link href="http://edmondscommerce.github.io/javascript/disable-javascript-alerts-for-a-page.html"/>
    <updated>2013-08-28T09:21:30+01:00</updated>
    <id>http://edmondscommerce.github.io/javascript/disable-javascript-alerts-for-a-page</id>
    <content type="html"><![CDATA[<p>If you encounter a webpage that is generating a lot of alerts, the following bookmark will prevent them from stealing focus but still allow you to see what is being said.</p>

<p>```js</p>

<p>javascript:alert = function ( text ) { console.log( text ); return true; };</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL Substring not Returning Anything + Solution]]></title>
    <link href="http://edmondscommerce.github.io/mysql/mysql-substring-not-returning-anything-solution.html"/>
    <updated>2013-08-20T10:54:20+01:00</updated>
    <id>http://edmondscommerce.github.io/mysql/mysql-substring-not-returning-anything-solution</id>
    <content type="html"><![CDATA[<p>If you are puzzled why your simple usage of the MySQL SUBSTRING() function is not returning anything this could be your solution.</p>

<p>The substring function allows you to specify a string (eg a column), the start character and the length. If you are used to languages like PHP then you are probably used to this kind of function regarding 0 as the starting character. In fact this function regards 1 as the starting character. If you specify 0 then you simply won&rsquo;t get any results.</p>

<p>This does not work:
```</p>

<p>SELECT SUBSTRING(column, 0, 10) as tenchars</p>

<p>```</p>

<p>This does work:
```</p>

<p>SELECT SUBSTRING(column, 1, 10) as tenchars</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Side by Side diff on the command line]]></title>
    <link href="http://edmondscommerce.github.io/bash/side-by-side-diff-on-the-command-line.html"/>
    <updated>2013-07-09T17:25:18+01:00</updated>
    <id>http://edmondscommerce.github.io/bash/side-by-side-diff-on-the-command-line</id>
    <content type="html"><![CDATA[<p>I have recently discovered a handy trick when comparing files on the command line.</p>

<p>Adding the -y command line options to diff will display the files side by side.</p>

<p>Using this with the <a href="http://www.colordiff.org/" title="Color Diff" target="_blank">Color Diff</a> tool will help you transform this</p>

<p><img src="/assets/normal-diff.png"></p>

<p>To this</p>

<p><img src="/assets/color-diff-600x200.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Payment has failed... Magento and SagePay CE Error + Solution]]></title>
    <link href="http://edmondscommerce.github.io/magento/payment-has-failed-magento-and-sagepay-ce-error-solution.html"/>
    <updated>2013-05-22T14:58:25+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/payment-has-failed-magento-and-sagepay-ce-error-solution</id>
    <content type="html"><![CDATA[<p>I recently upgraded a magento store and installed the Sage Pay Suite CE module from EbizMarks.</p>

<p>The following error came up twice during the testing of the module, once in the frontend and once in the admin.</p>

<p><strong>Payment has failed, please reload checkout page and try again. Your card has not been charged</strong></p>

<p>The error itself is triggered from the saveAfter method in the Ebizmarts_SagePaySuite_Model_Observer_Sales class and is called every time an order is saved.</p>

<p>The error on the frontend was caused by a javascript error. Adding the following to the top of the sagePaySuite_Checkout.js file corrected it</p>

<p>```javascript</p>

<p>if(typeof sagePayIsMobile == &lsquo;undefined&rsquo;) {</p>

<pre><code>var sagePayIsMobile = function() {
    return (navigator.userAgent.match(/BlackBerry/i) ||
        navigator.userAgent.match(/webOS/i) ||
        navigator.userAgent.match(/Android/i) ||
        navigator.userAgent.match(/iPhone/i) ||
        navigator.userAgent.match(/iPod/i) ||
        navigator.userAgent.match(/iPad/i));
}
</code></pre>

<p>}</p>

<p>```</p>

<p>The error in the admin was caused by a different extension being called when the order was saved. Normally the extension ensures that the method is not called when it is not needed and this is done by checking the route and the registry. If an extension saves the order these checks are not triggered so you will need to add in your own. To do that you will need add the following code to the action that is saving the error</p>

<p>```php</p>

<p>Mage::register(&lsquo;skipSagePay&rsquo;, TRUE);</p>

<p>```</p>

<p>and then change the following line in the Ebizmarts/SagePaySuite/Model/Observer/Sales.php file</p>

<p>```php</p>

<p>if( (Mage::app()&ndash;>getRequest()&ndash;>getControllerModule() == &lsquo;Mage_Api&rsquo;) || Mage::registry(&lsquo;current_shipment&rsquo;) || Mage::registry(&lsquo;sales_order&rsquo;) || Mage::registry(&lsquo;current_creditmemo&rsquo;) || Mage::registry(&lsquo;current_invoice&rsquo;) || ($order->getPayment()&ndash;>getMethod() == &lsquo;sagepayrepeat&rsquo;) ){</p>

<p>```</p>

<p>to
```php</p>

<p>if( (Mage::app()&ndash;>getRequest()&ndash;>getControllerModule() == &lsquo;Mage_Api&rsquo;) || Mage::registry(&lsquo;current_shipment&rsquo;) || Mage::registry(&lsquo;sales_order&rsquo;) || Mage::registry(&lsquo;current_creditmemo&rsquo;) || Mage::registry(&lsquo;current_invoice&rsquo;) || ($order->getPayment()&ndash;>getMethod() == &lsquo;sagepayrepeat&rsquo;) || Mage::registry(&lsquo;skipSagePay&rsquo;)){</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
