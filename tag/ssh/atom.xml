<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: ssh | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/ssh/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-09-25T17:22:11+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim Locking Up, Always When you are Ready to Save? Solution]]></title>
    <link href="http://edmondscommerce.github.io/linux/vim-locking-up-always-when-you-are-ready-to-save-solution.html"/>
    <updated>2013-10-04T10:33:41+01:00</updated>
    <id>http://edmondscommerce.github.io/linux/vim-locking-up-always-when-you-are-ready-to-save-solution</id>
    <content type="html"><![CDATA[<p>If you are constantly frustated by Vim freezing up on you are editing a file on a server then this is quite possibly your problem, and your solution.</p>

<p>The issue is that most text editors and IDEs have [ctrl]+[s] mapped to save. If you do a lot of file editing then you probably bash the [ctrl]+[s] combo all the time, without even thinking about it&hellip;</p>

<p>Now back to Vim. As it is running in the terminal then it can be frozen by using the [ctrl]+[s] combination. You probably weren&rsquo;t aware of that feature.</p>

<p>To bring things back to life, just hit the [ctrl]+[q] combo. There are ways to permanently disable this which you can try.</p>

<p>For full information on this, check out this great <a href="http://unix.stackexchange.com/questions/12107/how-to-unfreeze-after-accidentally-pressing-ctrl-s-in-a-terminal" target="_blank">stack exchange page</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tab Complete for SSH and SCP]]></title>
    <link href="http://edmondscommerce.github.io/magento/bash/tab-complete-for-ssh-and-scp.html"/>
    <updated>2013-07-26T10:31:41+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/bash/tab-complete-for-ssh-and-scp</id>
    <content type="html"><![CDATA[<p>If you are required to connect to different servers, then remembering and typing in all of the details can become tiresome.</p>

<p>Thankfully there is simple solution to this, using the SSH config file.</p>

<p>To make use of this, create the following file ~/.ssh/config</p>

<p>In there add the following details</p>

<p>```bash</p>

<p>Host easyToRememberName</p>

<pre><code>HostName 127.0.0.1
Port 2020
User ross
</code></pre>

<p>```</p>

<p>You will then can tab completion on ssh and scp commands. You can see more of the options that can be set in the file <a href="http://linux.die.net/man/5/ssh_config" title="ssh config man page">here</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rsync For Beginners]]></title>
    <link href="http://edmondscommerce.github.io/linux/rsync-for-beginners-2.html"/>
    <updated>2012-11-05T16:42:47+00:00</updated>
    <id>http://edmondscommerce.github.io/linux/rsync-for-beginners-2</id>
    <content type="html"><![CDATA[<h3>What is Rsync in general ?</h3>


<p>Rsync works like the <a href="http://linux.about.com/od/commands/l/blcmdl1_rcp.htm" rel="nofollow">rcp</a> command in linux. It is used to copy files across machines. It uses efficient checksum algorithm that looks for modified files by time and size. It is used for two purposes:</p>

<h2>Backup</h2>


<p>Rsync is used to transfer file from the local to a remote machine. By default Rsync will use rsh, however you can instead use <a href="http://linux.about.com/od/commands/l/blcmdl1_ssh.htm" rel="nofollow">ssh</a> for high security. Compressed files are transferred to save file transfer time and reduce the load on the network. It helps to transfer bulk files in minutes.</p>

<h2>Mirroring</h2>


<p>Rsync can synchronize file between two servers location(i.e) local and remote. By using the checksum algorithm it updates local files only if it is updated in remote server.</p>

<h3>How to use Rsync</h3>


<p>
```php</p>

<p>rsync -avze ssh -p2020 root@server.com:/sitepath/files   /localdata</p>

<p>```
This command transfer files from remote server to local machine.</p>

<p>a  Archive. It is denotes all related files and documents.
v  Verbose.It will display status message as it is processing.
z  Compression.It achives better compression ratio.
e  It allows to chose alternative remote shell program for communication.</p>

<p>```php</p>

<p>rsync -avze ssh -p2020 &mdash;exclude home/var/cache root@server.com:/sitepath/files /localdata</p>

<p>```</p>

<p>This command will transfer files from remote server to local machine by excluding cache folder.</p>

<p>```php</p>

<p>rsync -avz /sitepath/files root@server.com:/localdata</p>

<p>```
This command will  transfer all file from local to remote server. It is uses default remote shell protocol.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH Access, what is it all about in Simple Words?]]></title>
    <link href="http://edmondscommerce.github.io/server/ssh-access-what-is-it-all-about-in-simple-words.html"/>
    <updated>2012-11-05T16:29:37+00:00</updated>
    <id>http://edmondscommerce.github.io/server/ssh-access-what-is-it-all-about-in-simple-words</id>
    <content type="html"><![CDATA[<h3>What is an SSH access?</h3>


<p>SSH stands for Secure Socket Shell. SSH is a protocol, like HTTP, it gives us a way to gain a secure access to remote computers.</p>

<p>The principle is to connect two networked computers via a secure encrypted channel within an insecure network environment such as the Internet.</p>

<p>With SSH access we can easily move files around and run programs on your server. We can also transmit files to and from our own network onto your server, for example to take a copy of your site for local development or to push updated files onto your server.</p>

<p>SSH needs a server application installing on your server (most web servers will have this by default) and an SSH client on your local machine to allow you to connect to your server.</p>

<h3>Where do you get your SSH access from?</h3>


<p>If you need SSH access details you should ask your hosting company, they should be able to install it for you if it is not already in place. If you are on shared hosting then the chances are that you will not be able to get SSH access details, if you need SSH access then you should consider upgrading your hosting to something that will support it.</p>

<p>SSH access details will consist of at least:</p>

<p>domain or IP address:
```</p>

<p>domain.com</p>

<p><code>
</code></p>

<p>123.123.123.123</p>

<p>```</p>

<p>username:
```</p>

<p>mywebserverlogin</p>

<p>```</p>

<p>password:
```</p>

<p>ihy324579ySDWf</p>

<p>```</p>

<p>it may also include a port if SSH is not running on the standard port.
```</p>

<p>2020</p>

<p>```</p>

<h3>Why do we need the SSH access details?</h3>


<p>We will always ask our customers to provide us with SSH access details. This is for two main reasons:</p>

<h4>1. Power and Speed</h4>


<p>SSH access allows us to run commands directly on the server, compress files, run scripts etc. For example we will generally run some static analysis scripts for our <a href="http://edmondscommerce.github.io/platforms/magento">Magento</a> customers using a bash script that we can run with SSH access. This gives us some instant feedback on the state of your Magento installation and allows us to spot any potential problems.</p>

<p>If we need to get a copy of your site files, using SSH we can prepare a compressed archive of your site files allowing us to download them much faster. Likewise we can easily get a reliable database dump, especially if you have a large database that might cause problems for browser based tools such as phpMyAdmin.</p>

<h4>2. Security</h4>


<p>SSH is a much more secure protocol than something like FTP. In SSH everything is encrypted. It has been built from the ground up to be a very secure way of networking and inter communicating between servers on an insecure network such as the web.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Bash Scripting: Force Screen if not Cron Task]]></title>
    <link href="http://edmondscommerce.github.io/linux/linux-bash-scripting-force-screen-if-not-cron-task.html"/>
    <updated>2012-08-30T09:27:16+01:00</updated>
    <id>http://edmondscommerce.github.io/linux/linux-bash-scripting-force-screen-if-not-cron-task</id>
    <content type="html"><![CDATA[<p>If you have a long running script that is designed to run as cron but may be run manually from the terminal then you may want to enforce screen so that the process can&rsquo;t be aborted by the SSH terminal being closed for whatever reason.</p>

<p>We already blogged about how to <a href="http://www.edmondscommerce.co.uk/linux/force-a-bash-script-to-run-in-screen/" title="Linux Force Screen">force running as screen here</a>.</p>

<p>This is an extension of this that also checks for running as Cron and if so, does not force screen.</p>

<p>```bash</p>

<h1>First off, ensure running from Cron and if not, Screen</h1>

<p>if [ -t 1 ]
then</p>

<pre><code>echo &amp;quot;Not running as Cron Task&amp;quot;
if [ -n &amp;quot;$STY&amp;quot; ];
then
    echo 'We are inside screen, good';
else
    echo &amp;quot;Not in a screen, please run with screen&amp;quot;
    echo &amp;quot;Exiting&amp;quot;
    exit 1
fi
</code></pre>

<p>else</p>

<pre><code>echo &amp;quot;Running as Cron Task&amp;quot;
</code></pre>

<p>fi</p>

<p>```</p>

<p>Simply paste this somewhere close to the top of your script before it does anything and this will work nicely.</p>
]]></content>
  </entry>
  
</feed>
