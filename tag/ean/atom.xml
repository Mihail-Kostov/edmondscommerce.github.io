<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: ean | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/ean/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-06-12T10:12:30+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Google Merchant Centre/Froogle/Google Shopping/Base Changes, Problems and Solutions]]></title>
    <link href="http://edmondscommerce.github.io/ecommerce/google-merchant-centrefrooglegoogle-shoppingbase-changes-problems-and-solutions.html"/>
    <updated>2011-10-11T17:05:20+01:00</updated>
    <id>http://edmondscommerce.github.io/ecommerce/google-merchant-centrefrooglegoogle-shoppingbase-changes-problems-and-solutions</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>So now that everyone uses Google Shopping, Google are making life difficult for the merchants and they all have to jump through hoops.</p>

<p>The current push from Google is enforcing some things that are very difficult for small companies to conform with :&ndash;</p>

<p><strong> * EAN Numbers</strong> &ndash; This is the BIG one, Google are making EAN Numbers required &ndash; for some retailers, they just don&rsquo;t exist, and for a lot of older or cheaper shopping cart systems, they don&rsquo;t have anywhere to enter them.
<strong> * Google Category</strong> &ndash; This is a fairly obvious one, they are attempting to enable shoppers to browse products and find a motherboard for instance with a 1156 socket rather than a CPU that fits an 1156 socket.  The answer is to add an extra field to a site&rsquo;s category system to map site categories to Google categories, or to restructure your products into google&rsquo;s categorisations.
<strong> * Product Images</strong> &ndash; Google are making this mandatory as well, which most people are getting round by using stock or illustration-only images.
<strong> * Availability</strong> &ndash; This one actually helps retailers, putting orderable products that are out of stock in front of customers, and is a small change to most scripts exporting to Google</p>

<p>The above changes are being phased in now but should your feed suddenly stop working, how big is the impact on your business?  Whilst some of the changes are little tweaks, such as the availability flag, others require fairly substantial changes in the back-end of many cart systems.  We are getting many aggrieved businesses contacting us asking for fast turnaround on their Google products feed as they are loosing money all the time that Google are rejecting their products.</p>

<p>What normally (given past changes) has been little tweaks for feeds to be compatible has lately become hours and hours of work both on developers and store-owners.  Are you ready to jump through the latest burning hoop Google is holding out for you?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finding invalid EANs (simply) With MySQL]]></title>
    <link href="http://edmondscommerce.github.io/mysql/finding-invalid-eans-simply-with-mysql.html"/>
    <updated>2010-04-19T14:54:09+01:00</updated>
    <id>http://edmondscommerce.github.io/mysql/finding-invalid-eans-simply-with-mysql</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>Check out this little query for checking for obviously invalid EANs.</p>

<p>Note this is not checking the check digit for validity, it is purely looking for data that is in no way possibly an EAN number.</p>

<p>```sql</p>

<p>update products set ean = &lsquo;&rsquo; where ean != &lsquo;&rsquo; and ean not regexp &lsquo;^[0-9]{13}$&rsquo;</p>

<p>```</p>

<p>assuming you have a column called ean, this will empty the value for the EAN for any product that has dodgy data in there.</p>

<p>MySQL regex is actually very powerful and fast.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL Data Cleanse EAN Numbers]]></title>
    <link href="http://edmondscommerce.github.io/barcode/mysql-data-cleanse-ean-numbers.html"/>
    <updated>2009-11-17T17:25:51+00:00</updated>
    <id>http://edmondscommerce.github.io/barcode/mysql-data-cleanse-ean-numbers</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>Just found this MySQL snippet for validating EAN numbers.</p>

<p><a href="http://snipplr.com/view.php?codeview&id=17928"><a href="http://snipplr.com/view.php?codeview&amp;id=17928">http://snipplr.com/view.php?codeview&amp;id=17928</a></a></p>

<p>I have modified it a bit to suit my requirements (namely totally corrupted EAN data).</p>

<p>```sql</p>

<p>SELECT ean
FROM products
WHERE
(LENGTH(ean) != 13)
||
(SUBSTRING((10 &ndash; ((((
SUBSTRING(ean FROM 2 FOR 1) +
SUBSTRING(ean FROM 4 FOR 1) +
SUBSTRING(ean FROM 6 FOR 1) +
SUBSTRING(ean FROM 8 FOR 1) +
SUBSTRING(ean FROM 10 FOR 1) +
SUBSTRING(ean FROM 12 FOR 1)<br/>
)*3) + (
SUBSTRING(ean FROM 1 FOR 1) +
SUBSTRING(ean FROM 3 FOR 1) +
SUBSTRING(ean FROM 5 FOR 1) +
SUBSTRING(ean FROM 7 FOR 1) +
SUBSTRING(ean FROM 9 FOR 1) +
SUBSTRING(ean FROM 11 FOR 1)
)) MOD 10)) FROM -1 FOR 1) != SUBSTRING(ean FROM 13 FOR 1))</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
