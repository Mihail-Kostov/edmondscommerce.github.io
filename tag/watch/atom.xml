<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: watch | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/watch/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-01-03T19:48:06+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Restore lessc -w functionality, extendable to anything that needs to watch a file.]]></title>
    <link href="http://edmondscommerce.github.io/linux/restore-lessc-w-functionality-extendable-to-anything-that-needs-to-watch-a-file.html"/>
    <updated>2012-03-02T12:25:46+00:00</updated>
    <id>http://edmondscommerce.github.io/linux/restore-lessc-w-functionality-extendable-to-anything-that-needs-to-watch-a-file</id>
    <content type="html"><![CDATA[<p>The latest version of the less compiler in ruby has reduced the functionality of watching a file, so we wrote this little script (which we put in ~/bin/lessc-w) to restore the old functionality :</p>

<p>```</p>

<h1>!/bin/bash</h1>

<p>LESSFILE=$1
CSSFILE=<code>basename $1 .less</code>.css</p>

<p>if [ &ldquo;$2&rdquo; != &ldquo;-f&rdquo; ]; then</p>

<pre><code>if [ "`file -b $LESSFILE`" != "ASCII text" ]; then
    echo "file $1 doesn't look like a less file...., looks like a `file -b $LESSFILE`";
    echo "usage: lessc-w lessfile.less [-f]";
    exit
fi
</code></pre>

<p>fi</p>

<p>while true; do</p>

<pre><code>inotifywait -e modify $LESSFILE &amp;&amp; \
echo "Rebuilding styles" &amp;&amp; \
lessc $LESSFILE &gt; $CSSFILE
</code></pre>

<p>done</p>

<p>```</p>

<p>As you can see it&rsquo;s very simple to tweak this to any program that needs to be run when a file is changed.</p>
]]></content>
  </entry>
  
</feed>
