<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: form | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/form/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2015-03-10T14:18:28+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Release SagePay Form Orders via API]]></title>
    <link href="http://edmondscommerce.github.io/sagepay/release-sagepay-form-orders-via-api.html"/>
    <updated>2013-03-19T17:54:16+00:00</updated>
    <id>http://edmondscommerce.github.io/sagepay/release-sagepay-form-orders-via-api</id>
    <content type="html"><![CDATA[<p>If you use SagePay Form integration then you might think that it is impossible to release orders created via this integration system via the API.</p>

<p>Historically this was true however thanks to the new admin and reporting API you can now grab all of the details you need to perform the kind of admin side integration previously only possible via Server and Direct integrations.</p>

<p>This does take a bit of work but if you like the fact that Form alleviates PCI compliance issues, allows your customers to use the nice easy to use Form interface and also gives you easy PayPal integration then this is a great solution.</p>

<p>Thanks goes out to SagePay&rsquo;s technical support who have proved really helpful in ironing out the kinks in getting this working.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Form File Upload Limits with PHP]]></title>
    <link href="http://edmondscommerce.github.io/php/form-file-upload-limits-with-php.html"/>
    <updated>2013-01-11T16:49:24+00:00</updated>
    <id>http://edmondscommerce.github.io/php/form-file-upload-limits-with-php</id>
    <content type="html"><![CDATA[<p>If you have a form designed to handle file uploads which is failing due to file size then you might like this:</p>

<p>```php</p>

<p>$arrayMaxes = array(</p>

<pre><code>'upload_max_filesize' =&gt; intval(ini_get('upload_max_filesize')),
'post_max_size' =&gt; intval(ini_get('post_max_size')),
'memory_limit' =&gt; intval(ini_get('memory_limit'))
</code></pre>

<p>);
$maxUploadSize = min($arrayMaxes);
foreach ($arrayMaxes as $key => $value) {</p>

<pre><code>if ($value == min($arrayMaxes)) {
    $minimumOfThree = $key;
    break;
}
</code></pre>

<p>}</p>

<p>echo &ldquo;The maximum file size you can upload is $maxUploadSize, this is due to the php.ini setting $mininimumOfThree&rdquo;;</p>

<p>```</p>

<p>This will calculate the smallest value that will be allowed based upon php.ini settings.</p>

<p>You can then incorporate this into your form logic and display so that users have a clear understanding of how large a file they can upload.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome Auto Populate Form Fields - Form Fuzzer]]></title>
    <link href="http://edmondscommerce.github.io/chrome/chrome-auto-populate-form-fields-form-fuzzer.html"/>
    <updated>2012-09-13T10:42:59+01:00</updated>
    <id>http://edmondscommerce.github.io/chrome/chrome-auto-populate-form-fields-form-fuzzer</id>
    <content type="html"><![CDATA[<p>If you ever used Webmaster Tools in Firefox but have now switched to using Chrom(e|ium) instead then you probably miss the form filler &ndash; especially if you ever need to test checkouts or other form intensive web site user stories.</p>

<p>A nice little extension that I just discovered takes care of this, <a href="https://chrome.google.com/webstore/detail/cbpplldpcdcfejdaldmnfhlodoadjhii" target="_blank">Chrome Form Fuzzer</a>.</p>

<p>You can configure it for simple form filling or with a little creative configuration it could easily be used for security testing and more in depth testing to ensure that input is being sanitised and filtered properly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blind Express Free Sample Request]]></title>
    <link href="http://edmondscommerce.github.io/portfolio/blind-express-free-sample-request.html"/>
    <updated>2011-06-09T14:58:56+01:00</updated>
    <id>http://edmondscommerce.github.io/portfolio/blind-express-free-sample-request</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<h2>Magento Free Sample Request Custom Module</h2>


<p>Blind Express required that their customers be able to easily request free samples of their products. This required that a custom extension be created and integrated with the existing system.</p>

<h3>Blind Express</h3>


<p>Blind Express specialise in supplying made to measure and custom window <a href="http://www.blindexpress.co.uk">blinds</a>.</p>

<p><img src="/assets/blindexpress-300x206.png"></p>

<p>This project was a good challenge as the extension had to be integrated with previously existing custom product configuration.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Drupal 6 File Uploads]]></title>
    <link href="http://edmondscommerce.github.io/drupal/drupal-6-file-uploads.html"/>
    <updated>2009-07-10T12:16:09+01:00</updated>
    <id>http://edmondscommerce.github.io/drupal/drupal-6-file-uploads</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>It&rsquo;s always tempting when  you are new to a framework or system to just roll your own functionality if the built in functionality is not obvious. I was nearly at that stage with Drupal 6 file uploads. Thankfully before I gave in I found this useful blog post which clearly states how Drupal&rsquo;s built in file upload functionality works. Sweet :&ndash;)</p>

<p><a href="http://www.computerminds.co.uk/file-uploads-drupal-6-part-1" rel="nofollow"><a href="http://www.computerminds.co.uk/file-uploads-drupal-6-part-1">http://www.computerminds.co.uk/file-uploads-drupal-6-part-1</a></a></p>
]]></content>
  </entry>
  
</feed>
