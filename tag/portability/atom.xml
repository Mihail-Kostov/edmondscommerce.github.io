<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: portability | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/portability/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2013-12-09T19:04:45+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Get Script Location in Bash Regardless of Location Launched From]]></title>
    <link href="http://edmondscommerce.github.io/php/get-script-location-in-bash-regardless-of-location-launched-from.html"/>
    <updated>2010-11-29T12:53:16+00:00</updated>
    <id>http://edmondscommerce.github.io/php/get-script-location-in-bash-regardless-of-location-launched-from</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>Bash scripts are often used to work on files and the current working directory is of paramount importance.</p>

<p>However, you may have scripts that are running in a development environment and also a live environment with different folder setups.</p>

<p>To help with portability and remove the requirement to hard code paths, you can use this little snippet</p>

<p>```</p>

<p>DIR=&ldquo;$( cd &rdquo;$( dirname &ldquo;$0&rdquo; )&ldquo; &amp;&amp; pwd )&rdquo;</p>

<p>```</p>

<p>For example, I have a system all running from a folder with one subfolder called processes (where my scripts are located) and another folder called launcher which actually handles the application.</p>

<p>The processes scripts generally launch a sequence of actions in one go.</p>

<p>Here is how I am using the above snippet</p>

<p>```</p>

<h1>!/bin/bash</h1>

<p>DIR=&ldquo;$( cd &rdquo;$( dirname &ldquo;$0&rdquo; )&ldquo; &amp;&amp; pwd )&rdquo;</p>

<p>cd $DIR</p>

<p>cd ../launcher</p>

<p>pwd</p>

<p>./shellLauncher.php Scraper importCsvFile</p>

<p>./shellLauncher.php Scraper scrapeNewProducts</p>

<p>```</p>

<p>This script cd&rsquo;s to the script location first (the processes sub folder) then goes back up the folder structure and into the launcher folder before launching the individual actions that make up this process.</p>
]]></content>
  </entry>
  
</feed>
