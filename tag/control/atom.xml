<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: control | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/control/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-06-09T16:11:23+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Restrict Access Using .htaccess File Rules in PHP]]></title>
    <link href="http://edmondscommerce.github.io/php/restrict-access-using-htaccess-file-rules-in-php.html"/>
    <updated>2013-03-11T15:29:34+00:00</updated>
    <id>http://edmondscommerce.github.io/php/restrict-access-using-htaccess-file-rules-in-php</id>
    <content type="html"><![CDATA[<p>The function below is one that we have used a few times to allow certain &ldquo;admin only&rdquo; assets to be accessed or visible on the front end of a website.</p>

<p>The theory is that the htaccess file in the admin folder will be kept up to date and can therefore be used as the authoritative list of IP addresses that are allowed to access admin assets.</p>

<p>This function is simple enough and should be useful anywhere that you use htaccess to protect a certain folder and would like to implement the same white list rules in other places without having to maintain a duplicate list of authorised IP addresses.</p>

<p>The function also uses <a href="http://www.php.net/manual/en/language.variables.scope.php#language.variables.scope.static" title="PHP.net Static Variables" target="_blank">static variables</a> &ndash; a lesser known bit of PHP functionality which can be a nice easy performance optimisation when working with procedural PHP code. If a function will be called many times and will always return the same result in a single request, you can actually cache that result to a static variable and serve that on any subsequent requests.</p>

<p>```php</p>

<p>function isAllowedIp() {</p>

<pre><code>static $pass = null;
if ($pass !== null) {
    return $pass;
}
$pass=false;
$customer_ip = $_SERVER['REMOTE_ADDR'];    
$htaccess = file_get_contents('admin/.htaccess');
preg_match_all('%allow from ([0-9.]+)%', $htaccess, $matches);
foreach ($matches[1] as $ip) {
    if ($ip == $customer_ip) {
        $pass = true; //this is stored statically for perfomance reasons
        return true;
    }
}
return false;
</code></pre>

<p>}</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Document Change Tracking in Javascript]]></title>
    <link href="http://edmondscommerce.github.io/business/document-change-tracking-in-javascript.html"/>
    <updated>2012-02-14T08:19:01+00:00</updated>
    <id>http://edmondscommerce.github.io/business/document-change-tracking-in-javascript</id>
    <content type="html"><![CDATA[<p>Just found this really rather nice looking JavaScript change tracking system.</p>

<p>Lawyers using email take note, Office + email is archaic</p>

<p>If you won&rsquo;t use Google Docs for privacy reasons (fair enough) then would you like us to build you your own document tracking client system?</p>

<p><a href="http://nytimes.github.com/ice/demo/"><a href="http://nytimes.github.com/ice/demo/">http://nytimes.github.com/ice/demo/</a></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu ACL Access Control Lists]]></title>
    <link href="http://edmondscommerce.github.io/ubuntu/ubuntu-acl-access-control-lists.html"/>
    <updated>2010-07-30T09:37:15+01:00</updated>
    <id>http://edmondscommerce.github.io/ubuntu/ubuntu-acl-access-control-lists</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>If you are working in Linux and need to set some more complex permissions than the straight user, group everyone RWX style, then you can.</p>

<p>Working in Ubuntu, you need to first of all install ACL</p>

<p>```</p>

<p>sudo apt-get install acl</p>

<p>```</p>

<p>Now before you can use ACL, you need to enable it on whichever volumes you want to use it on. To do this you have to edit your fstab (which if you do it wrong can cause problems so make sure you back it up!)</p>

<p>In the options column of the fstab for the volume you are working with, you need to add acl, eg:</p>

<p>```</p>

<p>/dev/mapper/server-root /               ext4    errors=remount-ro 0</p>

<p><code>
becomes
</code></p>

<p>/dev/mapper/server-root /               ext4    acl,errors=remount-ro 0</p>

<p>```</p>

<p>Now you need to remount</p>

<p>```</p>

<p>mount -o remount /</p>

<p>```</p>

<p>Now you need to check acl is working:</p>

<p>```</p>

<p>mount | grep acl</p>

<p>```</p>

<p>you should see a line with acl in there</p>

<p>Now to recursively set an ACL for a particular user giving full access on a folder structure, use this command:</p>

<p>```</p>

<p>setfacl -Rm u:user:rwX,d:u:user:rwX /path/to/folder</p>

<p>```</p>

<p>To fully understand ACL, hit the man pages</p>

<p>```</p>

<p>man acl</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
