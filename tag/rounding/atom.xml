<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: rounding | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/rounding/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2013-12-02T19:37:13+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Magento Rounding Errors (1.6.0+)]]></title>
    <link href="http://edmondscommerce.github.io/magento/magento-rounding-errors-1-6-0.html"/>
    <updated>2012-07-17T11:02:21+01:00</updated>
    <id>http://edmondscommerce.github.io/magento/magento-rounding-errors-1-6-0</id>
    <content type="html"><![CDATA[<p>The latest version of Magento has a fairly major issue that mostly affects UK and EU businesses, in the way it calculates taxes.</p>

<p>One of the most obvious situations is if you sell something worth £24.99 (inc. tax) and enter that as the price in Magento.  The thread on the Magento forum is <a href="http://www.magentocommerce.com/boards/viewthread/247201/">here</a>.</p>

<p>On the front end (if you have left the standard price templates alone) you will in 1.6.2+ see a price of £24.98.</p>

<p>This is because Magento first takes off the tax, then adds it back on, unfortunately a rounding error creeps in at one or the other side of the process.</p>

<p>Magento claims this is fixed in 1.7.0.1 but from reports we have seen this is not the case.  There are two current fixes but they both have issues.</p>

<p>The first (listed <a href="http://www.magentocommerce.com/boards/viewreply/353791/">here</a>) is to override the store rounding system and have Magento work to 4 decimal places instead of 2.  That&rsquo;s fine and works but if you have a payment gateway that gets fed the line items (such as Paypal Express Checkout for instance), the total does not match the line items (probably because it is passed a 4dp number and it doesn&rsquo;t match the totals of the 2dp items).</p>

<p>Another option (as mentioned <a href="http://www.magentocommerce.com/boards/viewreply/361474/">here</a>) is to assume no rounding where it is not specified rather than assuming rounding.  This won&rsquo;t cause problems with gateways but then you do need to fiddle with your templates to make sure your prices are displayed with tax.</p>

<p>As mentioned, we haven&rsquo;t actually seen a solution that works across the board and is right with stats, payment gateways, frontend and backend.  It&rsquo;s a major bug and hopefully the next release of Magento will fix this.</p>

<p>This appears to be most prevalent when using the &ldquo;Prices include tax in backend&rdquo; setting as the tax calculation only gets done once if you enter pre-tax prices and have the tax only added on.  That isn&rsquo;t to say that it will always calculate the tax correctly that way round either, just that this particular rounding issue is not as visible.</p>

<p>Also, the fixes listed on that thread involve modifying core files &ndash; <strong>don&rsquo;t do this!</strong> copy the files to /app/code/local/Mage from /app/code/core/Mage and modify them in there.</p>
]]></content>
  </entry>
  
</feed>
