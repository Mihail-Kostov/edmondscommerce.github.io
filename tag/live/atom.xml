<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: live | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/live/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2013-12-02T19:56:22+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Prestashop Debug Mode using the Magento Environment Variable Method]]></title>
    <link href="http://edmondscommerce.github.io/prestashop/prestashop-debug-mode-using-the-magento-environment-variable-method.html"/>
    <updated>2013-04-25T10:14:30+01:00</updated>
    <id>http://edmondscommerce.github.io/prestashop/prestashop-debug-mode-using-the-magento-environment-variable-method</id>
    <content type="html"><![CDATA[<p>Magento developers are no doubt familiar with the concept of defining a server environment variable MAGE_IS_DEVELOPER_MODE so that when running Magento locally it is always in developer mode but there is no chance of accidently deploying a live site in developer mode.</p>

<p>This little trick will allow you to use the same environment variable to also have the same effect when working with PrestaShop.</p>

<p>To explain &ndash; developer mode generally means that things like error messages and debugging information are displayed clearly in the browser which makes things much easier when you are developing, to see what is going wrong.</p>

<p>On a live site you want to keep error information hidden and generally display to the customer a more friendly error message screen that perhaps helps them find their way back to a functional section of the site or gives them information to contact the site owner directly for assistance.</p>

<p>Anyway, to put PrestaShop in debug mode locally but have no risk of deployign this to live you can alter the file: config/defines.inc.php</p>

<p>from
```php</p>

<p>define(&lsquo;<em>PS_MODE_DEV</em>&rsquo;, false);</p>

<p>```</p>

<p>to
```php</p>

<p>define(&lsquo;<em>PS_MODE_DEV</em>&rsquo;, isset($_SERVER[&lsquo;MAGE_IS_DEVELOPER_MODE&rsquo;]));</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JQuery Keeping Click Handler when Updating Content - Live Binding]]></title>
    <link href="http://edmondscommerce.github.io/jquery/jquery-keeping-click-handler-when-updating-content-live-binding.html"/>
    <updated>2011-08-31T15:02:23+01:00</updated>
    <id>http://edmondscommerce.github.io/jquery/jquery-keeping-click-handler-when-updating-content-live-binding</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>If you are using jQuery and attaching click handlers etc to elements as part of your document ready block, you may find you are losing those handlers if you update the page with Javascript after load.</p>

<p>For example if you have some kind of slide show which involves redrawing the contents of a div, you might find that the click handlers you had attached to the links of class &lsquo;slideshow-link&rsquo; stop working.</p>

<p>Of course you can reattach handlers manually after dropping in your new HTML but that&rsquo;s pretty messy.</p>

<p>A much nicer solution is this:</p>

<p>Instead of using
```javascript</p>

<p>jQuery(&lsquo;.slideshow-link&rsquo;).click(function(){});</p>

<p>```</p>

<p>You can use
```javascript</p>

<p>jQuery(&lsquo;.slideshow-link&rsquo;).live(&lsquo;click&rsquo;, function(){});</p>

<p>```</p>

<p>The Live method will keep the attachment to elements matching the selector now and in the future.</p>

<p><a href="http://api.jquery.com/live/"><a href="http://api.jquery.com/live/">http://api.jquery.com/live/</a></a></p>

<p>Gotta love jQuery ;)</p>
]]></content>
  </entry>
  
</feed>
