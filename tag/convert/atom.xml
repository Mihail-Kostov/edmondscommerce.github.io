<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: convert | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/convert/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2015-06-24T10:23:39+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Generic XML to CSV Converter]]></title>
    <link href="http://edmondscommerce.github.io/php/generic-xml-to-csv-converter.html"/>
    <updated>2011-10-12T11:02:59+01:00</updated>
    <id>http://edmondscommerce.github.io/php/generic-xml-to-csv-converter</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>Some times you might have a legacy system that is built around csv or similar and you need to import an XML data source into this system.</p>

<p>Of course one possibility is to build full XML handling capabilities into the system. Perhaps a more sane solution is to simply convert the XML to CSV so that the legacy system does not have to be touched.</p>

<p>This little snippet will generally take an XML file and create a CSV file that should be useable. Of course its impossible to guarantee this for every XML file as its such a widely varied format, however in general this should work.</p>

<p>```php</p>

<p>$xml = simplexml_load_file(&lsquo;feed.xml&rsquo;);
$outstream = fopen(&lsquo;feed.csv&rsquo;,&lsquo;w&rsquo;);
$header=false;
foreach($xml as $k=>$details){</p>

<pre><code>if(!$header){
    fputcsv($outstream,array_keys(get_object_vars($details)));
    $header=true;
}
fputcsv($outstream,get_object_vars($details));
</code></pre>

<p>}
fclose($outstream);</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
