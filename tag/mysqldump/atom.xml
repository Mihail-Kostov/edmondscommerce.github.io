<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: mysqldump | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/mysqldump/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-05-14T11:48:19+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[mysql_dump not restored correctly 1064: USING BTREE + fix]]></title>
    <link href="http://edmondscommerce.github.io/mysql/mysql_dump-not-restored-correctly-1064-using-btree-fix.html"/>
    <updated>2011-11-10T18:30:05+00:00</updated>
    <id>http://edmondscommerce.github.io/mysql/mysql_dump-not-restored-correctly-1064-using-btree-fix</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>When migrating one server to another you often hit bumps in the road.  Todays was transferring a database from one server to another.</p>

<p>During this standard procedure I found that the restored database was missing a few tables.  Irritating as Magento doesn&rsquo;t like missing tables.</p>

<p>Digging down into the backup and extracting the first missing table I was able to replicate the error which came out as
<code>1064 &ndash; You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &lsquo;USING BTREE</code></p>

<p>I eventually found out that some versions of mysql 5.1 export a dump file that contains mysql5.1 specific features and loading the file into mysql 5.0 will not work.</p>

<p>The solution is a little frustrating but if you run the command with the &mdash;compatible=mysql40 switch, the dump file extracts fine :&ndash;
<code>mysqldump &mdash;compatible=mysql40</code>
Don&rsquo;t ask me why there&rsquo;s no &mdash;compatible=mysql50 flag.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Git to Track DB Schema Changes with Git Hook]]></title>
    <link href="http://edmondscommerce.github.io/git/using-git-to-track-db-schema-changes-with-git-hook.html"/>
    <updated>2010-01-28T10:48:29+00:00</updated>
    <id>http://edmondscommerce.github.io/git/using-git-to-track-db-schema-changes-with-git-hook</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>If you use Git for version control and you would like to also keep a track of your database schema (and possibly content though I&rsquo;m not doing that due to potential file sizes / speed issues) then all you need to do is this simple step:</p>

<ol>
<li><p>Go to your project folder and into the hidden .git folder, then a sub folder in there called hooks
<code>
cd .git/hooks
</code></p></li>
<li><p>Create a file called pre-commit and open it in vim (or whatever text editor you like)
<code>
vim pre-commit
</code></p></li>
<li><p>Add a mysql dump command to that file and save it
```</p></li>
</ol>


<h1>!/bin/sh</h1>

<p>mysqldump -u DBUSER -pDBPASSWORD  DATABASE &mdash;no-data=true > SQLVersionControl/vc.sql
git add SQLVersionControl/vc.sql
exit 0</p>

<p>```</p>

<p>(note this assumes you have a folder called SQLVersionControl in the root of your project. If you don&rsquo;t just create it.)</p>

<p>No without any further effort, you will update the schema file on every commit.</p>

<p>eg
```</p>

<p>git commit -am &lsquo;this commit will include a mysql schema dump that has been run just before the commit &ndash; sweet :)&rsquo;</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
