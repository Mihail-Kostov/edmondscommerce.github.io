<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: linux | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/linux/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-02-14T17:47:11+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[cPanel Download Site Files and Database]]></title>
    <link href="http://edmondscommerce.github.io/cpanel/cpanel-download-site-files-and-database.html"/>
    <updated>2014-02-10T18:03:36+00:00</updated>
    <id>http://edmondscommerce.github.io/cpanel/cpanel-download-site-files-and-database</id>
    <content type="html"><![CDATA[<p>Often a client won&rsquo;t have access to SSH, or won&rsquo;t be able to provide you with some of the more specifics such as FTP, PHPMyAdmin etc. All they know to give you is access to their cPanel. Through this there&rsquo;s various tools at your disposal.</p>

<h2>Try SSH</h2>

<p>Your cPanel login is actually a Linux user login, which cPanel&rsquo;s FTP hooks into. The first step is to navigate in your cPanel to FTP Accounts and click Configure FTP client on a user. These are SFTP details and can very often provide you with SSH shell access, unless the host has disabled this.</p>

<p>Simply try <code>ssh user@host -p 1234</code>, where the user, host and password are your cPanel login, and the port displayed on the FTP Accounts page.</p>

<p>From here you&rsquo;re free to use <code>tar</code>, <code>gzip</code>, <code>mysqldump</code> etc to acquire the files and database.</p>

<h2>If SSH isn&rsquo;t enabled</h2>

<p>Sometimes the host disables SSH access, only allowing its use for SFTP. There are still many ways to acquire the site&rsquo;s files and database:</p>

<h3>Getting hold of the files</h3>

<ul>
<li><strong>Plain old FTP</strong> &ndash; You can just use an FTP client such as Filezilla to access and download the site&rsquo;s files using FTP or SFTP. This is the simplest way, but can take a long time because of the amount of files involved</li>
<li><strong>File Manager Web UI</strong> &ndash; compressing the site&rsquo;s files obviously shrinks the download size, but also vastly reduces the amount of connections you need to make, leading to a faster download speed.

<ol>
<li> Navigate to the File Manager section (remember to tick &ldquo;Show hidden files&rdquo; to pick up .htaccess files)</li>
<li>Browse to the web root folder, select all the files and folders you want using Ctrl+Click. Remember to exclude unnecessary large files such as sql dumps, media folders and the var folder</li>
<li>Click Compress from the toolbar</li>
</ol>
</li>
</ul>


<h3>Getting hold of the database</h3>

<ul>
<li><strong>PHPMyAdmin</strong> &ndash; PHPMyAdmin offers an array of options for dumping your database. You should start by checking the database&rsquo;s size and considering excluding the dump of tables such as <code>log_url</code>, <code>log_url_info</code>, <code>log_visitor</code>, <code>log_visitor_info</code>, <code>report_viewed_product_index</code>

<ol>
<li> Navigate to the PHPMyAdmin area of cPanel and locate the database in use (check your <code>app/etc/local.xml</code> if you&rsquo;re not sure which</li>
<li>Click the Export tab</li>
<li>Select Custom: here&rsquo;s where you can selectively export information</li>
<li>Tick &lsquo;Disable foreign key checks&rsquo; and set &lsquo;Dump table&rsquo; to &lsquo;structure&rsquo;. This will have PHPMyAdmin set up only the tables' columns but no data (we&rsquo;ll get to that)</li>
<li>Click Go</li>
<li>Once this is complete, navigate back to the Export page and click Custom again.</li>
<li>Deselect (ctrl+click) any tables which are unnecessary</li>
<li>Tick &lsquo;Disable foreign key checks&rsquo; and set &lsquo;Dump table&rsquo; this time to &lsquo;data&rsquo;</li>
<li>This will provide you with two files representing the database. Import first the Structure one, and then the Data one (or concatenate the two together)</li>
</ol>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Skype Working on Fedora 20]]></title>
    <link href="http://edmondscommerce.github.io/Fedora/getting-skype-working-on-fedora-20.html"/>
    <updated>2014-01-17T14:45:29+00:00</updated>
    <id>http://edmondscommerce.github.io/Fedora/getting-skype-working-on-fedora-20</id>
    <content type="html"><![CDATA[<p>I recently needed to get Skype working on Fedora 20 and unfortunately the process wasn&rsquo;t completely smooth, there were a few hoops I had to jump through.</p>

<p>I am making a note of these here for my own future reference and to help out any one else hitting problems like these.</p>

<p>To install Skype on Fedora 20 64bit, the first thing you need to do is download the <a href="http://www.skype.com/en/download-skype/skype-for-linux/">Fedora 32bit RPM from Skype</a>.</p>

<p>To install this you should use Yum so that dependancies are handled properly:</p>

<p><code>
sudo yum install ~/Downloads/skype-4.2.0.11-fedora.i586.rpm
</code></p>

<p>However I hit issues around the libvpx package. I have Chromium installed however it packages an incompatible version of libvpx which was blocking the installation.
After a load of messing around the solution for me was so use Yum to remove that package, install the correct package and then install skype.
One issue was that removing the package also removed programs that had it as a dependancy so after installing the correct version of libvpx, I had to reinstall those programs as well.</p>

<p>Here is the process in commands:</p>

<p>Firstly remove the package and install the i686 version
<code>
yum remove libvpx.x86_64
yum install libvpx.i686
</code></p>

<p>Then install Skype
<code>
 yum install ~/Downloads/skype-4.2.0.11-fedora.i586.rpm
</code></p>

<p>Then reinstall the 64 bit version of libvpx
<code>
 yum install libvpx.x86_64
</code></p>

<p>Then reinstall the programs that were removed when I removed libvpx
<code>
 yum install firefox.x86_64 pidgin.x86_64 pidgin-libnotify.x86_64 php-gd.x86_64 shotwell.x86_64 gnome-shell-extension-pidgin.x86_64
</code></p>

<p>That got Skype installed however testing it the audio was terrible. There is one last tweak that fixed this for me:</p>

<p><code>
sudo gnome-open /usr/share/applications/skype.desktop
</code></p>

<p>Change the line that reads <strong>Exec=skype %U</strong> to the following:</p>

<p><strong>Exec=env PULSE_LATENCY_MSEC=30 skype %U</strong></p>

<p>Restart Skype and the audio issues should be resolved.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash Find Files and Echo Filename and Contents]]></title>
    <link href="http://edmondscommerce.github.io/bash/bash-find-files-and-echo-filename-and-contents.html"/>
    <updated>2014-01-13T17:18:55+00:00</updated>
    <id>http://edmondscommerce.github.io/bash/bash-find-files-and-echo-filename-and-contents</id>
    <content type="html"><![CDATA[<p>I thought this one would be easy but actually its taken a bit of messing about.</p>

<p>The goal was to find files matching a pattern, in this case a file name, and then echo out the full path to the file and also the file contents.</p>

<p>If you are interested, the reason I was doing this was to understand the <em>interesting</em> approach that the ORO Platform has taken to setting up the AppKernel bundles in Symfony2.</p>

<p>The command is here:</p>

<p><code>
 find . -type f -iwholename '*bundles.yml' | xargs -I % bash -c "echo ''; echo '----------------------'; echo %; cat %; echo '';"
</code></p>

<p>I have added in some extra echos to make it format nicely but the main thing is that I am using xargs to handle the results from find.</p>

<p>The individual result is assigned to the % character. Then a sub shell is instantiated to manage a specific command that both echos % itself and then uses cat to echo the contents of %.</p>

<p>This gave me an output like this:</p>

<h2>```</h2>

<p>./vendor/oro/platform/src/Oro/Bundle/ImportExportBundle/Resources/config/oro/bundles.yml
bundles:</p>

<pre><code>- Oro\Bundle\ImportExportBundle\OroImportExportBundle
</code></pre>

<hr />

<p>./vendor/oro/platform/src/Oro/Bundle/PlatformBundle/Resources/config/oro/bundles.yml
bundles:</p>

<pre><code>- { name: Symfony\Bundle\FrameworkBundle\FrameworkBundle, priority: -255 }
- { name: Symfony\Bundle\SecurityBundle\SecurityBundle, priority: -250 }
- { name: Symfony\Bundle\TwigBundle\TwigBundle, priority: -245 }
- { name: Symfony\Bundle\MonologBundle\MonologBundle, priority: -240 }
- { name: Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle, priority: -235 }
- { name: Symfony\Bundle\AsseticBundle\AsseticBundle, priority: -230 }
- { name: Doctrine\Bundle\DoctrineBundle\DoctrineBundle, priority: -225 }
- { name: Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle, priority: -220 }
- { name: Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle, priority: -215 }
- { name: JMS\SerializerBundle\JMSSerializerBundle, kernel: true, priority: -210 }
- { name: Knp\Bundle\PaginatorBundle\KnpPaginatorBundle, priority: -205 }
- { name: Knp\Bundle\MenuBundle\KnpMenuBundle, priority: -200 }
- { name: FOS\RestBundle\FOSRestBundle, priority: -195 }
- { name: FOS\JsRoutingBundle\FOSJsRoutingBundle, priority: -190 }
- { name: Nelmio\ApiDocBundle\NelmioApiDocBundle, priority: -185 }
- { name: BeSimple\SoapBundle\BeSimpleSoapBundle, priority: -180 }
- { name: Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle, priority: -175 }
- { name: Escape\WSSEAuthenticationBundle\EscapeWSSEAuthenticationBundle, priority: -170 }
- { name: Liip\ImagineBundle\LiipImagineBundle, priority: -165 }
- { name: Genemu\Bundle\FormBundle\GenemuFormBundle, priority: -155 }
- { name: A2lix\TranslationFormBundle\A2lixTranslationFormBundle, priority: -150 }
- { name: Lexik\Bundle\MaintenanceBundle\LexikMaintenanceBundle, priority: -145 }
- Oro\Bundle\PlatformBundle\OroPlatformBundle
</code></pre>

<p>```</p>

<p>And you can see that the bundle file I was looking for is in the Platform Bundle.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrading from Fedora 19 to 20 using FedUp]]></title>
    <link href="http://edmondscommerce.github.io/Fedora/upgrading-from-fedora-19-to-20-using-fedup.html"/>
    <updated>2014-01-03T19:32:48+00:00</updated>
    <id>http://edmondscommerce.github.io/Fedora/upgrading-from-fedora-19-to-20-using-fedup</id>
    <content type="html"><![CDATA[<p>I decided to upgrade to the latest version because why not, its the first Friday of the year.</p>

<p>The first thing to do is head over to <a href="https://fedoraproject.org/wiki/FedUp">this page</a> which explains how to use the tool.</p>

<p>I spotted the note about the 19-20 upgrade not working unless you install the bleeding edge version of the tool so thats to do first:</p>

<p><code>
sudo yum -y --enablerepo=updates-testing install fedup
</code></p>

<p>You also need to make sure that your system is fully up to date so lets do that. Once this is done you probably want to reboot to be on the safe side.</p>

<p><code>
sudo yum -y update
</code></p>

<p>Once that is all done then you need to run the fedup command itself:</p>

<p><code>
sudo yum -y update fedup fedora-release
sudo fedup --network 20
</code></p>

<p><em>I did this though and had an issue with RMPFusion. To fix that you need to run this command, then run the fedup command again:</em>
<code>
sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-rpmfusion-nonfree-fedora-20
sudo fedup --network 20
</code></p>

<p>Once fedup completes successfully you can reboot and will have an upgrade option as your first GRUB option when booting up. Select that to start the main upgrade.
It takes a while, make a brew or something.</p>

<p>Once you log in, you will no doubt notice some of your Gnome Shell Extensions are not working. Thankfully the process of upgrading these is pretty painless, just head over to
<a href="https://extensions.gnome.org/local/">https://extensions.gnome.org/local/</a> and you will see all your extensions. Any that are not compatible with your new version of Gnome Shell will have OUTDATED written where the on/off slider usually resides. Those with upgraded versions will have an upgrade button. Click that for each one, accepting the prompt.
When that&rsquo;s done, refresh the page and you should see all your upgraded extensions are now working.</p>

<p>For me the only one I&rsquo;m really going to miss is the <a href="https://extensions.gnome.org/extension/352/middle-click-to-close-in-overview/">Quick Close in Overview</a> which is really handy, hopefully will be updated soon.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fedora Yum Update Failing - RPMFusion + Solution]]></title>
    <link href="http://edmondscommerce.github.io/Fedora/fedora-yum-update-failing-rpmfusion-plus-solution.html"/>
    <updated>2014-01-02T10:42:59+00:00</updated>
    <id>http://edmondscommerce.github.io/Fedora/fedora-yum-update-failing-rpmfusion-plus-solution</id>
    <content type="html"><![CDATA[<p>I found that Fedora was completely failing to update with the normal GUI based software update system. A prompt would be repeatedly displayed and then the process would die.</p>

<p>To see what was really going on I ran yum update from the command line</p>

<p><code>
sudo yum -y update
</code></p>

<p>This died with the following error message:</p>

<p><code>
Couldn't open file /etc/pki/rpm-gpg/RPM-GPG-KEY-rpmfusion-nonfree-fedora-19
</code></p>

<p>It looks like something has been corrupted. A quick google around describes some possible causes and solutions however I thought I would try the obvious one first and just reenable RPMFusion.</p>

<p>To do that you can run this simple command (again in the command line):</p>

<p><code>
su -c 'yum localinstall --nogpgcheck http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm'
</code></p>

<p>I did this and then ran the yum update command again and everything is fixed.</p>
]]></content>
  </entry>
  
</feed>
