<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: linux | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/linux/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-11-10T11:40:03+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SELinux and connecting to Mysql databases on Red Hat based distributions]]></title>
    <link href="http://edmondscommerce.github.io/linux/se-linux-and-connecting-to-a-mysql-database.html"/>
    <updated>2014-11-07T10:53:06+00:00</updated>
    <id>http://edmondscommerce.github.io/linux/se-linux-and-connecting-to-a-mysql-database</id>
    <content type="html"><![CDATA[<p>SELinux can be restrictive by defult but prevent alot of security issues. One thing we found while trying it is that by default it will block network connections from being made via the httpd daemon. This is an issue if say on a development system you are running php via the apache module.</p>

<p>To resolve this simply login via root or sudo to root privilige and run the following command:</p>

<pre><code>setsebool -P httpd_can_network_connect on
</code></pre>

<p>You should now be able to connect to connect to your database. This will also enable things like web api, curl calls and other php that requires network access.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SELinux Configuration for Alternative Document Root]]></title>
    <link href="http://edmondscommerce.github.io/linux/selinux-configuration-for-alternative-document-root.html"/>
    <updated>2014-10-04T12:19:52+01:00</updated>
    <id>http://edmondscommerce.github.io/linux/selinux-configuration-for-alternative-document-root</id>
    <content type="html"><![CDATA[<p>SELinux provides a secure and fine grained way of controlling permissions for applications running on Linux. It moves beyond simple users and groups to something a lot more granular.</p>

<p>By default SELinux is configured expecting Apache to be using /var/www as its document root.</p>

<p>If you are using an alternative document root then you might find that Apache is unable to write to folders, even though permissions are correctly configured.</p>

<p>If this is the case, you might think that you should disable SELinux, however a better solution is to correctly configure it.</p>

<p>First of all you should double check what types http has:</p>

<p><code>bash
semanage fcontext -l | grep http
</code></p>

<p>We specifically need read/write access so lets grep for that:</p>

<p><code>bash
semanage fcontext -l | grep http | grep rw
</code></p>

<p>For me that shows the type: httpd_sys_rw_content_t</p>

<p>We now need to add this to our custom document root:</p>

<p><code>bash
semanage fcontext -a -t httpd_sys_rw_content_t ‘/opt/Projects(/.*)?’
restorecon -R -v /opt/Projects/
</code>
And then you should be able to run your sites from any folder you like without having to resort to disabling SELinux</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nice Gnome Shell Theme - Elegance Colours]]></title>
    <link href="http://edmondscommerce.github.io/linux/nice-gnome-shell-theme-elegance-colours.html"/>
    <updated>2014-10-02T09:11:11+01:00</updated>
    <id>http://edmondscommerce.github.io/linux/nice-gnome-shell-theme-elegance-colours</id>
    <content type="html"><![CDATA[<p>One of the nice features of Gnome Shell is that, with the help of the <a href="https://extensions.gnome.org/extension/19/user-themes/">User Theme</a> extension, you can really customise
your desktop experience to be something personalised.</p>

<p>For me, the first thing is to set my desktop background to be a nice picture &ndash; something with wide open spaces, mountains and lots of sky.</p>

<p>The next thing though is to set up a user theme. I like transparency and themes that allow my well chosen background image to shine through.</p>

<p>For this reason I chose the <a href="https://github.com/satya164/elegance-colors">Elegance Colors</a> theme as it has a &ldquo;clear&rdquo; preset which also includes functionality to set the colour scheme based
on the background image which is pretty slick I think.</p>

<p>For installation instructions, please see the <a href="https://github.com/satya164/elegance-colors/blob/master/README.md">README on Github</a></p>

<h2>Quick Fedora instructions are here:</h2>

<h3>Create Repo</h3>

<p>``` bash
sudo sh -c &ldquo; echo &lsquo;[home_satya164_elegance-colors]
name=Elegance Colors Gnome Shell theme (Fedora_20)
type=rpm-md
baseurl=<a href="http://download.opensuse.org/repositories/home:/satya164:/elegance-colors/Fedora_20/">http://download.opensuse.org/repositories/home:/satya164:/elegance-colors/Fedora_20/</a>
gpgcheck=1
gpgkey=<a href="http://download.opensuse.org/repositories/home:/satya164:/elegance-colors/Fedora_20/repodata/repomd.xml.key">http://download.opensuse.org/repositories/home:/satya164:/elegance-colors/Fedora_20/repodata/repomd.xml.key</a>
enabled=1&rsquo; > /etc/yum.repos.d/elegance-colors.repo&rdquo;</p>

<p>```</p>

<h3>Install Theme</h3>

<p><code>bash
sudo yum install gnome-shell-theme-elegance-colors
</code></p>

<h3>Run the Setup</h3>

<p><code>
elegance-colors
</code></p>

<h3>Switch to the Theme</h3>

<p>``` bash
gsettings set org.gnome.shell.extensions.user-theme name &lsquo;elegance-colors&rsquo;</p>

<p>```</p>

<h3>Now run the GUI and set it up</h3>

<p>For this you can hit simply search for &lsquo;Elegance Colors&rsquo; from the dash to load the GUI.</p>

<p>In the GUI you have presets and if you want transparency just choose the clear one. After that of course you can customise as you see fit</p>

<h2>Fonts</h2>

<p>To make the most of Fedora, its well worth following <a href="http://worldofgnome.org/how-to-greatly-improve-font-rendering-under-fedora-20/">these instructions</a> to improve font rendering.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[URGENT update BASH - big security issue]]></title>
    <link href="http://edmondscommerce.github.io/security/urgent-update-bash-big-security-issue.html"/>
    <updated>2014-09-25T15:18:14+01:00</updated>
    <id>http://edmondscommerce.github.io/security/urgent-update-bash-big-security-issue</id>
    <content type="html"><![CDATA[<p>Shell Shock is a BASH exploit that can allow the running of arbitrary commands on Linux servers.</p>

<p>This is a newly discovered bug and affects a very large number of servers.</p>

<p>There is a patch, you should ensure that your server&rsquo;s BASH version is updated ASAP.</p>

<h3>Centos, Redhat etc</h3>

<p><code>
yum clean all; yum -y update bash
</code></p>

<h3>Ubuntu, Debian etc</h3>

<p><code>
apt-get install --only-upgrade bash
</code></p>

<p>To check if you are vulnerable, you can run this code:</p>

<p><code>
env X="() { :;} ; echo VULNERABLE" /bin/sh -c "echo completed"
</code></p>

<p>If you see VULNERABLE then you need to update BASH.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fedora Live USB Key Creation]]></title>
    <link href="http://edmondscommerce.github.io/Fedora/fedora-live-usb-key-creation.html"/>
    <updated>2014-09-10T17:38:09+01:00</updated>
    <id>http://edmondscommerce.github.io/Fedora/fedora-live-usb-key-creation</id>
    <content type="html"><![CDATA[<p>I have had continual problems getting most of my USB keys to work as liveusb drives.</p>

<p>This is pretty awkward however it looks like I have now found a solution that works. Instead of using the official Fedora live USB creator, we are going to use something called livecd-iso-to-disk</p>

<p>First of all install it:</p>

<p><code>bash
sudo yum -y install livecd-tools
</code></p>

<p>Then this is your command to create the liveusb. Note you need to set the sdX to whichever your USB key is using, and of course make sure the path to the iso file is correct</p>

<p><code>bash
sudo livecd-iso-to-disk --format --msdos --reset-mbr --overlay-size-mb 512 --home-size-mb 512 ~/Downloads/Fedora-Live-Desktop-x86_64-20-1.iso /dev/sdc
</code></p>

<p>And that&rsquo;s it</p>
]]></content>
  </entry>
  
</feed>
