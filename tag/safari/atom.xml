<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: safari | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/safari/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2015-03-10T14:18:28+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PageSpeed and issue with images on Safari]]></title>
    <link href="http://edmondscommerce.github.io/PageSpeed/pagespeed-and-issue-with-images-on-safari.html"/>
    <updated>2015-01-30T16:15:13+00:00</updated>
    <id>http://edmondscommerce.github.io/PageSpeed/pagespeed-and-issue-with-images-on-safari</id>
    <content type="html"><![CDATA[<p>Had an issue on a client site where the images were working in all major browser with the exception of safari. The client had page speed installed with the &lsquo;rewrite_images&rsquo; filter enabled.
So it would work with older versions of Safari there are two options:</p>

<p>For the first option we can disable the &lsquo;convert_jpeg_to_webp&rsquo; and &lsquo;convert_to_webp_lossless&rsquo; filters in nginx by using the following after the &lsquo;rewrite_images&rsquo; and &lsquo;resize_rendered_image_dimensions&rsquo; filters:</p>

<pre><code>pagespeed EnableFilters rewrite_images;
pagespeed EnableFilters resize_rendered_image_dimensions;
pagespeed DisableFilters convert_jpeg_to_webp,convert_to_webp_lossless;
</code></pre>

<p>In Apache use the following:</p>

<pre><code>ModPagespeedDisableFilters convert_jpeg_to_webp,convert_to_webp_lossless
</code></pre>

<p>Please not that the diable option must be specified after the enable lines for &lsquo;rewrite_images&rsquo; and &lsquo;resize_rendered_image_dimensions&rsquo; filters.</p>

<p>In versions of PageSpeed that are 1.8.31.2 and above there is a new option which is &lsquo;ServeRewrittenWebpUrlsToAnyAgent&rsquo; which will check to see if the client can support webp files on any webp urls that are accessed.</p>

<p>In Nginx to enable this option:</p>

<pre><code>pagespeed ServeRewrittenWebpUrlsToAnyAgent off;
</code></pre>

<p>Alternatively in apache the setting is:</p>

<pre><code>ModPagespeedServeRewrittenWebpUrlsToAnyAgent off
</code></pre>
]]></content>
  </entry>
  
</feed>
