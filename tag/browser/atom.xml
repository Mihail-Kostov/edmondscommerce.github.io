<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: browser | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/browser/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2013-12-04T14:45:41+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[5 Useful features of the Opera Browser for Web Developers]]></title>
    <link href="http://edmondscommerce.github.io/opera/useful-features-of-the-opera-browser-for-web-developers.html"/>
    <updated>2012-11-09T16:42:34+00:00</updated>
    <id>http://edmondscommerce.github.io/opera/useful-features-of-the-opera-browser-for-web-developers</id>
    <content type="html"><![CDATA[<h2>1. Remotely debugging mobile websites using your Android phone</h2>


<p><img src="/assets/remotedebug-600x352.png"></p>

<p>
Dragonfly, Opera's answer to Firebug and Chrome's Developer Tools has a killer feature: it's able to let you use your local desktop to debug a page on another instance of Opera - including Opera Mobile
</p>


<p>
What this means is that all the benefits you get from inspecting elements on your desktop can be done on your Android phone. You can have the full array of debugging: inspecting specific elements, checking the CSS being applied to elements, changing the CSS in real time, and editing the HTML. You can even tap specific elements on your phone and they'll be selected in your desktop's Dragonfly instance.
</p>


<ol>
<li>1. Connect your phone to the same wifi network as your desktop/laptop</li>
<img src="/assets/RemoteConnect.png">
<li>3. On your phone open Opera Mobile and go to opera:debug in your URL bar</li>
<li>4. Enter your desktop's IP address or hostname and tap Connect</li>
<img src="/assets/tabselect.png">
</ol>




<h2>2. Separating and grouping local, staging and live tabs for the site</h2>


<p><img src="/assets/tabstackingannotated2-600x191.png"></p>

<p>
You know the situation - you have three different versions of the site in your tabs - some for local, some on staging and maybe some for the live site too. Keeping track of which is which can be difficult with them having the same favicon, title etc
</p>


<p>
Tab Stacking is a way of grouping your tabs in various ways, including grouping all your local, staging and live tabs into their own respective groups - avoiding the confusion of which tab belongs to which instance
</p>




<h2>3. Validating Local Web Pages In 2 Clicks</h2>


<p><img src="/assets/validate2.png"></p>

<p>
The W3C validator is the standard place to validate your web pages, but of course you can't pass in your local URL to the validator. The only option you have is to right-click > view source, select all and copy, open a new tab for the validator, select Direct Input and press Validate - phew!
</p>


<p>
There are of course extensions for this in Chrome and Firefox, but I'm not aware of any which allow you to use the official W3C validator
</p>


<p>
Opera's right-click context menu allows you to simply right-click any page and click Validate. Opera will then automatically post the rendered HTML to the Validator and give you instant results
</p>




<h2>4. Site-Specific Preferences</h2>


<p><img src="/assets/Site-specific-preferences-600x466.png"></p>

<p>
Sometimes you'll want to have different settings for websites you're currently working on - maybe you want to enable a more liberal cookie policy, or you want to show Flash content automatically only on sites you're developing.
</p>


<p>
For other browsers this means multiple instances of the browser, or installing addons. In Opera you can set up a whole array of configurations on a per-site basis by simnply right-clicking the page and selecting Edit Site Preferences
</p>




<h2>5. Cross Browser Testing made easy</h2>


<p><img src="/assets/OpenWith-600x79.png"></p>

<p>
Cross-browser testing is important. When developing a specific page it's often useful to open the page in an array of browsers to check that it's consistent across the board.
</p>


<p>
Opera automatically looks for other browsers installed on your system and gives you quick access to opening the current URL in them. Simply right-click your page, select Open With and then pick your browser. Opera will then launch an instance of the selected browser already landed on the right page.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mixed Content HTTPS Red Line SSL Google Chrome]]></title>
    <link href="http://edmondscommerce.github.io/debugging/mixed-content-https-red-line-ssl-google-chrome.html"/>
    <updated>2012-02-13T17:11:45+00:00</updated>
    <id>http://edmondscommerce.github.io/debugging/mixed-content-https-red-line-ssl-google-chrome</id>
    <content type="html"><![CDATA[<p>If Chrome is displaying mix content errors this means that Chrome thinks that some of the resources on the page where loaded over HTTP rather than HTTPS. But one behaviour of Chrome that might catch you out is that if Chrome at any point on a domain encountered a page with mixed content, it will then treat the whole site as having mixed content even if a given single page does not have mixed content. Chrome is unlikely to tell you this is the reason a single page has mixed content, the best way to tell is to keep closing chrome, starting a new session and browse until you get mixed content.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The End of an Era: Internet Explorer Drops Below 50 Percent of Web Usage]]></title>
    <link href="http://edmondscommerce.github.io/web%20design/the-end-of-an-era-internet-explorer-drops-below-50-percent-of-web-usage.html"/>
    <updated>2011-11-02T15:22:00+00:00</updated>
    <id>http://edmondscommerce.github.io/web%20design/the-end-of-an-era-internet-explorer-drops-below-50-percent-of-web-usage</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p><a href="http://www.webmonkey.com/2011/11/the-end-of-an-era-internet-explorer-drops-below-50-percent-of-web-usage/">http://www.webmonkey.com/2011/11/the-end-of-an-era-internet-explorer-drops-below-50-percent-of-web-usage/</a> </p>


<p>Anyone who had had to either do an extra 50% of work to get IE working, or had to pay someone else to do so. I'm sure you are thinking what we think. Yes!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Freely Available Windows Virtual Machines for Testing IE]]></title>
    <link href="http://edmondscommerce.github.io/linux/freely-available-windows-virtual-machines-for-testing-ie.html"/>
    <updated>2011-10-13T18:06:26+01:00</updated>
    <id>http://edmondscommerce.github.io/linux/freely-available-windows-virtual-machines-for-testing-ie</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>If you need to test your code against the (ahem) interesting interpretations of the various iterations of Internet Explorer then this is a great resource for you.</p>

<p>Turns out Microsoft have thrown web devs a bone by offering free virtual machine images with the various IE/OS flavours for you to test on. You can download them <a href="http://www.microsoft.com/download/en/details.aspx?id=11575">here</a>.</p>

<p>If you use VirtualBox and also a *nix based operating system such as Linux or OSX then you can use <a href="https://github.com/xdissent/ievms">this, frankly awesome, bash script</a> to automatically download one or all of these machines and fully set them up in VirtualBox for you.</p>

<p>VirtualBox, if you are not aware, is a freely available Virtualisation platform allowing you to run other operating systems on your desktop. On todays powerful machines its perfectly easy to run Linux as your core operating system and then for either running windows only apps or for testing dodgy browsers, you can fire up one of these VMs.</p>

<p>Bear in mind that they are not for keeps, you will need to reset them every 30 days due to the fact that they can not be activated. For our purposes though this is not really a problem.</p>

<h2>Usage</h2>


<p>Please note all of this has been copied and pasted from <a href="http://www.webupd8.org/2011/09/test-websites-in-internet-explorer-9-8.html">here</a>. Posted here for reference only, all original attribution and credit goes to webupd8.</p>

<ol>
<li>Before proceeding, make sure you have the latest VirtualBox installed &ndash; you can find Ubuntu installation instructions HERE. You&rsquo;ll also need &ldquo;curl&rdquo; (for both Linux and OSX) and &ldquo;unrar&rdquo; (Linux only). In Ubuntu, install them using the command below:
```</li>
</ol>


<p>sudo apt-get install curl unrar</p>

<p>```</p>

<ol>
<li>To download and run the CODE, use the following command in a terminal:
```</li>
</ol>


<p>curl -s <a href="https://raw.github.com/xdissent/ievms/master/ievms.sh">https://raw.github.com/xdissent/ievms/master/ievms.sh</a> | bash</p>

<p>```
If you want to check out the bash source before running it, you can find it @ GitHub.</p>

<p>The above command will download Windows WHDs for IE7, IE8 and IE9. If you only need one Internet Explorer version, you can run:
```</p>

<p>curl -s <a href="https://raw.github.com/xdissent/ievms/master/ievms.sh">https://raw.github.com/xdissent/ievms/master/ievms.sh</a> | IEVMS_VERSIONS=&ldquo;9&rdquo; bash</p>

<p>```
Where &ldquo;9&rdquo; is the IE version you want (you can also add two versions here, like &ldquo;7 9&rdquo;).</p>

<p>At this point, the download should start and it will take a while so be patient.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[View HTML Files from the Command Line - Linux]]></title>
    <link href="http://edmondscommerce.github.io/linux/view-html-files-from-the-command-line-linux.html"/>
    <updated>2010-08-12T11:10:44+01:00</updated>
    <id>http://edmondscommerce.github.io/linux/view-html-files-from-the-command-line-linux</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>If you ever want to have a quick look at a html file from the command line (eg when SSHing into a server) then you will love this little app.</p>

<p>Called w3m, its a basic text based browser that will render your html into readable formatted text right on the command line.</p>

<p>This is great for me as I often create log files in a HTML format, before this the only way to read them was to either have them web accessible or download them and view them locally in the browser.</p>

<p>Now with this little app I can view them right in situ &ndash; dead handy.</p>

<p>To install on Cent OS just
```</p>

<p>yum install w3m</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
