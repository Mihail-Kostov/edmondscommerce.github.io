<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: snippet | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/snippet/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2015-06-30T14:38:16+01:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PHP API Development Logging and Debugging]]></title>
    <link href="http://edmondscommerce.github.io/php/4145.html"/>
    <updated>2013-03-14T14:53:48+00:00</updated>
    <id>http://edmondscommerce.github.io/php/4145</id>
    <content type="html"><![CDATA[<p>If you are ever working with API integrations, either in or out bound, then it might be useful to set up a simple dumb logging system to assist you with developing and debugging things.</p>

<p>Here is a really simple snippet to help you along with that.</p>

<p>It literally takes exactly what it has received and logs it with no messing about. Brilliant!</p>

<p>```php</p>

<p>&lt;?php
$log[&lsquo;raw_input&rsquo;]=file_get_contents(&lsquo;php://input&rsquo;);
$log[&lsquo;<em>POST&rsquo;]=$</em>POST;
$log[&lsquo;<em>GET&rsquo;]=$</em>GET;</p>

<p>file_put_contents(&lsquo;inboundXML.log&rsquo;, var_export($log, true));</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento Flush Everything Cache, Index, Images, JS, CSS in One Go]]></title>
    <link href="http://edmondscommerce.github.io/magento/magento-flush-everything-cache-index-images-js-css-in-one-go.html"/>
    <updated>2012-03-03T16:26:59+00:00</updated>
    <id>http://edmondscommerce.github.io/magento/magento-flush-everything-cache-index-images-js-css-in-one-go</id>
    <content type="html"><![CDATA[<p>If you are developing a Magento store and you would like a method you can call to completely clear everything out that might be cached or indexed etc then you will like this little snippet:</p>

<p>```php</p>

<p>public function flushEverything() {</p>

<pre><code>    Mage::app()-&gt;getCacheInstance()-&gt;flush();
    Mage::getModel('core/design_package')-&gt;cleanMergedJsCss();
    Mage::getModel('catalog/product_image')-&gt;clearCache();
    $indexer    = Mage::getSingleton('index/indexer');
    /* @var $indexer Mage_Index_Model_Indexer */
    foreach($indexer-&gt;getProcessesCollection() as $process){
          $process-&gt;reindexEverything();
    }  
}
</code></pre>

<p>```</p>

<p>This flushes the cache storage, removes merged JS/CSS files, flushes the product image cache then loops through each index and reindexes.</p>

<p>Perhaps overkill but sometimes there&rsquo;s nothing like the use of excessive force!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP Next Working Day]]></title>
    <link href="http://edmondscommerce.github.io/php/php-next-working-day.html"/>
    <updated>2009-08-22T15:08:29+01:00</updated>
    <id>http://edmondscommerce.github.io/php/php-next-working-day</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is post is now quite old and the the information it contains may be out of date or innacurate.</h4>
<p>
If you find any errors or have any suggestions to update the information <a href="http://edmondscommerce.github.io/contact-us/index.html">please let us know</a>
or <a href="https://github.com/edmondscommerce/edmondscommerce.github.io">create a pull request on GitHub</a>
</p>
</div>


<p>Here&rsquo;s a nice little PHP snippet for you. The next weekday as a DD/MM/YYYY string:</p>

<p>```php</p>

<p>&lt;?php
if(preg_match(&lsquo;%(Sat|Sun|Fri)%&rsquo;, date(&rsquo;D'))){</p>

<pre><code>$next_working_day = date('d/m/Y', strtotime('next Monday'));
</code></pre>

<p>}else{</p>

<pre><code>$next_working_day = date('d/m/Y', strtotime('+1 day'));
</code></pre>

<p>}
echo $next_working_day;
?></p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
