<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: array | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/array/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2013-11-29T12:54:05+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PHPStorm Regex Convert Array to Object Syntax]]></title>
    <link href="http://edmondscommerce.github.io/php/phpstorm-regex-convert-array-to-object-syntax.html"/>
    <updated>2013-08-27T14:40:35+01:00</updated>
    <id>http://edmondscommerce.github.io/php/phpstorm-regex-convert-array-to-object-syntax</id>
    <content type="html"><![CDATA[<p>If you are converting some code from using array syntax to object property syntax then you might like this little snippet of regex.</p>

<p>This is design to paste straight into the find/replace dialogue in PHPStorm</p>

<p>Find:
```</p>

<p>\$(\w+)[&lsquo;([^&rsquo;]+)&lsquo;]</p>

<p>```</p>

<p>Replace:
```</p>

<p>\\$$1->$2</p>

<p>```</p>

<p>And that is it</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP List Function Silently Failing? Solution]]></title>
    <link href="http://edmondscommerce.github.io/php/php-list-function-silently-failing-solution.html"/>
    <updated>2012-03-28T12:01:50+01:00</updated>
    <id>http://edmondscommerce.github.io/php/php-list-function-silently-failing-solution</id>
    <content type="html"><![CDATA[<p>If you use PHP&rsquo;s <a href="http://php.net/manual/en/function.list.php">list</a> function to quickly extract array values out into dollar variables then you might have an issue where it just doesn&rsquo;t work for some reason.</p>

<p>The problem is that list only works with numeric arrays. If you are using an associative array (with strings for keys instead of numbers) then list will not work.</p>

<p>There is any easy solution though, simply change:</p>

<p>```php</p>

<p>$array = array(&lsquo;a&rsquo;=>1, &lsquo;b&rsquo;=>2, &lsquo;c&rsquo;=>3);
list($a, $b, $c) = $array;</p>

<p>```</p>

<p>To:</p>

<p>```php</p>

<p>$array = array(&lsquo;a&rsquo;=>1, &lsquo;b&rsquo;=>2, &lsquo;c&rsquo;=>3);
list($a, $b, $c) = array_values($array);</p>

<p>```</p>

<p>And it will work as you expect.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript Associate Arrays / Objects with Dynamic Key Access]]></title>
    <link href="http://edmondscommerce.github.io/javascript/javascript-associate-arrays-objects-with-dynamic-key-access.html"/>
    <updated>2009-09-26T18:19:24+01:00</updated>
    <id>http://edmondscommerce.github.io/javascript/javascript-associate-arrays-objects-with-dynamic-key-access</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>If you are trying to use associative arrays in Javascript, the first thing is to not use the Array type and instead just use objects.</p>

<p>The weird and wonderful thing is that if you create your array as an object, you can still use the array style square brackets to access object properties.</p>

<p>So for example take this:</p>

<p>```javascript</p>

<p>var assocArrayObject = {&ldquo;key1&rdquo;:&ldquo;value1&rdquo;, &ldquo;key2&rdquo;:&ldquo;value2&rdquo;};</p>

<p>alert(assocArrayObject[&ldquo;key1&rdquo;);</p>

<p>```</p>

<p>You can also access object properties by using a dynamic key this way as well, but not via the normal method, for example</p>

<p>```javascript</p>

<p>var dynamicKey = &ldquo;key1&rdquo;;</p>

<p>//doesnt work
alert(assocArrayObject.dynamicKey);</p>

<p>//does work
alert(assocArrayObject[dynamicKey]);</p>

<p>```</p>

<p>easy when you know how, took me a while to clear this one up :)</p>
]]></content>
  </entry>
  
</feed>
