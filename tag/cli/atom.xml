<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: CLI | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/cli/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-01-02T10:54:17+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Get Magento Version on the Command Line]]></title>
    <link href="http://edmondscommerce.github.io/magento/get-magento-version-on-the-command-line.html"/>
    <updated>2013-01-03T16:37:16+00:00</updated>
    <id>http://edmondscommerce.github.io/magento/get-magento-version-on-the-command-line</id>
    <content type="html"><![CDATA[<p>If you just want to get the Magento version on the command line quickly try this one liner:</p>

<p>```bash</p>

<p>php -r &quot;require &lsquo;app/Mage.php&rsquo;; echo Mage::getVersion(); &quot;</p>

<p>```</p>

<p>Does exactly what you need</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Product Information Scraper]]></title>
    <link href="http://edmondscommerce.github.io/portfolio/product-information-scraper.html"/>
    <updated>2011-06-09T14:25:59+01:00</updated>
    <id>http://edmondscommerce.github.io/portfolio/product-information-scraper</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<h2>Bespoke Object-Oriented PHP Automated Scraping System</h2>


<p>The aim of this project is to put together an automated price retrial system, capable of running on its own. The system will collect general information for general products as well as more detailed information for named products.</p>

<h3>Discs Like New</h3>


<p>Discs Like New  offer a professional, effective and affordable <a href=”http://www.discslikenew.com/”>disc repair service </a>to business customers throughout the UK and Europe.</p>

<p><h3>
<img src="/assets/code_snippet.jpg">
The project is interesting as it wants to be run from both a web browser, so it can be set up and product files can be uploaded; and from the command line so it can quietly run in the background. This means that it will have to detect this state and modify what it outputs accordingly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP CLI]]></title>
    <link href="http://edmondscommerce.github.io/php/php-cli.html"/>
    <updated>2011-06-08T14:40:29+01:00</updated>
    <id>http://edmondscommerce.github.io/php/php-cli</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>Running PHP on the command line, via cron etc there are a few common problems you can hit and from experience this my recommendations to avoid them.</p>

<p>It seems that (on CentOS at least) PHP does not display errors by default on the command line. You will want it to I assume so you can understand what has gone wrong with the cron task etc.</p>

<p>You can use php.ini files but its not always easy to know exactly which ini file is going to to be used. If certain settings are required, use the -d flag to set specific ini directives directly when you run PHP.</p>

<p>I have just had an issue where a script was running out of memory but no error message was displayed, despite the fact that display errors was turned on. However digging around showed that memory usage was hitting the limit and the script died silently. Increasing the memory limit fixed it.</p>

<p>Here is my standard PHP CLI runner:</p>

<p>```</p>

<p>/usr/bin/php -d display_errors -d memory_limit=512M /path/to/php/file.php</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP Detect if Script is running from CLI]]></title>
    <link href="http://edmondscommerce.github.io/php/php-detect-if-script-is-running-from-cli.html"/>
    <updated>2010-04-01T13:55:30+01:00</updated>
    <id>http://edmondscommerce.github.io/php/php-detect-if-script-is-running-from-cli</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>If you have a script that you want to behave differently depending on whether it is called from the command line or via a http request then this little snippet of code is what you need.</p>

<p>```php</p>

<pre><code>if(!defined('STDIN')){ //its not via command line
    // do non command line stuff
}
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
