<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: composer | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/composer/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2015-02-03T13:16:23+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Composer Run Utility BASH Script]]></title>
    <link href="http://edmondscommerce.github.io/composer/composer-run-utility-bash-script.html"/>
    <updated>2014-11-25T09:18:18+00:00</updated>
    <id>http://edmondscommerce.github.io/composer/composer-run-utility-bash-script</id>
    <content type="html"><![CDATA[<p>I thought I would post up this little snippet of BASH script that I tend to use with projects that use composer.</p>

<p>It combines an install/update mechanism for composer itself and then runs through the composer install process and dumps the optimised autoloader.</p>

<p>Hope you find it useful:</p>

<p>``` bash</p>

<h1>!/bin/bash</h1>

<p>DIR=&ldquo;$( cd &rdquo;$( dirname &ldquo;${BASH_SOURCE[0]}&rdquo; )&ldquo; &amp;&amp; pwd )&rdquo;
echo &ldquo;Checking for Composer&rdquo;
COMPOSER_CMD=$(which composer)
if [[ &ldquo;&rdquo; == &ldquo;$COMPOSER_CMD&rdquo; ]]
then</p>

<pre><code>echo "Installing Composer"
curl -sS https://getcomposer.org/installer | php -- --install-dir=bin
COMPOSER_CMD=$(which composer)
</code></pre>

<p>else</p>

<pre><code>echo "Updating Composer"
$COMPOSER_CMD selfupdate
</code></pre>

<p>fi
echo &ldquo;Running Composer&rdquo;
cd $DIR
$COMPOSER_CMD update
$COMPOSER_CMD dumpautoload -o
echo &ldquo;Done..&rdquo;</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Merging Forks for Composer]]></title>
    <link href="http://edmondscommerce.github.io/composer/merging-forks-for-composer.html"/>
    <updated>2013-12-05T19:53:16+00:00</updated>
    <id>http://edmondscommerce.github.io/composer/merging-forks-for-composer</id>
    <content type="html"><![CDATA[<p>I am really enjoying using Composer with a Symfony2 project that I am currently working on.</p>

<p>Recently though I found an issue where I am using the FOSRest Bundle to provide JSON API functionality. This in turn uses the
JMS/SerializerBundle to handle the actual encoding into JSON.</p>

<p>The problem is that the JMS bundle converts camelCase to snake_case and I decided I really didn&rsquo;t want that. I want my property and entity names to be the same across formats.</p>

<p>A bit of digging and I found <a href="https://github.com/passkey1510/JMSSerializerBundle">this fork</a> which features a fix for exactly this problem, brilliant!</p>

<p>However on trying to get this to install with Composer I simply could not get it to work. Further investigation shows that the version of the JMS bundle that this fork does not meet
the minimum version requirements of the FOSRest bundle. Problem.</p>

<p>The solution in the end was to fork the JMSSerializerBundle Directly then pull this down locally. Once I had that locally I then added the fork with the fix I need as another remote:</p>

<p><code>
git remote add passkey1510 git@github.com:passkey1510/JMSSerializerBundle.git
git merge remote/passkey1510/master
git push
</code></p>

<p>Those three commands added the other fork as another remote allowing me to pull in the commits that feature the fix I need. Finally I pushed this back up to github.</p>

<p>I can now reference my fork in my composer.json file like this:</p>

<p>```
&ldquo;repositories&rdquo;: [</p>

<pre><code>    {
        "url": "https://github.com/edmondscommerce/JMSSerializerBundle.git",
        "type": "vcs"
    },
</code></pre>

<p>],
```</p>

<p>Now running a <code>composer update --dev</code> and composer successfully brought in my fork of the Serializerbundle with the extra fixes to allow the property names to stay in camelCase.</p>

<p>And that is it, problem solved :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[#PHPNW12 Round UP]]></title>
    <link href="http://edmondscommerce.github.io/php/phpnw12-round-up.html"/>
    <updated>2012-10-08T11:30:43+01:00</updated>
    <id>http://edmondscommerce.github.io/php/phpnw12-round-up</id>
    <content type="html"><![CDATA[<p>All of the PHP developers from Edmonds Commerce made our annual pilgramage over the Pennines to Manchester this weekend to visit arguably one of the best PHP conferences around &ndash; PHP North West, PHPNW for short.</p>

<p>This is a three track conference with a diverse range of expert PHP developers giving presentations on some really interesting topics. The team split up and chose their own route through the choice of talks meaning that between us all we got a real flavour of the entire conference.</p>

<p>They Keynote by Ade Oshineye was all to do with API development and DevX &ndash; developer experience as opposed to the more usual and in vogue UX &ndash; user experience. The point being that users are often getting a lot of thought put into their experiences but developers are often given sparsely documented and unwieldy APIs to work with. The metaphor of a door with an ambiguous push/pull requirement was really apt.</p>

<p>Particular highlights for me included the <a href="http://nodephp.org/" target="_blank">ReactPHP</a> talk by Igor Wiedler which was both entertaining and really informative. The <a href="http://www.zeromq.org/" target="_blank">ØMQ (zero MQ)</a> layer looks really interesting among other things. The guys that went to the Data structures talk by Patrick Allaert were really impressed with that.</p>

<p>Take homes from the conference in terms of projects and technologies to keep an eye on include the following:</p>

<p><a href="http://getcomposer.org/" target="_blank">Composer</a></p>

<p><a href="http://silex.sensiolabs.org/" target="_blank">Silex Framework</a></p>

<p><a href="http://nodephp.org/" target="_blank">React PHP</a></p>

<p><a href="http://www.zeromq.org/" target="_blank">ØMQ</a></p>

<p><a href="http://aws.amazon.com/code/6752709412171743">Amazon Web Services Command Line Tools</a></p>
]]></content>
  </entry>
  
</feed>
