<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: sessions | Edmonds Commerce Dev Blog]]></title>
  <link href="http://edmondscommerce.github.io/tag/sessions/atom.xml" rel="self"/>
  <link href="http://edmondscommerce.github.io/"/>
  <updated>2014-01-02T10:54:17+00:00</updated>
  <id>http://edmondscommerce.github.io/</id>
  <author>
    <name><![CDATA[EdmondsCommerce Development Team]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PrestaShop - Session handling]]></title>
    <link href="http://edmondscommerce.github.io/prestashop/prestashop-session-handling.html"/>
    <updated>2013-03-28T17:13:28+00:00</updated>
    <id>http://edmondscommerce.github.io/prestashop/prestashop-session-handling</id>
    <content type="html"><![CDATA[<p>Like most frameworks and software packages PrestaShop has it&rsquo;s own way of handling session variables.</p>

<p>PrestaShop uses the Cookie class to manage session variables. While this isn&rsquo;t strictly a singleton you can get a pre initialised instance using Context::getContected->cookie if the FrontController->init() method has been called already.</p>

<p>The Cookie class uses the magic <strong>get </strong>isset <strong>set </strong>unset magic methods to handle parameters. Parameters set in the cookie are actually given to the client in an encrypted blob. This is good because it means sessions are not really stored on the server. This does mean, however, that only scalar values can be stored in the session. To store non-scalar values you can usually get away with serialising them but there are some restrictions even then. If you do struggle to store serialised values you can base64 encode them to fix any remaining issues.</p>

<p>Once you have set your variables you need to call the write method to save your variables to the cookie.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magento Not Working, Not Creating Report Files Either + Solution]]></title>
    <link href="http://edmondscommerce.github.io/magento/magento-not-working-not-creating-report-files-either-solution.html"/>
    <updated>2013-01-02T14:49:35+00:00</updated>
    <id>http://edmondscommerce.github.io/magento/magento-not-working-not-creating-report-files-either-solution</id>
    <content type="html"><![CDATA[<p>If you have a Magento site that is consistently erroring out and giving you the report screen with the file name, but the file does not exist in the reports folder then this could be your solution.</p>

<p>The most likely culprit in this scenario is that the filesystem has run out of space. If this happens, Magento will die because it literally can&rsquo;t create any files and it needs to do this for caching, session etc.</p>

<p>You can easily check this by running this command:</p>

<p>```bash</p>

<p>df -h</p>

<p>```</p>

<p>If you see any filesystems with 100% usage then you have your answer, you have run out of hard drive space and need to free some space up by deleting files.</p>

<p>On occasion though you might run this and see that you still have plenty of space. This can be puzzling at first though you need to bear in mind that Linux filesystems don&rsquo;t purely use space but also something called <a href="http://en.wikipedia.org/wiki/Inode" title="wikipedia explanation of inodes" target="_blank">inodes</a>.</p>

<p>An inode is like a file pointer, you need one for every file that is in the filesystem. Also there is a limit to the number of inodes in any file system. If something goes crazy and your system creates lots of small files then you might find that you run out of inodes before you run out of hard drive space.</p>

<p>To check if this is your issue run this command:</p>

<p>```bash</p>

<p>df -i</p>

<p>```</p>

<p>If you see any lines with 100% then you have run out of inodes and you need to delete some files. There are numerous possible causes of this and tactics that can be used to clear them out. When dealing with Magento though there are a few usual suspects.</p>

<p>Magento is a real culprit for this behaviour as it uses file system based sessions by default. Session files are very small and can be very numerous.</p>

<p>The quick fix is just to completely remove the sessions directory:</p>

<p>```bash</p>

<p>rm -rf /path/to/magento/var/session</p>

<p>```</p>

<p>Magento will recreate it on the next request.</p>

<p>If you would like to try to clear out just older sessions then you can do something like this:</p>

<p>```bash</p>

<p>find /path/to/magento/var/session -name &lsquo;sess_*&rsquo; -type f -mtime +7 -exec rm {} \;</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[osCommerce Checkout Problems + Solution]]></title>
    <link href="http://edmondscommerce.github.io/oscommerce/oscommerce-checkout-problems-solution.html"/>
    <updated>2010-01-19T10:33:14+00:00</updated>
    <id>http://edmondscommerce.github.io/oscommerce/oscommerce-checkout-problems-solution</id>
    <content type="html"><![CDATA[<div class="oldpost"><h4>This is an old post. The information it contains is probably out of date or innacurate</h4>
<p>
This is a post that was written a long time ago and is only being kept here for posterity.
You should probably look up more recent blog posts related to the subject you are researching
</p>
</div>


<p>If your osCommerce checkout starts behaving badly and bits of info seem to go missing eg billing address then you should definitely try this fix before you tear your hair out completely.</p>

<p>Most osCommerce installs store session information to a MySQL table called (suprisingly) sessions.</p>

<p>Sometimes (I have only seen this twice on umpteen osCommerce sites) the sessions table will become corrupted. The irritating thing is that if this happens it seems that the site will not stop working completely with a useful error message, but instead will continue to work but will behave very strangely.</p>

<p>If your osCommerce site is behaving strangely then try this fix.</p>

<p>Open phpMyAdmin and select your SQL database and then copy and paste the following into the SQL section and hit run:</p>

<p>```php</p>

<p>REPAIR TABLE <code>sessions</code>;</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
