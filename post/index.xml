<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/post/</link>
    <description>Recent content in Posts on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Mar 2017 14:42:04 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Phpstorm Paste Without Escaping</title>
      <link>https://edmondscommerce.github.io/phpstorm-paste-without-escaping/</link>
      <pubDate>Mon, 20 Mar 2017 14:42:04 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm-paste-without-escaping/</guid>
      <description>&lt;p&gt;One really &lt;del&gt;great&lt;/del&gt; annoying feature of PHPStorm is that by default, when copying and pasting a chunk of code, it will automatically escape everything.&lt;/p&gt;

&lt;p&gt;There are certain times when this can be a time saver, but often it is just getting in the way.&lt;/p&gt;

&lt;p&gt;There is a solution though:&lt;/p&gt;

&lt;p&gt;Simply enough - instead of just hitting [ctrl]+[v] you have a right click menu option for &amp;ldquo;simple paste&amp;rdquo; and this will just paste the text as is, without any escaping&lt;/p&gt;

&lt;p&gt;yay!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with your own Magento 2 Theme</title>
      <link>https://edmondscommerce.github.io/getting-started-with-your-own-magento-2-theme/</link>
      <pubDate>Fri, 03 Mar 2017 11:41:55 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/getting-started-with-your-own-magento-2-theme/</guid>
      <description>

&lt;h1 id=&#34;prerequisites-and-assumptions&#34;&gt;Prerequisites and Assumptions&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Magento 2.1 installation. &lt;a href=&#34;https://edmondscommerce.github.io/magento-2-quick-start-and-common-gotchas/&#34; target=&#34;_blank&#34;&gt;See our tutorial here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Basing from Luma theme&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;relevant-technologies&#34;&gt;Relevant Technologies&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://lesscss.org/&#34; target=&#34;_blank&#34;&gt;Less CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/php/default.asp&#34; target=&#34;_blank&#34;&gt;PHP/PHTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/xml/default.asp&#34; target=&#34;_blank&#34;&gt;XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/html/default.asp&#34; target=&#34;_blank&#34;&gt;HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/js/default.asp&#34; target=&#34;_blank&#34;&gt;Javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;relevant-magento-2-concepts&#34;&gt;Relevant Magento 2 Concepts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#layout&#34;&gt;Layout XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://edmondscommerce.github.io/introducing-ui-components/&#34;&gt;UI Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;on-this-page&#34;&gt;On this page&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;New Themeing Concepts in Magento 2

&lt;ul&gt;
&lt;li&gt;Module-specific theme files&lt;/li&gt;
&lt;li&gt;Themes&lt;/li&gt;
&lt;li&gt;Static content&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Creating the theme structure

&lt;ul&gt;
&lt;li&gt;Folders&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Configuration

&lt;ul&gt;
&lt;li&gt;registration.php&lt;/li&gt;
&lt;li&gt;theme.xml&lt;/li&gt;
&lt;li&gt;Applying your theme&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Theme Files

&lt;ul&gt;
&lt;li&gt;Templates&lt;/li&gt;
&lt;li&gt;Layout&lt;/li&gt;
&lt;li&gt;Static content (CSS/Images/JS)&lt;/li&gt;
&lt;li&gt;Overriding modulesâ€™ view files&lt;/li&gt;
&lt;li&gt;Common Snippets&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Admin Configuration&lt;/li&gt;
&lt;li&gt;Deployment&lt;/li&gt;
&lt;li&gt;Further Reading&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;new-themeing-concepts-in-magento-2&#34;&gt;New Themeing Concepts in Magento 2&lt;/h1&gt;

&lt;h2 id=&#34;module-specific-theme-files&#34;&gt;Module-specific theme files&lt;/h2&gt;

&lt;p&gt;In Magento 2 there is no longer a &amp;ldquo;base&amp;rdquo; package or &amp;ldquo;default&amp;rdquo; theme. Now, modules contain their own files within their &lt;em&gt;view/(area)/(layout|template|web)&lt;/em&gt; folders.&lt;/p&gt;

&lt;p&gt;Here are a few examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/tree/develop/app/code/Magento/Captcha/view/frontend&#34; target=&#34;_blank&#34;&gt;Magento 2&amp;rsquo;s Captcha Module&amp;rsquo;s theme files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Magestore/Bannerslider-Magento2/tree/master/view/frontend&#34; target=&#34;_blank&#34;&gt;A 3rd party module&amp;rsquo;s theme files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;

&lt;p&gt;Themes are a new standalone concept in Magento 2. These themes exist to create their own template, layout, CSS files as a self contained package.&lt;/p&gt;

&lt;p&gt;Themes can also specify their own overrides to modules&amp;rsquo; theme files, rather than relying purely on file path matching.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/webgriffe/theme-bootstrap/&#34; target=&#34;_blank&#34;&gt;A standalone theme rooted in &lt;em&gt;app/design/frontend&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;static-content&#34;&gt;Static content&lt;/h2&gt;

&lt;p&gt;Static resources such as CSS, images and JS files are no longer served from the theme folder itself. Instead they&amp;rsquo;re &lt;a href=&#34;static-content-css-images-js&#34; target=&#34;_blank&#34;&gt;published&lt;/a&gt; to the &lt;em&gt;pub&lt;/em&gt; folder using either symlinks or copies.&lt;/p&gt;

&lt;h1 id=&#34;creating-the-theme-structure&#34;&gt;Creating the theme structure&lt;/h1&gt;

&lt;h2 id=&#34;folders&#34;&gt;Folders&lt;/h2&gt;

&lt;p&gt;The first step is to create a new namespaced folder path in app/design/frontend/. This would look like &lt;em&gt;app/design/frontend/(Vendor_Name)/(ThemeName)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;magento-2-theme-skeleton-folders&#34;&gt;Magento 2 theme skeleton folders&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;app/design/frontend/(Vendor_Name)/(ThemeName)

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;(Module_Name)/&lt;/strong&gt; sets the theme&amp;rsquo;s templates and layout for each module, such as &lt;em&gt;Magento_Catalog&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Magento_Theme/&lt;/strong&gt; for module-agnostic templates and layout

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;layout/&lt;/strong&gt; for layout XML files&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;template/&lt;/strong&gt; for PHTML template files&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;media/&lt;/strong&gt; contains a preview file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;web/&lt;/strong&gt; contains static content for delivering to the browser

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;css/&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;source/&lt;/strong&gt; - less files&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;images/&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;js/&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;registration.php&lt;/strong&gt; registers the theme&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;theme.xml&lt;/strong&gt; contains data about the theme such as the name and parent theme&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;configuration&#34;&gt;Configuration&lt;/h1&gt;

&lt;h2 id=&#34;registration-php&#34;&gt;registration.php&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
\Magento\Framework\Component\ComponentRegistrar::register(
    \Magento\Framework\Component\ComponentRegistrar::THEME,
    &#39;frontend/EdmondsCommerce/ThemeTutorial&#39;,
    __DIR__
);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;theme-xml&#34;&gt;theme.xml&lt;/h2&gt;

&lt;p&gt;This file specifies information about the theme, as used in Magento&amp;rsquo;s admin&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;theme xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:noNamespaceSchemaLocation=&amp;quot;urn:magento:framework:Config/etc/theme.xsd&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Edmonds Commerce Theme Tutorial&amp;lt;/title&amp;gt;
    &amp;lt;parent&amp;gt;Magento/luma&amp;lt;/parent&amp;gt;
    &amp;lt;media&amp;gt;
        &amp;lt;preview_image&amp;gt;media/preview.jpg&amp;lt;/preview_image&amp;gt;
    &amp;lt;/media&amp;gt;
&amp;lt;/theme&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;applying-your-theme&#34;&gt;Applying your theme&lt;/h2&gt;

&lt;p&gt;To apply a theme to your store, navigate to the Magento Admin&amp;rsquo;s Design Configuration page:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Log into the Magento Admin&lt;/li&gt;
&lt;li&gt;Click Content, and then under Design click Configuration&lt;/li&gt;
&lt;li&gt;Choose your website/store/store view level, and click Edit&lt;/li&gt;
&lt;li&gt;Set your Applied Theme&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;theme-files&#34;&gt;Theme Files&lt;/h1&gt;

&lt;h2 id=&#34;templates&#34;&gt;Templates&lt;/h2&gt;

&lt;p&gt;Templates are the way to generate frontend HTML content with dynamically generated content.&lt;/p&gt;

&lt;p&gt;Magento allows for the ability to add new template engines to take advantage of other templating languages (such as twig) but only comes with PHP and XHTML renderers out of the box.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Bonus fact: the Template Hints are rendered using one of these Template Renderers in &lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Developer/Model/TemplateEngine/Decorator/DebugHints.php&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento\Developer\Model\TemplateEngine\Decorator\DebugHints&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;folders-1&#34;&gt;Folders&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A module&amp;rsquo;s template files are contained in its &lt;em&gt;view/(area)/templates&lt;/em&gt; folder&lt;/li&gt;
&lt;li&gt;A theme&amp;rsquo;s template files are contained in its &lt;em&gt;Magento_Theme/templates&lt;/em&gt; folder&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;phtml-overview&#34;&gt;PHTML Overview&lt;/h3&gt;

&lt;p&gt;Standard Magento templates are written as PHTML files. This involves a mixture of PHP and HTML, all with a focus on presenting the view-level content. This means business logic should be contained in the &lt;a href=&#34;#blocks&#34;&gt;Block class&lt;/a&gt; and called using its public methods (more on &lt;a href=&#34;#accessing-block-methods&#34;&gt;accessing block methods&lt;/a&gt; below)&lt;/p&gt;

&lt;p&gt;PHTML files look like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;lt;?php echo $url ?&amp;gt;&amp;quot;&amp;gt;
    &amp;lt;?php echo $text ?&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PHTML files use &lt;a href=&#34;http://php.net/manual/en/control-structures.alternative-syntax.php&#34; target=&#34;_blank&#34;&gt;PHP&amp;rsquo;s alternative syntax&lt;/a&gt; for &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc control structures:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php foreach($array as $item): ?&amp;gt;
    &amp;lt;span&amp;gt;&amp;lt;?php echo $item ?&amp;gt;
&amp;lt;?php endforeach; ?&amp;gt;

&amp;lt;?php if($test == &amp;quot;test&amp;quot;): ?&amp;gt;
    &amp;lt;span&amp;gt;&amp;lt;?php echo $test ?&amp;gt;
&amp;lt;?php endif; ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;accessing-block-methods&#34;&gt;Accessing block methods&lt;/h3&gt;

&lt;p&gt;As part of the rendering process, Magento makes available a &lt;code&gt;$block&lt;/code&gt; variable which represents an object instatiation of the &lt;a href=&#34;#blocks&#34;&gt;Block class&lt;/a&gt;. As with any other PHP object, you can call its public methods from within the template.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is a change from Magento 1, where the template was included within the class, and therefore had access to its protected and private methods.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;rendering-child-blocks&#34;&gt;Rendering child blocks&lt;/h3&gt;

&lt;p&gt;Inserting child blocks is pretty much the same as Magento 1:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php echo $block-&amp;gt;getChildHtml(&#39;block.name&#39;); ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;translations-and-escaping&#34;&gt;Translations and Escaping&lt;/h3&gt;

&lt;p&gt;Translations can be implemented using the &lt;code&gt;__()&lt;/code&gt; method. Note that this is not a method call on an object:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span&amp;gt;&amp;lt;?php echo __(&#39;Learn More&#39;) ?&amp;gt;&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Magento\Framework\View\ElementAbstractBlock&lt;/code&gt; provides public &lt;code&gt;stripTags()&lt;/code&gt; and &lt;code&gt;escapeHtml()&lt;/code&gt; methods. These strip a string of HTML entities and tags respectively.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&amp;lt;?php echo $block-&amp;gt;stripTags($_product-&amp;gt;getName(), null, true); ?&amp;gt;&amp;lt;/h2&amp;gt; &amp;lt;!-- the parameters null and true are for string $allowableTags and bool $allowHtmlEntities --&amp;gt;
&amp;lt;span title=&amp;quot;&amp;lt;?php echo $block-&amp;gt;escapeHtml(__(&#39;More Info&#39;)); ?&amp;gt;&amp;quot;&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/templates/template-overview.html&#34; target=&#34;_blank&#34;&gt;Magento DevDocs on Templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;layout&#34;&gt;Layout&lt;/h2&gt;

&lt;p&gt;In Magento 2, layout XML works a little differently. The most obvious difference is that each layout handle is its own XML file, so your theme&amp;rsquo;s layout folder might look like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Magento_Theme/

&lt;ul&gt;
&lt;li&gt;layout/

&lt;ul&gt;
&lt;li&gt;catalog_product_view.xml&lt;/li&gt;
&lt;li&gt;cms_index_index.xml&lt;/li&gt;
&lt;li&gt;default.xml &lt;em&gt;applies to all pages&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;xml-instructions&#34;&gt;XML Instructions&lt;/h3&gt;

&lt;p&gt;Layout XML in Magento 2 seperates its instructions into four groups:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;update&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All but the last one correspond to the HTML elements that contain them. &lt;code&gt;&amp;lt;update&amp;gt;&lt;/code&gt; is simply a way to include another handle&amp;rsquo;s instructions into the current file.&lt;/p&gt;

&lt;p&gt;Magento 2 has a few instructions in Layout XML. Some will be familiar from Magento 1, others are new.&lt;/p&gt;

&lt;h4 id=&#34;head-layout-instructions&#34;&gt;Head Layout Instructions&lt;/h4&gt;

&lt;h5 id=&#34;title&#34;&gt;Title&lt;/h5&gt;

&lt;p&gt;Sets the page&amp;rsquo;s title, as used in the window title bar and tab&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;Page Title&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;css-script-link&#34;&gt;CSS/Script/Link&lt;/h5&gt;

&lt;p&gt;Adds CSS and Javascript resources to the page. The &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag allows for both IE-conditional comments, and to defer loadinf the script until the page has loaded&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;css src=&amp;quot;Namespace_Module::css/style.css&amp;quot; /&amp;gt;

&amp;lt;script src=&amp;quot;Namespace_Module::js/script.js&amp;quot; /&amp;gt;

&amp;lt;link src=&amp;quot;Namespace_Module::js/script.css&amp;quot; ie_condition=&amp;quot;IE 9&amp;quot; defer=&amp;quot;defer&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;meta&#34;&gt;Meta&lt;/h5&gt;

&lt;p&gt;Normal meta tags for the page, with key/value pairs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;content-type&amp;quot; content=&amp;quot;text/html; charset=utf-8&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;body-layout-instructions&#34;&gt;Body Layout Instructions&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/layouts/xml-instructions.html&#34; target=&#34;_blank&#34;&gt;Full documentation on body layout instructions&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;containers&#34;&gt;Containers&lt;/h5&gt;

&lt;p&gt;Containers are a new concept in Magento 2. Containers are intended to represent a part of a page, rather than a block of content. They&amp;rsquo;re not backed by a PHP Class, and can only create an HTML element.&lt;/p&gt;

&lt;p&gt;Attributes can be assigned to the containers, and they can be sorted within their parents.&lt;/p&gt;

&lt;p&gt;Examples of standard containers are the header, footer, left, right and content areas.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;container name=&amp;quot;container.name&amp;quot; htmlTag=&amp;quot;div&amp;quot; htmlClass=&amp;quot;class&amp;quot; after=&amp;quot;-&amp;quot;&amp;gt;&amp;lt;/container&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;blocks&#34;&gt;Blocks&lt;/h5&gt;

&lt;p&gt;Blocks are used to add content to the page, and are backed by a PHP Block class. &lt;a href=&#34;#more-on-blocks&#34;&gt;More on Blocks&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;block class=&amp;quot;Namespaced\Path\To\Block\Class&amp;quot; name=&amp;quot;top.container.welcome&amp;quot;&amp;gt;&amp;lt;/block&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;move&#34;&gt;Move&lt;/h5&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;move&amp;gt;&lt;/code&gt; instruction allows for a block to be moved from one block or container to another.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;move element=&amp;quot;old.name&amp;quot; as=&amp;quot;new.name&amp;quot; destination=&amp;quot;destination.block.name&amp;quot; before=&amp;quot;-&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;referencecontainer-referenceblock&#34;&gt;ReferenceContainer/ReferenceBlock&lt;/h5&gt;

&lt;p&gt;This allows for more content to be added into a block or container&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;referenceContainer name=&amp;quot;footer&amp;quot;&amp;gt;&amp;lt;/referenceContainer&amp;gt;

&amp;lt;referenceBlock name=&amp;quot;header&amp;quot;&amp;gt;&amp;lt;/referenceBlock&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;more-on-blocks&#34;&gt;More on Blocks&lt;/h3&gt;

&lt;h4 id=&#34;block-types&#34;&gt;Block Types&lt;/h4&gt;

&lt;p&gt;There are many types of predefined Block in Magento 2, all contained within &lt;code&gt;Magento\Framework\View\Element&lt;/code&gt; namespace.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Text&lt;/strong&gt; is used for displaying simple text on the page. Good for debugging your layout XML&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Text\ListText&lt;/strong&gt; is extended from Text, this is used to contain a sorted list of other blocks. Blocks added as children to this are automatically rendered&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Messages&lt;/strong&gt; are their own block type in Magento 2. These represent the &amp;ldquo;success&amp;rdquo;, &amp;ldquo;error&amp;rdquo; etc banners&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Redirect&lt;/strong&gt; perform a client-side redirect, if ever that&amp;rsquo;s desirable&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Template&lt;/strong&gt; for loading a block with an included template. The template is set with &lt;code&gt;&amp;lt;block ... template=&amp;quot;Module_Name::path/to/template.phtml&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;block-methods&#34;&gt;Block methods&lt;/h4&gt;

&lt;p&gt;Parameters can be called on Blocks&amp;rsquo; constructors, as well as their class methods.&lt;/p&gt;

&lt;p&gt;To set constructor parameter values, &lt;code&gt;argument&lt;/code&gt;s can be added thusly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;arguments&amp;gt;
    &amp;lt;argument name=&amp;quot;logo_img_width&amp;quot; xsi:type=&amp;quot;number&amp;quot;&amp;gt;220&amp;lt;/argument&amp;gt;
    &amp;lt;argument name=&amp;quot;logo_img_height&amp;quot; xsi:type=&amp;quot;number&amp;quot;&amp;gt;70&amp;lt;/argument&amp;gt;
&amp;lt;/arguments&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And class methods by specifying an &lt;code&gt;action&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;action method=&amp;quot;methodName&amp;quot;&amp;gt;
    &amp;lt;argument name=&amp;quot;methodArgumentName&amp;quot; xsi:type=&amp;quot;text&amp;quot;&amp;gt;value&amp;lt;/argument&amp;gt;
    &amp;lt;argument name=&amp;quot;methodArgumentArray&amp;quot; xsi:type=&amp;quot;array&amp;quot;&amp;gt;
        &amp;lt;item name=&amp;quot;array_key&amp;quot; xsi:type=&amp;quot;number&amp;quot;&amp;gt;1337&amp;lt;item&amp;gt;
    &amp;lt;/argument&amp;gt;
&amp;lt;/action&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;static-content-css-images-js&#34;&gt;Static content (CSS/Images/JS)&lt;/h2&gt;

&lt;p&gt;These files are stored in the theme&amp;rsquo;s &lt;em&gt;web&lt;/em&gt; subfolder, under their own &lt;em&gt;css&lt;/em&gt;, &lt;em&gt;js&lt;/em&gt; and &lt;em&gt;images&lt;/em&gt; subfolders.&lt;/p&gt;

&lt;p&gt;In Developer mode these files are read through symlinks created inside the pub folder. In production though they&amp;rsquo;re published to the &lt;em&gt;pub&lt;/em&gt; folder using the &lt;code&gt;bin/magento setup:static-content:deploy&lt;/code&gt; command.&lt;/p&gt;

&lt;h3 id=&#34;images-and-css&#34;&gt;Images and CSS&lt;/h3&gt;

&lt;p&gt;A theme&amp;rsquo;s images and CSS files are stored in the &lt;em&gt;web/images&lt;/em&gt; and &lt;em&gt;web/css&lt;/em&gt; folders respectively.&lt;/p&gt;

&lt;h3 id=&#34;less&#34;&gt;LESS&lt;/h3&gt;

&lt;p&gt;Magento 2 natively supports using CSS preprocessors, and uses Less CSS for its own Luna theme.&lt;/p&gt;

&lt;h4 id=&#34;storing-less-files&#34;&gt;Storing Less files&lt;/h4&gt;

&lt;p&gt;Less files are contained within a modules web/css/source/ folder, with a naming convention that base files are named as &lt;code&gt;file.less&lt;/code&gt; and files to be imported are named with an underscore prefix as &lt;code&gt;_file.less&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;importing-other-less-files&#34;&gt;Importing other less files&lt;/h4&gt;

&lt;p&gt;Because normal Less &lt;code&gt;@import&lt;/code&gt; directives use paths relative to the include path, they&amp;rsquo;re not aware of Magento&amp;rsquo;s fallback system. For this reason, other .less files should be included with &lt;code&gt;//@magento_import file.less&lt;/code&gt; - yes, with the &lt;code&gt;//&lt;/code&gt; comment. This means the Less compiler will ignore it, allowing Magento to handle the fallback in its round of compilation.&lt;/p&gt;

&lt;h4 id=&#34;referencing-images&#34;&gt;Referencing images&lt;/h4&gt;

&lt;p&gt;Image URLs are relative to the &lt;em&gt;web/css&lt;/em&gt; folder, so image paths should be &lt;code&gt;url(&#39;../images/path/to/image.jpg&#39;)&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;compiling-your-less&#34;&gt;Compiling your Less&lt;/h4&gt;

&lt;p&gt;There are two ways to compile your less files:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using &lt;code&gt;grunt&lt;/code&gt; commands:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grunt exec&lt;/code&gt; sets up symlinks from the files in pub/static to your module/theme&amp;rsquo;s files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grunt less&lt;/code&gt; compiles your less to CSS, and then sets up the symlinks to those&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grunt watch&lt;/code&gt; runs a file watcher to track changes to the less files, and compiles the CSS on the fly&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;bin/magento setup:static-content:deploy&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Usually used in production&lt;/li&gt;
&lt;li&gt;Copies the files themselves into the pub folder&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;variables&#34;&gt;Variables&lt;/h4&gt;

&lt;p&gt;Magento provides &lt;a href=&#34;https://github.com/magento/magento2/tree/2.1/lib/web/css/source/lib/variables&#34; target=&#34;_blank&#34;&gt;a set of helpful variables&lt;/a&gt; for use in the Less files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/lib/web/css/source/lib/variables/_responsive.less&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;@screen__*&lt;/code&gt;&lt;/a&gt; variables for use in &lt;code&gt;@media&lt;/code&gt; queries&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/lib/web/css/source/lib/variables/_icons.less#L43&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;@icon-*&lt;/code&gt;&lt;/a&gt;` variables for a limited set of icons&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/lib/web/css/source/lib/variables/_navigation.less&#34; target=&#34;_blank&#34;&gt;Navigation variables&lt;/a&gt; to customise the category menus&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;further-reading-1&#34;&gt;Further Reading&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/css-topics/css_debug.html&#34; target=&#34;_blank&#34;&gt;Compile LESS with Grunt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;javascript&#34;&gt;JavaScript&lt;/h3&gt;

&lt;p&gt;Magento recommends including Javascript as part of templates rather than through layout XML to ensure they run as part of the body.&lt;/p&gt;

&lt;p&gt;It makes use of RequireJS to pull in dependencies. These are run with the script tag with a Magento-specific type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;pulling-in-a-javascript-assets&#34;&gt;Pulling in a Javascript assets&lt;/h4&gt;

&lt;p&gt;To pull in the module Magento_Configurable&amp;rsquo;s &lt;em&gt;js/configurable.js&lt;/em&gt; file (which will exist in the &lt;em&gt;pub&lt;/em&gt; folder):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
   require([&amp;quot;Magento_ConfigurableProduct/js/configurable&amp;quot;], function(Configurable){
        // your function body here
   }); 
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To pull in a JavaScript file from your theme, use a relative file path from your theme&amp;rsquo;s &lt;em&gt;web&lt;/em&gt; folder:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
   require([&amp;quot;js/customFile.js&amp;quot;], function(){
        // your function body here
   }); 
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Javascript libraries provided by Magento in the &lt;em&gt;lib&lt;/em&gt; folder are accessed by name:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
   require([&amp;quot;jquery&amp;quot;], function($){
        // your function body here
   }); 
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;jquery-widgets&#34;&gt;jQuery Widgets&lt;/h4&gt;

&lt;p&gt;Not to be confused with &lt;a href=&#34;https://edmondscommerce.github.io/introducing-ui-components/&#34;&gt;UI Components&lt;/a&gt;, these extend from jQuery UI components and are useful widgets to use on the frontend. They include accordions, calendars, menus and tabs.&lt;/p&gt;

&lt;p&gt;They can be initialised similar to the following in your template file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    require([
        &#39;jquery&#39;,
        &#39;tabs&#39;], function ($) {
        $(&amp;quot;#footer-accordion&amp;quot;).accordion();
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A full list of Widgets can be found at the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/javascript-dev-guide/widgets/jquery-widgets-about.html&#34; target=&#34;_blank&#34;&gt;jQuery Widgets DevDocs page&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;further-reading-2&#34;&gt;Further Reading&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/javascript-dev-guide/javascript/js-resources.html&#34; target=&#34;_blank&#34;&gt;Dev Docs on JavaScript Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;overriding-modules-view-files&#34;&gt;Overriding modules&amp;rsquo; view files&lt;/h2&gt;

&lt;p&gt;In Magento 1, overriding other modules&amp;rsquo; assets was as simple as matching the file path in your own theme. In Magento 2, things are pretty similar, except you specify which module you want to override.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In your theme (&lt;em&gt;app/design/frontend/(namespace)/(theme)&lt;/em&gt;), create a folder matching the &lt;em&gt;NameSpace_Module&lt;/em&gt; you&amp;rsquo;re overriding&lt;/li&gt;
&lt;li&gt;Create a subfolder for the type of file you&amp;rsquo;re overriding: &lt;em&gt;templates&lt;/em&gt;, &lt;em&gt;layout&lt;/em&gt; or &lt;em&gt;web&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Match the original module&amp;rsquo;s file path, and add your content there&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;An example would look like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;app/design/frontend/(namespace)/(theme)/

&lt;ul&gt;
&lt;li&gt;Magento_Catalog/

&lt;ul&gt;
&lt;li&gt;layout/

&lt;ul&gt;
&lt;li&gt;catalog_product_view.xml&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;templates/

&lt;ul&gt;
&lt;li&gt;product/

&lt;ul&gt;
&lt;li&gt;list.phtml&lt;/li&gt;
&lt;li&gt;view.phtml&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;common-snippets&#34;&gt;Common Snippets&lt;/h2&gt;

&lt;h3 id=&#34;templates-1&#34;&gt;Templates&lt;/h3&gt;

&lt;h4 id=&#34;url-generation&#34;&gt;URL Generation&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;lt;?php echo $block-&amp;gt;getUrl(&#39;path/to/page&#39;) ?&amp;gt;&amp;quot;&amp;gt;Link&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;layout-1&#34;&gt;Layout&lt;/h3&gt;

&lt;h4 id=&#34;new-container&#34;&gt;New container&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;container name=&amp;quot;new_container&amp;quot; htmlClass=&amp;quot;container_css_class&amp;quot; htmlTag=&amp;quot;div&amp;quot;&amp;gt;
    &amp;lt;!-- blocks or containers here --&amp;gt;
&amp;lt;/container&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;new-blank-template&#34;&gt;New blank template&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;block class=&amp;quot;Magento\Framework\View\Element\Template&amp;quot;
       template=&amp;quot;Magento_Theme::path/to/template.phtml&amp;quot;
       name=&amp;quot;block_name&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;removing-sidebar-items&#34;&gt;Removing sidebar items&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;referenceBlock name=&amp;quot;catalog.compare.sidebar&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;view.addto.compare&amp;quot; remove=&amp;quot;true&amp;quot; /&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;category.product.addto.compare&amp;quot; remove=&amp;quot;true&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;removing-my-account-links&#34;&gt;Removing My Account links&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;referenceBlock name=&amp;quot;customer-account-navigation-wish-list-link&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;customer-account-navigation-billing-agreements-link&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;customer-account-navigation-downloadable-products-link&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;customer-account-navigation-newsletter-subscriptions-link&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;customer-account-navigation-my-credit-cards-link&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;admin-configuration&#34;&gt;Admin Configuration&lt;/h1&gt;

&lt;p&gt;A few aspects of the theme can be user-configured through the Admin. This is found in Content &amp;gt; Design &amp;gt; Configuration &amp;gt; (store) &amp;gt; Edit&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Logo&lt;/strong&gt; image and dimensions (now includes SVG)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Title&lt;/strong&gt; prefix and suffix as displayed in the tab/title bar&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Meta keywords/description&lt;/strong&gt; as the default if the page doesn&amp;rsquo;t specify its own&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Favicon&lt;/strong&gt; image&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Welcome Text&lt;/strong&gt; which is displayed for logged out users&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Miscellaneous HTML, scripts and CSS&lt;/strong&gt; inserted before the closing &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/html&amp;gt;&lt;/code&gt; tags&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Image placeholders are configurable at Stores &amp;gt; Configuration &amp;gt; Catalog &amp;gt; Product Image Placeholders&lt;/p&gt;

&lt;h1 id=&#34;deployment&#34;&gt;Deployment&lt;/h1&gt;

&lt;p&gt;When deploying to the server, you should &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/config-guide/cli/config-cli-subcommands-mode.html&#34; target=&#34;_blank&#34;&gt;change from Developer mode to Production mode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this change in place, resources are served directly from the &lt;em&gt;pub&lt;/em&gt; folder rather than through symlinks or the static.php file. To this end you need to ensure your resources are published.&lt;/p&gt;

&lt;p&gt;This is accomplished using the &lt;code&gt;bin/magento setup:static-content:deploy&lt;/code&gt; command. This will loop through the themes and modules to deploy their static files to the &lt;em&gt;pub&lt;/em&gt; folder.&lt;/p&gt;

&lt;p&gt;Remember to set a locale if an Admin user uses a non-default locale, or else they&amp;rsquo;ll have no CSS in their Admin: &lt;code&gt;bin/magento setup:static-content:deploy --language en_GB&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;further-reading-3&#34;&gt;Further reading&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/themes/theme-create.html&#34; target=&#34;_blank&#34;&gt;Magento 2 Dev Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.creare.co.uk/blog/magento/theming-in-magento-2-part-1&#34; target=&#34;_blank&#34;&gt;Creare Magento 2 themeing guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Test If Your Magento Site Is Php7 Ready</title>
      <link>https://edmondscommerce.github.io/test-if-your-magento-site-is-php7-ready/</link>
      <pubDate>Thu, 02 Mar 2017 10:48:46 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/test-if-your-magento-site-is-php7-ready/</guid>
      <description>

&lt;p&gt;After you&amp;rsquo;ve installed the &lt;a href=&#34;https://github.com/Inchoo/Inchoo_PHP7&#34; target=&#34;_blank&#34;&gt;Inchoo PHP7 module&lt;/a&gt; you&amp;rsquo;ll likely
want to check if your custom or 3rd party module code is also PHP7 compatible. In order to determine
this you can run a &lt;a href=&#34;https://en.wikipedia.org/wiki/Static_program_analysis&#34; target=&#34;_blank&#34;&gt;static analysis&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;phpcodesniffer&#34;&gt;PHPCodeSniffer&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34; target=&#34;_blank&#34;&gt;PHPCodeSniffer&lt;/a&gt; is a PHP static analysis tool which can
be used to test your code against a set of coding standards.&lt;/p&gt;

&lt;h1 id=&#34;phpcompatibility&#34;&gt;PHPCompatibility&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wimg/PHPCompatibility&#34; target=&#34;_blank&#34;&gt;PHPCompatibility&lt;/a&gt; is a coding standard which you can use
to test if your code is compatible with a certain (or range of) PHP versions. In our case we&amp;rsquo;re only
interested in PHP7.&lt;/p&gt;

&lt;h1 id=&#34;running-the-analysis&#34;&gt;Running the Analysis&lt;/h1&gt;

&lt;p&gt;Once you&amp;rsquo;ve install both PHPCodeSniffer and PHPCompatibility (by following the instructions on their
respective GitHub pages) we should be ready to run our analysis.&lt;/p&gt;

&lt;p&gt;Use the following command to run your analysis:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;./vendor/bin/phpcs -p --standard&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;PHPCompatibility --runtime-set testVersion 7.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As the command is running you should see a summary of the tested files. &lt;code&gt;W&lt;/code&gt; means warning and &lt;code&gt;E&lt;/code&gt;
means error.&lt;/p&gt;

&lt;p&gt;After the command has run you should see a detailed list of all the potential compatibility issues.&lt;/p&gt;

&lt;p&gt;Once these have been fixed or mitigated you should be ready for PHP7.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrade From Magento Magemonkey to Mailchimp</title>
      <link>https://edmondscommerce.github.io/upgrade-from-magento-magemonkey-to-mailchimp/</link>
      <pubDate>Tue, 21 Feb 2017 14:13:42 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/upgrade-from-magento-magemonkey-to-mailchimp/</guid>
      <description>&lt;p&gt;Upgrading from MageMonkey to MailChimp unfortunately isn&amp;rsquo;t as simple as just installing the new module.&lt;/p&gt;

&lt;p&gt;You need to purge the old module completely using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Remove all MageMonkey files (taken from https://www.dropbox.com/s/fx9p0w7hqeb0zwi/uninstall_magemonkey.sh?dl=0)&lt;/span&gt;
rm app/etc/modules/Ebizmarts_MageMonkey.xml
rm app/etc/modules/Ebizmarts_Mandrill.xml
rm app/etc/modules/Ebizmarts_Autoresponder.xml
rm app/etc/modules/Ebizmarts_AbandonedCart.xml
rm app/etc/modules/Ebizmarts_SweetMonkey.xml
rm -r app/locale/nl_NL/template/email/ebizmarts
rm app/locale/nl_NL/Ebizmarts_MageMonkey.csv
rm app/locale/nl_NL/Ebizmarts_SweetMonkey.csv
rm app/locale/nl_NL/Ebizmarts_AbandonedCart.csv
rm app/locale/en_US/Ebizmarts_Mandrill.csv
rm -r app/locale/en_US/template/email/ebizmarts
rm app/locale/en_US/Ebizmarts_Autoresponder.csv
rm app/locale/en_US/Ebizmarts_MageMonkey.csv
rm app/locale/en_US/Ebizmarts_SweetMonkey.csv
rm app/locale/en_US/Ebizmarts_AbandonedCart.csv
rm -r app/code/community/Ebizmarts
rm app/design/adminhtml/default/default/layout/magemonkey.xml
rm -r app/design/adminhtml/default/default/layout/ebizmarts
rm -r app/design/adminhtml/default/default/template/ebizmarts
rm -r app/design/adminhtml/default/default/template/magemonkey
rm -r app/design/adminhtml/default/default/template/sweetmonkey
rm app/design/frontend/base/default/layout/magemonkey.xml
rm -r app/design/frontend/base/default/layout/ebizmarts
rm -r app/design/frontend/base/default/template/ebizmarts
rm -r app/design/frontend/base/default/template/magemonkey
rm -r app/design/frontend/base/default/template/ebizmarts_abandonedcart
rm -r js/ebizmarts
rm -r skin/adminhtml/default/default/abandonedcart
rm -r skin/adminhtml/default/default/ebizmarts
rm -r skin/adminhtml/default/default/magemonkey
rm -r skin/frontend/base/default/magemonkey
rm -r lib/Mandrill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This was taken from &lt;a href=&#34;https://www.dropbox.com/s/fx9p0w7hqeb0zwi/uninstall_magemonkey.sh?dl=0&#34; target=&#34;_blank&#34;&gt;uninstall_magemonkey.sh&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You also need to drop the following tables.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Drop all MageMonkey tables (taken from https://ebizmarts.com/forums/topics/view/19381#19491)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;dbname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;declare&lt;/span&gt; -a &lt;span class=&#34;nv&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_mails_sent&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_abandonedcart_popup&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_abandonedcart_abtesting&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_unsubscribe&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_visited&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_review&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_backtostock&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_backtostock_alert&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_api_debug&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_ecommerce360&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_bulksync_export&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_bulksync_import&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_async_subscribers&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_async_orders&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_last_order&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; table in &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[@]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    mysql -h &lt;span class=&#34;nv&#34;&gt;$host&lt;/span&gt; -u &lt;span class=&#34;nv&#34;&gt;$user&lt;/span&gt; --password&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dbname&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;drop table &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$table&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These tables were taken from the following &lt;a href=&#34;https://ebizmarts.com/forums/topics/view/19381#19491&#34; target=&#34;_blank&#34;&gt;Ebizmarts post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you&amp;rsquo;ve done this you can install the new module by following the instructions contained within it&amp;rsquo;s
README.md.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bash Snippet to Get Column Numbers For Csv Headers</title>
      <link>https://edmondscommerce.github.io/bash-snippet-to-get-column-numbers-for-csv-headers/</link>
      <pubDate>Wed, 08 Feb 2017 15:29:56 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash-snippet-to-get-column-numbers-for-csv-headers/</guid>
      <description>&lt;p&gt;Check out this BASH snippet to get the headers from a CSV file and give you the column numbers&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/edmondscommerce/87472f274e47ed90a2dafa2cdf48a75f.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>PHP File /tmp/ Does Not Exist</title>
      <link>https://edmondscommerce.github.io/php-file-/tmp/-does-not-exist/</link>
      <pubDate>Mon, 23 Jan 2017 18:23:49 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php-file-/tmp/-does-not-exist/</guid>
      <description>&lt;p&gt;Recently I ran into an issue with a upload issue in Akeneo when trying to include an image with a product, however the issue could happen with any PHP script.&lt;/p&gt;

&lt;p&gt;I had provided a file path of /path/to/file.jpg in the upload, but was getting an error message of &lt;code&gt;Attribute or field &amp;quot;picture&amp;quot; expects a valid pathname as data, &amp;quot;/tmp/path/to/file.jpg&amp;quot; given (for setter media)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I was surprised to see that the path had been changed to /tmp/path/to/file.jpg, but a put a copy of the file into the /tmp/ directory and tried again. This produced the same error message.&lt;/p&gt;

&lt;p&gt;At this point I assumed that the issue had to be permissions related, so as the PHP and Nginx user made sure that I could read the file. Slightly stumped I made sure that I was working on the correct container and found that I was.&lt;/p&gt;

&lt;p&gt;I then inserted an extra bit of debugging code to write the exception to a file in /tmp/uploadError.txt. I tried the upload again, got the same error, but could not find the newly created file.&lt;/p&gt;

&lt;p&gt;After confirming that this logging was in the right place, I decided to scan the entire file system to see where the file had been saved, and got the following result:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;root@desktop-container$ find / -type f -iname &lt;span class=&#34;s1&#34;&gt;&amp;#39;uploadError.txt&amp;#39;&lt;/span&gt; 
/tmp/systemd-private-c5c2073fc98d4581bb08fe6013321d9e-php-fpm.service-i9QqcK/tmp/uploadError.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A bit of googling indicated that this is a security feature of systemd. It can be disabled, if necessary, by editing the PHP service file ( found here &lt;code&gt;/usr/lib/systemd/system/php-fpm.service&lt;/code&gt; and setting PrivateTmp to false.&lt;/p&gt;

&lt;p&gt;After doing this you&amp;rsquo;ll need to reload the systemd daemon by running &lt;code&gt;systemctl daemon-reload&lt;/code&gt; and restart PHP.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Phpstorm and Mysql Scratch Files</title>
      <link>https://edmondscommerce.github.io/phpstorm-and-mysql-scratch-files/</link>
      <pubDate>Fri, 20 Jan 2017 12:39:15 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm-and-mysql-scratch-files/</guid>
      <description>

&lt;h3 id=&#34;workflow&#34;&gt;Workflow&lt;/h3&gt;

&lt;p&gt;Recently I have been writing a number of internal scripts that interface with one of our databases to check a few things.
A lot of the time we use PhpMyAdmin or the standard Mysql command line client where necessary but there is a better
and more reliable way to fire queries to the database.&lt;/p&gt;

&lt;p&gt;Enter PHP Storm.&lt;/p&gt;

&lt;h3 id=&#34;php-storm-and-mysql&#34;&gt;PHP Storm and MySQL&lt;/h3&gt;

&lt;p&gt;PHPStorm has been extended so much over the years that it can be used for fully fledged raw SQL on it&amp;rsquo;s own which can be very handy.
To start off, look in to adding your database source (we use MySql but any data source supported will work too).&lt;/p&gt;

&lt;p&gt;You can also use an SSH tunnel for your remote projects!&lt;/p&gt;

&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://confluence.jetbrains.com/display/PhpStorm/Databases+and+SQL+Editor+in+PhpStorm#DatabasesandSQLEditorinPhpStorm-Settingupadatabaseconnection&#34;&gt;
Data source Guide
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have your data source set up and configured, you are now ready to start firing queries, open a new scratch file and choose &lt;code&gt;mysql&lt;/code&gt; or which ever data source type you are currently using.
You will now have full auto completion and error highlighting out of the box and a bunch of other useful features.&lt;/p&gt;

&lt;h3 id=&#34;selective-statement-execution&#34;&gt;Selective Statement Execution&lt;/h3&gt;

&lt;p&gt;One useful feature besides the code completion is the ability to only execute certain parts of large SQL statements with inner statements so to ensure the expected results are returned.
See the screen shots for an example.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://edmondscommerce.github.io/images/phpstorm-mysql-editor.png&#34; alt=&#34;PHP Storm Mysql Editor&#34; /&gt;&lt;/p&gt;

&lt;p&gt;When selecting the code block, hit &lt;code&gt;CTRL+Enter&lt;/code&gt; or the shortcut for completion in your settings and you can then cycle through which parts of the query to run with the arrow keys.
As you cycle different parts of the query will have the green border to indicate this.&lt;/p&gt;

&lt;p&gt;This feature was tested in PHP Storm 2017.1 (EAP) but should be present in 2016.*&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debugging Google Adwords Conversion Tracking and Analytics</title>
      <link>https://edmondscommerce.github.io/debugging-google-adwords-conversion-tracking-and-analytics/</link>
      <pubDate>Tue, 17 Jan 2017 16:23:22 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/debugging-google-adwords-conversion-tracking-and-analytics/</guid>
      <description>&lt;p&gt;Recently I had to try and fix a number of issues with a client&amp;rsquo;s Google Adwork conversion tracking and Universal Analytics.&lt;/p&gt;

&lt;p&gt;To better help in debugging I discovered a plugin from Google themselves for Chrome that does some basic validation on any tracking tags in the page, this also includes tags loaded through Google Tag Manager and the Tag Manager loader itself.&lt;/p&gt;

&lt;p&gt;From here I quickly found that the wrong parameters were being passed to the Tag Manager data layer (and as a result to Ad Words) making it a simple issue to fix without having to wait for Adwords/Analytics to update.&lt;/p&gt;

&lt;p&gt;The plugin is located here, along with a list of features and supporting documentation
&lt;a href=&#34;https://get.google.com/tagassistant/&#34;&gt;Google Tag Assistant&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mysql Password Expiry - How to Resolve and Then Disable</title>
      <link>https://edmondscommerce.github.io/mysql-password-expiry---how-to-resolve-and-then-disable/</link>
      <pubDate>Mon, 16 Jan 2017 14:17:19 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/mysql-password-expiry---how-to-resolve-and-then-disable/</guid>
      <description>&lt;p&gt;I recently had the issue that the root user for a MySQL installation had their password expire.&lt;/p&gt;

&lt;p&gt;Apparently this is a fairly new MySQL feature which is designed to improve security and assist with meeting PCI-DSS requirements. However for this development box, it is not really necessary so I would prefer to disable.&lt;/p&gt;

&lt;p&gt;The issue became apparent when trying to log into phpmyadmin and seeing the error message: &amp;ldquo;#1862 - Your password has expired. To log in you must change it using a client that supports expired passwords.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;On the command line the confusing thing is that you can log in, only when you run a query such as &lt;code&gt;show databases;&lt;/code&gt; do you then get the error message:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; show databases;
ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So to fix this, firstly you can just reset your password back to the same one you were already using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set password = password(&#39;mySecretPass&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then to disable this you can use this query:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alter user &#39;root&#39;@&#39;localhost&#39; password expire never;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Screen Capture on Fedora</title>
      <link>https://edmondscommerce.github.io/screen-capture-on-fedora/</link>
      <pubDate>Thu, 12 Jan 2017 14:42:21 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/screen-capture-on-fedora/</guid>
      <description>&lt;p&gt;If you want to quickly capture your screen on Fedora follow these steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to the following &lt;a href=&#34;http://download1.rpmfusion.org/free/fedora/updates/24/x86_64/v/vokoscreen-2.4.0-3.fc24.x86_64.rpm&#34; target=&#34;_blank&#34;&gt;download&lt;/a&gt;
link for &lt;a href=&#34;http://www.kohaupt-online.de/hp/&#34; target=&#34;_blank&#34;&gt;VokoScreen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo dnf install path/to/rpm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run VokoScreen&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that&amp;rsquo;s it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting Up an Ipv6 Tunnel in Fedora</title>
      <link>https://edmondscommerce.github.io/setting-up-an-ipv6-tunnel-in-fedora/</link>
      <pubDate>Tue, 10 Jan 2017 12:15:31 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/setting-up-an-ipv6-tunnel-in-fedora/</guid>
      <description>

&lt;h1 id=&#34;creating-an-ipv6-tunnel-in-fedora&#34;&gt;Creating an IPv6 tunnel in Fedora&lt;/h1&gt;

&lt;p&gt;Recently I had to access a server that only had an IPv6 address. As I am one of the &lt;a href=&#34;https://www.google.com/intl/en/ipv6/statistics.html#tab=per-country-ipv6-adoption&amp;amp;tab=per-country-ipv6-adoption&#34; target=&#34;_blank&#34;&gt;over 80% of the UK without IPv6 access&lt;/a&gt; I needed to set up a tunnel on my machine to do this.&lt;/p&gt;

&lt;p&gt;After looking through the different ways of doing this I concluded that the easiest way to do this was to use &lt;a href=&#34;https://www.tunnelbroker.net/&#34; target=&#34;_blank&#34;&gt;Tunnel Broker&lt;/a&gt; which offers a free tunneling service.&lt;/p&gt;

&lt;p&gt;After registering for a free account you need to login and you&amp;rsquo;ll need to create a tunnel. Click the Create Regular Tunnel link in the User Functions box on the left hand side and fill out the information.&lt;/p&gt;

&lt;p&gt;Once this is done you&amp;rsquo;ll be taken to the Tunnel Details page, the next time you log in you can access this directly from the Configured Tunnels box visible after you have logged in.&lt;/p&gt;

&lt;p&gt;Click the Example Configurations tab and then select the most appropriate option from the drop down menu - I found that Linux-net-tools worked but Linux-route2 did not.&lt;/p&gt;

&lt;p&gt;Copy and paste the command into a root terminal and then you should be able to access the IPv6 web.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introducing UI Components</title>
      <link>https://edmondscommerce.github.io/introducing-ui-components/</link>
      <pubDate>Mon, 09 Jan 2017 15:05:32 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/introducing-ui-components/</guid>
      <description>

&lt;h1 id=&#34;contents&#34;&gt;Contents&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#intro&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_ui_comp&#34;&gt;What is a UI Component&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#structure&#34;&gt;Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#important_to_note&#34;&gt;Important to Note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tech_to_understand&#34;&gt;Technologies You Need to Understand&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#xml&#34;&gt;XML, XHTML and XSD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#knockoutjs&#34;&gt;KnockoutJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#requirejs&#34;&gt;RequireJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pestle&#34;&gt;Pestle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#much_components&#34;&gt;Javascript, KnockoutJS + Magento and UI Components&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_js_component&#34;&gt;What is a Javascript (JS) Component?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_ko_mage_component&#34;&gt;What is a KnockoutJS + Magento component?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what_is_the_diff&#34;&gt;What&amp;rsquo;s the difference between the three?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ui_comp_flow&#34;&gt;UI Component Process Flow&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#the_players&#34;&gt;The Players&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#process_flow_chart&#34;&gt;Process Flow Chart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#video&#34;&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mage_core_comps&#34;&gt;Magento Core UI Component Examples&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#form&#34;&gt;Form&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#listing&#34;&gt;Listing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&#34;intro&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Over the course of this article I will give you a whistle stop tour of UI Components.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;what_is_ui_comp&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;what-is-a-ui-component&#34;&gt;What is a UI Component?&lt;/h1&gt;

&lt;p&gt;In a nutshell a UI Component is an easily reusable collection of PHP, Javascript and HTML code that
provides one user interface functionality. A UI component can easily be used anywhere within your
layout files using only this small snippet.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;uiÐ¡omponent&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;some_ui_component_instance_name&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will make more sense &lt;a href=&#34;#knockoutjs&#34;&gt;later&lt;/a&gt;, but it also looks like UI Components add the M (model)
to KnockoutJS&amp;rsquo;s &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/hh848246.aspx&#34; target=&#34;_blank&#34;&gt;MVVM&lt;/a&gt;
(or really VVM) architecture. This architecture is used to build all of Magento 2&amp;rsquo;s front end.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;structure&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;structure&#34;&gt;Structure&lt;/h2&gt;

&lt;p&gt;UI Components are made up of &amp;lsquo;Basic Components&amp;rsquo; and &amp;lsquo;Secondary components&amp;rsquo;. The Basic Components are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/components/ui-listing-grid.html&#34; target=&#34;_blank&#34;&gt;Listing Component&lt;/a&gt; - Visualising and filtering data&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/components/ui-form.html&#34; target=&#34;_blank&#34;&gt;Form Component&lt;/a&gt; - CRUD&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Secondary Components can be used to extend the functionality of the Basic Components. Each Basic
Component has it&amp;rsquo;s own set of Secondary Components. The latest devdocs (2.1) have a partial list of
all components &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/ui_comp_list_concept.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.
You can also find all the available UI Components listed in
this &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml#L8&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;definition.xml&lt;/code&gt;&lt;/a&gt;
(more on that later).&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;important_to_note&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;important-to-note&#34;&gt;Important to Note&lt;/h2&gt;

&lt;h3 id=&#34;you-can-t-create-custom-ui-components&#34;&gt;You Can&amp;rsquo;t Create Custom UI Components&lt;/h3&gt;

&lt;p&gt;According to the official &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/bk-ui_comps.html&#34; target=&#34;_blank&#34;&gt;devdocs&lt;/a&gt;,
extension developers &lt;em&gt;cannot&lt;/em&gt; create custom UI Components. You can only customise existing ones. However,
Alan Storm does have a &lt;a href=&#34;http://alanstorm.com/magento_2_simplest_xsd_valid_ui_component/&#34; target=&#34;_blank&#34;&gt;solution&lt;/a&gt; (hack) for getting around this.&lt;/p&gt;

&lt;h3 id=&#34;ui-components-are-only-really-for-the-admin&#34;&gt;UI Components Are Only Really for the Admin&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/bk-ui_comps.html&#34; target=&#34;_blank&#34;&gt;devdocs&lt;/a&gt;
state that UI Components can be used on the storefront as well as within the admin. However,
you will need to provide all your own styling and the Magento core team have not themselves used any
UI Components on the storefront.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;tech_to_understand&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;technologies-you-need-to-understand&#34;&gt;Technologies You Need to Understand&lt;/h1&gt;

&lt;p&gt;Before I dive into any UI Component details there are a number of technologies you &lt;em&gt;must&lt;/em&gt; understand
first.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;xml&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;xml-xhtml-and-xsd&#34;&gt;XML, XHTML and XSD&lt;/h2&gt;

&lt;h3 id=&#34;what-are-these&#34;&gt;What Are These?&lt;/h3&gt;

&lt;p&gt;If you&amp;rsquo;ve already worked with Magento 1 then you&amp;rsquo;ll already be (very) familiar with XML. If not,
then here&amp;rsquo;s a short description from &lt;a href=&#34;https://en.wikipedia.org/wiki/XML&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Extensible Markup Language (XML) is a markup language that defines a set of rules for
encoding documents in a format that is both human-readable and machine-readable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;XML is used for configuration files as well as the XHTML templates used by UI Components.&lt;/p&gt;

&lt;p&gt;So what&amp;rsquo;s XHTML? From &lt;a href=&#34;https://en.wikipedia.org/wiki/XHTML&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Extensible Hypertext Markup Language (XHTML) is part of the family of XML markup languages.
It mirrors or extends versions of the widely used Hypertext Markup Language (HTML)
&amp;hellip;
XHTML documents are well-formed and may therefore be parsed using standard XML parsers, unlike
HTML, which requires a lenient HTML-specific parser.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The TL;DR here is that unlike standard HTML, XHTML is strict. You can&amp;rsquo;t use anything that isn&amp;rsquo;t
defined within it&amp;rsquo;s XSD schema. &lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Ui/view/base/ui_component/templates/form/default.xhtml&#34; target=&#34;_blank&#34;&gt;UI Component templates&lt;/a&gt;
are all defined using XHTML.&lt;/p&gt;

&lt;p&gt;So what&amp;rsquo;s an XSD schema? From &lt;a href=&#34;https://en.wikipedia.org/wiki/XML_Schema_(W3C)&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;XSD (XML Schema Definition), a recommendation of the World Wide Web Consortium (W3C), specifies
how to formally describe the elements in an Extensible Markup Language (XML) document.
It can be used by programmers to verify each piece of item content in a document.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So the &lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Ui/etc/ui_components.xsd&#34; target=&#34;_blank&#34;&gt;XSD file&lt;/a&gt;
defines the valid XML nodes and their structure within a given document. This is used to
validate the XHTML templates and XML configuration files within Magento 2 as well as create a DSL
(&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain-specific_language&#34; target=&#34;_blank&#34;&gt;Domain Specific Language&lt;/a&gt;)
for &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Customer/view/base/ui_component/customer_form.xml&#34; target=&#34;_blank&#34;&gt;defining UI Components&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/XML&#34; target=&#34;_blank&#34;&gt;Wikipedia - XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/XHTML&#34; target=&#34;_blank&#34;&gt;Wikipedia - XHTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/XML_Schema_(W3C)&#34; target=&#34;_blank&#34;&gt;Wikipedia - XSD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;knockoutjs&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;knockoutjs&#34;&gt;KnockoutJS&lt;/h2&gt;

&lt;p&gt;From the KnockoutJS site:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Knockout is a JavaScript library that helps you to create rich, responsive display and editor user
interfaces with a clean underlying data model.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;what-is-knockoutjs&#34;&gt;What is KnockoutJS?&lt;/h3&gt;

&lt;p&gt;KnockoutJS uses an MVVM (&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/hh848246.aspx&#34; target=&#34;_blank&#34;&gt;model&amp;ndash;view&amp;ndash;view-Model&lt;/a&gt;)
architecture to create interfaces that update when an underlying data model is changed.&lt;/p&gt;

&lt;p&gt;Knockout&amp;rsquo;s MVVM looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://edmondscommerce.github.io/images/MVVM.svg&#34; alt=&#34;KnockoutJS MVVM&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The Javascript view-model is bound to the HTML view using Knockouts custom &lt;code&gt;data-bind&lt;/code&gt; attribute.
An example of this can be seen &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/form/collapsible.xhtml#L14&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.
Now, when the Javascript
data model within the view-model changes any HTML elements which are observing this view-model will
be updated. The view-model itself is triggered to update by the same HTML elements. The view-model will
update it&amp;rsquo;s temporary data model and pull data from / trigger updates within the Magento Model as required.&lt;/p&gt;

&lt;h3 id=&#34;what-s-it-used-for&#34;&gt;What&amp;rsquo;s It Used For?&lt;/h3&gt;

&lt;p&gt;KnockoutJS is used to power the UI Component interfaces (and all other Magento 2 interfaces).
It handles templating as well as user interface updates.&lt;/p&gt;

&lt;h3 id=&#34;knockoutjs-customisations-made-for-magento-2&#34;&gt;KnockoutJS Customisations made for Magento 2&lt;/h3&gt;

&lt;h4 id=&#34;custom-templating-engine&#34;&gt;Custom Templating Engine&lt;/h4&gt;

&lt;p&gt;The standard KnockoutJS templating engine expects the HTML templates to be present within the current page
like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;text/html&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;template_id&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The Magento core team have &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/template/engine.js&#34; target=&#34;_blank&#34;&gt;customised the KnockoutJS templating engine&lt;/a&gt;
so that it can now load templates from a remote source.&lt;/p&gt;

&lt;p&gt;This feature makes it easier to reuse templates as they are no longer embedded within &lt;code&gt;.phtml&lt;/code&gt; files.&lt;/p&gt;

&lt;h4 id=&#34;scope&#34;&gt;Scope&lt;/h4&gt;

&lt;p&gt;The Magento core team have also added a &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bindings/scope.js&#34; target=&#34;_blank&#34;&gt;custom &lt;code&gt;scope&lt;/code&gt;&lt;/a&gt;
binding. This binding allows you to easily
bind a view-model to a template (HTML) element on a per template basis. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;data-bind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;scope: &amp;#39;some_view_model.some_view_model&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    ...
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This knockout view-model (listed under the &lt;code&gt;&amp;quot;components&amp;quot;&lt;/code&gt; key within the JSON configuration) is
instantiated using the &lt;code&gt;Magento_Ui/js/core/app&lt;/code&gt; Javascript component:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
{
    &amp;quot;*&amp;quot;: {
        &amp;quot;Magento_Ui/js/core/app&amp;quot;: {
            &amp;quot;components&amp;quot;: {
                &amp;quot;some_view_model&amp;quot;: {
                    &amp;quot;component&amp;quot;: &amp;quot;&amp;lt;Namespace&amp;gt;_&amp;lt;Module&amp;gt;/js/view/someViewModel&amp;quot;
                }
            }
        }
    }
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;further-reading-1&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/knockoutjs_primer_for_magento_developers/&#34; target=&#34;_blank&#34;&gt;Alan Storm - KnockoutJS Primer for Magento Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_knockoutjs_integration/&#34; target=&#34;_blank&#34;&gt;Alan Storm - KnockoutJS Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://knockoutjs.com/documentation/introduction.html&#34; target=&#34;_blank&#34;&gt;KnockoutJS - benefits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://knockoutjs.com/documentation/observables.html&#34; target=&#34;_blank&#34;&gt;KnockoutJS - MVVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel&#34; target=&#34;_blank&#34;&gt;Wikipedia - MVVM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;requirejs&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;requirejs&#34;&gt;RequireJS&lt;/h2&gt;

&lt;p&gt;From the RequireJS site:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;RequireJS is a JavaScript file and module loader. It is optimized for in-browser use, but it can be
used in other JavaScript environments, like Rhino and Node. Using a modular script loader like
RequireJS will improve the speed and quality of your code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;what-is-requirejs&#34;&gt;What is RequireJS?&lt;/h3&gt;

&lt;p&gt;RequireJS uses the AMD (&lt;a href=&#34;https://github.com/amdjs/amdjs-api/blob/master/AMD.md&#34; target=&#34;_blank&#34;&gt;Asynchronous Module Definition&lt;/a&gt;)
standard to provide dependency management and modules. RequireJS uses lazy loading to only load a module
when it&amp;rsquo;s required, this can speed up page load times. By implementing the AMD standard it can also load
dependencies asynchronously and provides no guarantees about the order in which a modules dependencies
will be fetched.&lt;/p&gt;

&lt;p&gt;The asynchronous nature of RequireJS can be an issue for non AMD compliant modules. For example, JQuery
plugins that depend on JQuery itself. In these cases RequireJS can be configured to load one (or more)
of a modules dependencies after a subset of the other dependencies have loaded using the
&lt;a href=&#34;http://requirejs.org/docs/api.html#config-shim&#34; target=&#34;_blank&#34;&gt;shim&lt;/a&gt; configuration value.&lt;/p&gt;

&lt;h3 id=&#34;what-s-it-used-for-1&#34;&gt;What&amp;rsquo;s It Used For?&lt;/h3&gt;

&lt;p&gt;All Magento 2 Javascript code (modules) make use of RequireJS to load their dependencies.&lt;/p&gt;

&lt;h3 id=&#34;further-reading-2&#34;&gt;Further reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/amdjs/amdjs-api/blob/master/AMD.md&#34; target=&#34;_blank&#34;&gt;AMD specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://requirejs.org/docs/whyamd.html&#34; target=&#34;_blank&#34;&gt;RequireJS - AMD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://requirejs.org/docs/api.html#config-shim&#34; target=&#34;_blank&#34;&gt;RequireJS - Shim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_and_requirejs/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Magento 2 and RequireJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/javascript-dev-guide/javascript/js-resources.html&#34; target=&#34;_blank&#34;&gt;Magento 2 devdocs - RequireJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;pestle&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;pestle&#34;&gt;Pestle&lt;/h2&gt;

&lt;p&gt;If you don&amp;rsquo;t want to spend your time creating module boiler plate code / configuration then you&amp;rsquo;ll want
to check out Pestle. Pestle is a static code generator which provides a number of
templates / helpful functions for Magento 2.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;$ php pestle list
  ...
  magento2:generate:acl
  magento2:generate:command
  magento2:generate:config_helper
  magento2:generate:crud_model
  magento2:generate:di
  magento2:generate:install
  magento2:generate:menu
  magento2:generate:module
  magento2:generate:observer
  magento2:generate:plugin_xml
  magento2:generate:preference
  magento2:generate:psr_log_level
  magento2:generate:registration
  magento2:generate:route
  magento2:generate:theme
  magento2:generate:ui:add-column-actions
  magento2:generate:ui:add-column-sections
  magento2:generate:ui:grid
  magento2:generate:view
  ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;further-reading-3&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/astorm/pestle&#34; target=&#34;_blank&#34;&gt;GitHub Pestle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento2_pestle_code_generation/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Code Generation with Pestle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;much_components&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;javascript-knockoutjs-magento-and-ui-components&#34;&gt;Javascript, KnockoutJS + Magento and UI Components&lt;/h1&gt;

&lt;p&gt;Did you know there are three types of component used within the Magento 2 front end?&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;what_is_js_component&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-is-a-javascript-js-component&#34;&gt;What is a Javascript (JS) Component?&lt;/h2&gt;

&lt;p&gt;A JS Component is a subtype of RequireJS module. It&amp;rsquo;s a RequireJS module that is loaded using a
&lt;code&gt;text/x-magento-init&lt;/code&gt; script tag and that always returns a function.
This function is then called by core Magento code which passes any configuration values you set
within the &lt;code&gt;text/x-magento-init&lt;/code&gt; script tag as arguments. &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/core/app.js&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento_UI/js/core/app&lt;/code&gt;&lt;/a&gt;
that we saw above is a good example of this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
{
    &amp;quot;*&amp;quot;: {
        &amp;quot;Magento_Ui/js/core/app&amp;quot;: { &amp;lt;---- Module to be instantiate
            &amp;quot;components&amp;quot;: {       ^------ Object with all values to be passed as function arguments
                &amp;quot;some_view_model&amp;quot;: {
                    &amp;quot;component&amp;quot;: &amp;quot;&amp;lt;Namespace&amp;gt;_&amp;lt;Module&amp;gt;/js/view/someViewModel&amp;quot;
                }
            }
        }
    }
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;further-reading-4&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_javascript_init_scripts/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Javascript Init Scripts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;what_is_ko_mage_component&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-is-a-knockoutjs-magento-component&#34;&gt;What is a KnockoutJS + Magento component?&lt;/h2&gt;

&lt;p&gt;A plain KnockoutJS component is the grouping of a KnockoutJS template (HTML) and view-model (JS). This
component is then registered with KnockoutJS and provided a unique key. This key can then be used within
your standard HTML markup to instantiate the component.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;data-bind&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;component:&amp;#39;some-component-key&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Due to the KnockoutJS customisations listed &lt;a href=&#34;#knockoutjs&#34;&gt;above&lt;/a&gt; this process is not quite the same
in Magento. Within Magento the template is loaded via a URL and the view-model is pulled from the
registered view-models using the scope binding. These are then linked together and registered as
a component.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;what_is_the_diff&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-s-the-difference-between-the-three&#34;&gt;What&amp;rsquo;s the difference between the three?&lt;/h2&gt;

&lt;p&gt;The naming is unfortunate here but to keep this straight in your head it&amp;rsquo;s probably best to remember:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JS Components - provide additional &lt;em&gt;behavioural&lt;/em&gt; functionality.&lt;/li&gt;
&lt;li&gt;KnockoutJS + Magento Components - provide additional &lt;em&gt;user interface&lt;/em&gt; functionality.&lt;/li&gt;
&lt;li&gt;UI Components - provide &lt;em&gt;building blocks&lt;/em&gt; for creating Admin interfaces (and utilise the above two component types).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;further-reading-5&#34;&gt;Further Reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/magento_2_javascript_init_scripts/&#34; target=&#34;_blank&#34;&gt;Alan Storm - JS Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://alanstorm.com/knockoutjs_primer_for_magento_developers/&#34; target=&#34;_blank&#34;&gt;Alan Storm - Knockout Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.0/javascript-dev-guide/javascript/js_init.html&#34; target=&#34;_blank&#34;&gt;Magneto 2 devdocs - JS Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;ui_comp_flow&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;ui-component-process-flow&#34;&gt;UI Component Process Flow&lt;/h1&gt;

&lt;p&gt;&lt;a name=&#34;the_players&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-players&#34;&gt;The Players&lt;/h2&gt;

&lt;h3 id=&#34;layout&#34;&gt;Layout&lt;/h3&gt;

&lt;p&gt;This is your standard &lt;code&gt;&amp;lt;handle&amp;gt;.xml&lt;/code&gt; layout file. You add the UI Component to the layout using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;uiÐ¡omponent&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;some_ui_component_instance_name&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;module-agnostic-configuration&#34;&gt;Module Agnostic Configuration&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;definition.xml&lt;/code&gt;&lt;/a&gt;
file contains all default configuration for all the UI Components available in Magento 2. It
also defines the PHP classes used to generate any JSON configuration which eventually gets passed
to KnockoutJS. Any configuration set within the &lt;code&gt;definition.xml&lt;/code&gt; are global and effect all modules.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;...
&lt;span class=&#34;nt&#34;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;Magento\Ui\Component\Form&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;argument&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;js_config&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;component&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Magento_Ui/js/form/form&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;template&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;templates/form/default&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The XML above basically says; instantiate the &lt;code&gt;Magento\Ui\Component\Form&lt;/code&gt; class by passing
the array of arguments contained within &lt;code&gt;&amp;lt;argument&amp;gt;&lt;/code&gt; to it&amp;rsquo;s constructor.&lt;/p&gt;

&lt;p&gt;The first argument:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;...
&lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;component&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;Magento_Ui/js/form/form&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Says use &lt;code&gt;magento/module-ui/view/base/web/js/form/form.js&lt;/code&gt; as the KnockoutJS view-model for this
component.&lt;/p&gt;

&lt;p&gt;The second argument:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;template&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;templates/form/default&lt;span class=&#34;nt&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Means use &lt;code&gt;magento/module-ui/view/base/templates/form/default.phtml&lt;/code&gt; as the default template for
this UI Component.&lt;/p&gt;

&lt;h3 id=&#34;top-level-configuration&#34;&gt;Top Level Configuration&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Customer/view/base/ui_component/customer_form.xml#L8&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;&amp;lt;component_name&amp;gt;.xml&lt;/code&gt;&lt;/a&gt;
file contains any configuration you wish to set on a UI Component at the module level.&lt;/p&gt;

&lt;p&gt;This will usually include the arguments to be passed to the UI Components PHP constructor
&lt;code&gt;&amp;lt;arguments&amp;gt;&lt;/code&gt;, the data source to be used by the UI Component &lt;code&gt;&amp;lt;dataSource&amp;gt;&lt;/code&gt; and any
Secondary Components to be included.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:noNamespaceSchemaLocation=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;...&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;argument&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;xsi:type=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;array&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        ...
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/argument&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;dataSource&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;customer_form_data_source&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Covered in more detail below --&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/dataSource&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;fieldset&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;customer&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;c&#34;&gt;&amp;lt;!-- Secondary Component --&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;fieldset&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;address&amp;quot;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;gt;&lt;/span&gt;
        ...
    &lt;span class=&#34;nt&#34;&gt;&amp;lt;/fieldset&amp;gt;&lt;/span&gt;
&lt;span class=&#34;nt&#34;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Any nodes added within the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; node here which are not either
&lt;code&gt;&amp;lt;argument&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;dataSource&amp;gt;&lt;/code&gt; are considered to be a new Secondary Component instance.
These can be recursively nested so a Secondary Component can contain another etc.&lt;/p&gt;

&lt;p&gt;Any arguments set here will override the default values set within &lt;code&gt;definition.xml&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;abstractcomponent&#34;&gt;AbstractComponent&lt;/h3&gt;

&lt;p&gt;Each UI Component is backed by a
&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/Form.php&#34; target=&#34;_blank&#34;&gt;PHP class&lt;/a&gt;
extending from
&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/AbstractComponent.php&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento\Ui\Component\AbstractComponent&lt;/code&gt;&lt;/a&gt;.
This class processes both the top level and module agnostic &lt;code&gt;&amp;lt;argument&amp;gt;&lt;/code&gt; values and generates the
JSON configuration later used to instantiate a KnockoutJS view-model and assign a template.&lt;/p&gt;

&lt;h3 id=&#34;view-model-constructor&#34;&gt;View-Model Constructor&lt;/h3&gt;

&lt;p&gt;In the module agnostic configuration above we configured a view-model. This view-model is a RequireJS
module that extends from &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/core/element/element.js&#34; target=&#34;_blank&#34;&gt;uiElement&lt;/a&gt;.
This extended uiElement is then returned from the module to be used as a view-model constructor.&lt;/p&gt;

&lt;p&gt;Default values can be set within this constructor; top level and module agnostic configuration values
take precedence over these.&lt;/p&gt;

&lt;p&gt;If you require KnockoutJS you can also start adding state for your templates to observe and functions
to update / manage that state.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;uiElement&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;ko&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ko&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;extend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;quot;defaults&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;Namespace&amp;gt;_&amp;lt;ModuleName&amp;gt;/path/to/template&amp;#39;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;s2&#34;&gt;&amp;quot;some_value&amp;quot;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ko&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;observable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;template&#34;&gt;Template&lt;/h3&gt;

&lt;p&gt;UI Component templates like &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/form/collapsible.xhtml&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;collapsible.xhtml&lt;/code&gt;&lt;/a&gt;
are set within either the view-model constructor or the module agnostic or top level configurations.&lt;/p&gt;

&lt;p&gt;For the template to be rendered correctly it also needs to include the following comment:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;!-- ko template: getTemplate() --&amp;gt;&amp;lt;!-- /ko --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This calls the getTemplate() function on our view-model. This is inherited from
&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/core/element/element.js#L262&#34; target=&#34;_blank&#34;&gt;uiElement&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;uiregistry&#34;&gt;uiRegistry&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/registry/registry.js&#34; target=&#34;_blank&#34;&gt;uiRegistry&lt;/a&gt;
is a Magento 2 RequireJS module that&amp;rsquo;s used (as global state) to store all the currently
instantiated view-models. These models are stored as key value pairs. The key here maps to a
KnockoutJS scope binding value.&lt;/p&gt;

&lt;h3 id=&#34;engine-js-magento-ui-js-lib-knockout-template-engine&#34;&gt;engine.js (Magento_UI/js/lib/knockout/template/engine)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/template/engine.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
implements Magento 2&amp;rsquo;s custom KnockoutJS templating engine.&lt;/p&gt;

&lt;h3 id=&#34;bootstrap-js-magento-ui-js-lib-knockout-bootstrap&#34;&gt;bootstrap.js (Magento_UI/js/lib/knockout/bootstrap)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bootstrap.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
requires Magento 2&amp;rsquo;s custom templating engine and sets it as KnockoutJS&amp;rsquo;s
current templating engine.&lt;/p&gt;

&lt;h3 id=&#34;layout-js-magento-ui-js-core-renderer-layout&#34;&gt;layout.js (Magento_UI/js/core/renderer/layout)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/core/renderer/layout.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
is required by the the app module (see below) and handles the
instantiation of view-model objects. It adds these view-models to the
uiRegistry.&lt;/p&gt;

&lt;h3 id=&#34;app-js-magento-ui-js-core-app&#34;&gt;app.js (Magento_UI/js/core/app)&lt;/h3&gt;

&lt;p&gt;This &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/core/app.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
requires the bootstrap module as well as the layout module. It calls the
function returned by the layout module starting the instantiation
of view-models.&lt;/p&gt;

&lt;h3 id=&#34;scope-js-magento-ui-js-lib-knockout-bindings-scope&#34;&gt;scope.js (Magento_UI/js/lib/knockout/bindings/scope)&lt;/h3&gt;

&lt;p&gt;This final &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bindings/scope.js&#34; target=&#34;_blank&#34;&gt;module&lt;/a&gt;
implements Magento 2&amp;rsquo;s custom scope binding. This module handles the linking
of view-models and views using it&amp;rsquo;s &lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/knockout/bindings/scope.js#L21&#34; target=&#34;_blank&#34;&gt;applyComponents()&lt;/a&gt;
function.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;process_flow_chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;process-flow-chart&#34;&gt;Process Flow Chart&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;
&lt;img src=&#34;https://edmondscommerce.github.io/images/UI Component Flow.svg&#34; alt=&#34;UI Component Process Flow&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;video&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;video&#34;&gt;Video&lt;/h2&gt;

&lt;p&gt;Here&amp;rsquo;s a video of me stepping through the above flow in PHPStorm and Chrome.&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/oN67ZdLat7Q&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;I&amp;rsquo;ve extracted the PHPStorm breakpoints and added them to &lt;a href=&#34;https://github.com/edmondscommerce/UI_Components_Breakpoints&#34; target=&#34;_blank&#34;&gt;this&lt;/a&gt;
GitHub repo (just in case you want to have a go yourself).&lt;/p&gt;

&lt;h3 id=&#34;further-reading-6&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;See all Alan Storm links above&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/concepts/ui_comp_config_flow_concept.html&#34; target=&#34;_blank&#34;&gt;Magento 2 devdocs - UI Component Configuration Flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/ui_comp_guide/bk-ui_comps.html&#34; target=&#34;_blank&#34;&gt;Magento 2 devdocs - Overview of UI Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;mage_core_comps&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;magento-core-ui-component-examples&#34;&gt;Magento Core UI Component Examples&lt;/h1&gt;

&lt;p&gt;Here are some links to the Magento 2 GitHub repo for you to investigate further.&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;form&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;form&#34;&gt;Form&lt;/h2&gt;

&lt;p&gt;This is a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; used in the &lt;a href=&#34;https://github.com/magento/magento2/tree/develop/app/code/Magento/Theme&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento_Theme&lt;/code&gt;&lt;/a&gt;
module.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Theme/view/adminhtml/layout/theme_design_config_edit.xml#L18&#34; target=&#34;_blank&#34;&gt;Layout XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml&#34; target=&#34;_blank&#34;&gt;Module Agnostic Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Theme/view/adminhtml/ui_component/design_config_form.xml&#34; target=&#34;_blank&#34;&gt;Top Level Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/Form.php&#34; target=&#34;_blank&#34;&gt;AbstractComponent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/form/form.js&#34; target=&#34;_blank&#34;&gt;View-Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/form/collapsible.xhtml&#34; target=&#34;_blank&#34;&gt;Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;listing&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;listing&#34;&gt;Listing&lt;/h2&gt;

&lt;p&gt;This is a &lt;code&gt;&amp;lt;listing&amp;gt;&lt;/code&gt; used in the &lt;a href=&#34;https://github.com/magento/magento2/tree/develop/app/code/Magento/Customer&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento_Customer&lt;/code&gt;&lt;/a&gt;
module.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Customer/view/adminhtml/layout/customer_index_index.xml#L12&#34; target=&#34;_blank&#34;&gt;Layout XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/etc/definition.xml&#34; target=&#34;_blank&#34;&gt;Module Agnostic Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Customer/view/adminhtml/ui_component/customer_listing.xml&#34; target=&#34;_blank&#34;&gt;Top Level Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/Component/Listing.php&#34; target=&#34;_blank&#34;&gt;AbstractComponent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/web/js/lib/core/collection.js&#34; target=&#34;_blank&#34;&gt;View-Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/app/code/Magento/Ui/view/base/ui_component/templates/listing/default.xhtml&#34; target=&#34;_blank&#34;&gt;Template&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Replacing Failed Drive in Zfs Zpool (on Proxmox)</title>
      <link>https://edmondscommerce.github.io/replacing-failed-drive-in-zfs-zpool-on-proxmox/</link>
      <pubDate>Mon, 12 Dec 2016 18:13:32 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/replacing-failed-drive-in-zfs-zpool-on-proxmox/</guid>
      <description>

&lt;p&gt;Recently we had one of our Proxmox machines suffer a failed disk drive.&lt;/p&gt;

&lt;p&gt;Thankfully, replacing a failed disk in a ZFS zpool is remarkably simple if you know how.&lt;/p&gt;

&lt;p&gt;In this example, we are using the ZFS configuration as per the Proxmox installer which also creates a boot partition which is not part of the zpool. Seems like a pretty sensible idea to me.&lt;/p&gt;

&lt;p&gt;Here is how we can look at the status of our zpool and see that it has a failed disk:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@cluster1 zpool status -v
  pool: rpool
 state: DEGRADED
status: One or more devices could not be used because the label is missing or
    invalid.  Sufficient replicas exist for the pool to continue
    functioning in a degraded state.
action: Replace the device using &#39;zpool replace&#39;.
   see: http://zfsonlinux.org/msg/ZFS-8000-4J
  scan: none requested
config:

    NAME                      STATE     READ WRITE CKSUM
    rpool                     DEGRADED     0     0     0
      raidz1-0                DEGRADED     0     0     0
        sdb2                  ONLINE       0     0     0
        sdc2                  ONLINE       0     0     0
        sdd2                  ONLINE       0     0     0
        14456048953908038050  FAULTED      0     0     0  was /dev/sdd2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So you can see that &lt;code&gt;/dev/sdd2&lt;/code&gt; has died and is no longer available. The numeric ID that is in place of sdd2 is important so make sure you have note of it.&lt;/p&gt;

&lt;p&gt;Now lets assume that you have figured out which drive the failed one is, whipped it out and slotted in a shiny new replacement drive that is at least as big as the one it is replacing. The next step is to actually add in the new drive.&lt;/p&gt;

&lt;h1 id=&#34;step-one-know-your-drive-ids&#34;&gt;Step one: Know your Drive IDs&lt;/h1&gt;

&lt;p&gt;To avoid misery, you need to make absolutely sure you know which drives are which. If you replace a drive then the IDs (sda etc) can get shuffled around, so you need to double check.&lt;/p&gt;

&lt;p&gt;The easiest way I think is to look in &lt;code&gt;/dev/disk/by-id&lt;/code&gt; and in there you should notice one disk that has no partitions - that is your new one.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@cluster1 cd /dev/disk/by-id/
/dev/disk/by-id
root@cluster1 ll
total 0
drwxr-xr-x 2 root root 560 Dec 12 12:08 .
drwxr-xr-x 6 root root 120 Dec 12 12:08 ..
lrwxrwxrwx 1 root root   9 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRREL -&amp;gt; ../../sdd
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRREL-part1 -&amp;gt; ../../sdd1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRREL-part2 -&amp;gt; ../../sdd2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRREL-part9 -&amp;gt; ../../sdd9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRS0J -&amp;gt; ../../sdc
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRS0J-part1 -&amp;gt; ../../sdc1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRS0J-part2 -&amp;gt; ../../sdc2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRS0J-part9 -&amp;gt; ../../sdc9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRV9T -&amp;gt; ../../sdb
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRV9T-part1 -&amp;gt; ../../sdb1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRV9T-part2 -&amp;gt; ../../sdb2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YCRV9T-part9 -&amp;gt; ../../sdb9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 ata-ST1000DX001-1NS162_Z4YE995W -&amp;gt; ../../sda
lrwxrwxrwx 1 root root   9 Dec 12 12:08 wwn-0x5000c50090cca172 -&amp;gt; ../../sdc
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cca172-part1 -&amp;gt; ../../sdc1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cca172-part2 -&amp;gt; ../../sdc2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cca172-part9 -&amp;gt; ../../sdc9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 wwn-0x5000c50090cd24c4 -&amp;gt; ../../sdb
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd24c4-part1 -&amp;gt; ../../sdb1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd24c4-part2 -&amp;gt; ../../sdb2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd24c4-part9 -&amp;gt; ../../sdb9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 wwn-0x5000c50090cd2ff2 -&amp;gt; ../../sdd
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd2ff2-part1 -&amp;gt; ../../sdd1
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd2ff2-part2 -&amp;gt; ../../sdd2
lrwxrwxrwx 1 root root  10 Dec 12 12:08 wwn-0x5000c50090cd2ff2-part9 -&amp;gt; ../../sdd9
lrwxrwxrwx 1 root root   9 Dec 12 12:08 wwn-0x5000c50092c1f5b2 -&amp;gt; ../../sda
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So in our example, the new disk is &lt;code&gt;sda&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;step-two-partitions&#34;&gt;Step two: Partitions&lt;/h1&gt;

&lt;p&gt;We need to get our drive set up with the right partition table. Thankfully this is easy enough because we can just copy this from a healthy drive.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Warning - make sure you have the next command right before running it&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;# Use these variables to make sure you have this the right way around

newDisk=&#39;/dev/sda&#39;

healthyDisk=&#39;/dev/sdb&#39;

sgdisk -R &amp;quot;$newDisk&amp;quot; &amp;quot;$healthyDisk&amp;quot;
sgdisk -G &amp;quot;$newDisk
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;step-three-boot-partition&#34;&gt;Step three: Boot partition&lt;/h1&gt;

&lt;p&gt;In our example, partition one is boot and can be just copied directly from a healthy disk (we will sort out ZFS partition later)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Use these variables to make sure you have this the right way around

newDiskBootPartition=&#39;/dev/sda1&#39;

healthyDiskBootPartition=&#39;/dev/sdb1&#39;

dd if=&amp;quot;$healthyDiskBootPartition&amp;quot; of=&amp;quot;$newDiskBootPartition&amp;quot; bs=512
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;step-four-add-to-zpool&#34;&gt;Step four: Add to zpool&lt;/h1&gt;

&lt;p&gt;Now we are going to add the new disk to the zpool and replace the failed one.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;newDiskZFSPartition=&#39;/dev/sda2`
#Put your failed disk ID here - as reported in `zpool status -v` - eg 14456048953908038050
failedDiskPartitionID=&#39;&#39;

zpool replace rpool &amp;quot;$failedDiskPartitionID&amp;quot; &amp;quot;$newDiskZFSPartition&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That should give you the warning:
&lt;em&gt;Make sure to wait until resilver is done before rebooting.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can keep track of the reslivering process by running &lt;code&gt;zpool status -v&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;eg&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@cluster1 zpool status -v
  pool: rpool
 state: DEGRADED
status: One or more devices is currently being resilvered.  The pool will
    continue to function, possibly in a degraded state.
action: Wait for the resilver to complete.
  scan: resilver in progress since Mon Dec 12 12:14:43 2016
    91.9M scanned out of 1.87T at 7.66M/s, 71h0m to go
    22.6M resilvered, 0.00% done
config:

    NAME                        STATE     READ WRITE CKSUM
    rpool                       DEGRADED     0     0     0
      raidz1-0                  DEGRADED     0     0     0
        sdb2                    ONLINE       0     0     0
        sdc2                    ONLINE       0     0     0
        sdd2                    ONLINE       0     0     0
        replacing-3             UNAVAIL      0     0     0
          14456048953908038050  FAULTED      0     0     0  was /dev/sdd2
          sda2                  ONLINE       0     0     0  (resilvering)

errors: No known data errors

&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note on this, the time to go (eg 71h0m) was wildly pessimistic - actually took around 4 hours&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;step-five-reboot&#34;&gt;Step five: Reboot&lt;/h1&gt;

&lt;p&gt;Once the reslivering process has finished, you can reboot the machine to make sure that everything is back to normal health&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@cluster1 zpool status -v
  pool: rpool
 state: ONLINE
  scan: resilvered 456G in 4h42m with 0 errors on Mon Dec 12 16:57:37 2016
config:

    NAME        STATE     READ WRITE CKSUM
    rpool       ONLINE       0     0     0
      raidz1-0  ONLINE       0     0     0
        sdc2    ONLINE       0     0     0
        sdd2    ONLINE       0     0     0
        sde2    ONLINE       0     0     0
        sdb2    ONLINE       0     0     0

errors: No known data errors
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Magento 2 Vendor Module and App/code Issues</title>
      <link>https://edmondscommerce.github.io/magento-2-vendor-module-and-app/code-issues/</link>
      <pubDate>Tue, 29 Nov 2016 10:31:29 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-2-vendor-module-and-app/code-issues/</guid>
      <description>&lt;p&gt;We recently came across a recurring (and annoying) problem with some of our Magento 2 modules.
The issue was that when ever composer install/update was called the module would be copied to app/code and thus cause class name conflicts with the canonical module in vendor.&lt;/p&gt;

&lt;p&gt;The fix for this was hard to find and it turns out the Magento 2&amp;rsquo;s documentation needs updating.&lt;/p&gt;

&lt;p&gt;To fix the problem, look to your module&amp;rsquo;s &lt;code&gt;composer.json&lt;/code&gt; and find the &lt;code&gt;extra&lt;/code&gt; field.&lt;/p&gt;

&lt;p&gt;If it is present and contains a &lt;code&gt;map&lt;/code&gt; directive like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;

&lt;span class=&#34;s2&#34;&gt;&amp;quot;extra&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;map&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
            &lt;span class=&#34;s2&#34;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;s2&#34;&gt;&amp;quot;VendorName/ModuleName&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then remove it, but ensure that your PSR-4 namespacing is set up correctly.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;s2&#34;&gt;&amp;quot;autoload&amp;quot;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;quot;files&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
            &lt;span class=&#34;s2&#34;&gt;&amp;quot;registration.php&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;quot;psr-4&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nt&#34;&gt;&amp;quot;VendorName\\ModuleName\\&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See the following &lt;a href=&#34;https://github.com/edmondscommerce/magento2-migrations/commit/ba6e5976873d73a817624e35f062d47da0537a99&#34;&gt;commit&lt;/a&gt; and &lt;a href=&#34;https://github.com/edmondscommerce/magento2-migrations/blob/master/composer.json&#34;&gt;composer.json&lt;/a&gt; for a full example&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Admins Black Friday Survival Public Service Announcement</title>
      <link>https://edmondscommerce.github.io/magento-admins-black-friday-survival-public-service-announcement/</link>
      <pubDate>Fri, 25 Nov 2016 11:25:47 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-admins-black-friday-survival-public-service-announcement/</guid>
      <description>

&lt;h1 id=&#34;magento-site-being-flooded-with-buyers-struggling-with-server-load&#34;&gt;Magento Site Being Flooded with Buyers, Struggling with Server Load?&lt;/h1&gt;

&lt;p&gt;If your Magento site is currently being flooded with orders and visitors and the server is struggling to cope then I have one simple and easy to action tip for you:&lt;/p&gt;

&lt;h3 id=&#34;do-as-little-as-possible-in-the-admin&#34;&gt;&lt;em&gt;Do as little as possible in the admin&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Did you know that every time you update product details and other wise change things in the admin then you are likely to cause one or both of the indexes and caches to require a flush?&lt;/p&gt;

&lt;p&gt;In normal operation that is not a big deal, but if your server is being maxed out then you really don&amp;rsquo;t want to force it to stop serving requests and spend precious seconds rebuilding caches and indexes.&lt;/p&gt;

&lt;p&gt;Furthermore, the admin is in itself a heavy beast that your webserver has to do a lot of work to prepare each page load. As a total &lt;em&gt;finger in the air estimate&lt;/em&gt; I&amp;rsquo;d say a single admin page view is worth around &lt;em&gt;10&lt;/em&gt; front end page views. If you are making good use of caching then that could be more like &lt;em&gt;100&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This means that if you want your site to continue working on the front end through Black Friday then I really suggest you restrict admin usage to the minimum.&lt;/p&gt;

&lt;h3 id=&#34;stuck-for-something-to-do&#34;&gt;Stuck for something to do?&lt;/h3&gt;

&lt;p&gt;Why not fire up Google Analytics real time stats, put your feet up and drink tea whilst watching people flood through your checkout process :)&lt;/p&gt;

&lt;h3 id=&#34;commercial-bit&#34;&gt;&lt;em&gt;Commercial Bit:&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Of course, if you are realising that you really could have been better prepared for today&amp;hellip;&lt;/p&gt;

&lt;p&gt;That you are losing sales because your site and server are not performing at their best..&lt;/p&gt;

&lt;p&gt;You are starting to think that you could do with some high quality professional Magento expertise&amp;hellip;&lt;/p&gt;

&lt;p&gt;Then why not get in touch with &lt;a href=&#34;https://www.edmondscommerce.co.uk&#34; target=&#34;_blank&#34;&gt;Edmonds Commerce&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;0044 113 880 5654&lt;/p&gt;

&lt;p&gt;Cheers&lt;/p&gt;

&lt;p&gt;Joseph&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>