<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/post/</link>
    <description>Recent content in Posts on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 May 2017 11:03:35 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introduction to Behat and Behaviour Driven Development</title>
      <link>https://edmondscommerce.github.io/introduction-to-behat-and-behaviour-driven-development/</link>
      <pubDate>Thu, 11 May 2017 11:03:35 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/introduction-to-behat-and-behaviour-driven-development/</guid>
      <description>

&lt;h2 id=&#34;origins-of-bdd-behaviour-driven-development&#34;&gt;Origins of BDD (Behaviour Driven Development)&lt;/h2&gt;

&lt;p&gt;This derives from TDD (Test Driven Development) which is very similar but focuses more on unit tests and smaller parts of the software whereas BDD will be used to work on the bigger processes you might expect to have in the software you are developing. BDD also concentrates on how the software should actually behave.
Before the software is actually built you would first need to define how the end user would actually use the software once it is complete, it could be as simple as working out how a user would log in.&lt;/p&gt;

&lt;h2 id=&#34;3-amigos&#34;&gt;3 Amigos&lt;/h2&gt;

&lt;p&gt;This form of testing makes it so all parties involved in development will be able to communicate a lot more as it makes it easier for everyone involved to understand as they wouldn&amp;rsquo;t need to know PHP etc. which will allow them to work closer together. Whenever software is being designed and created there should be 3 parties involved. This will consist of customer, developer and tester this is also known as the 3 amigos.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Customer &amp;gt; Developer &amp;gt; Tester&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;user-stories&#34;&gt;User stories&lt;/h2&gt;

&lt;p&gt;A user story is defined by wikipedia as &amp;ldquo;an informal, natural language description of one or more features of a software system.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The user stories would need to cover what the software would ultimately need and be expected to do. This is something which a user  would be able to do on their own but usually all the 3 amigos help to offer different views. You will see an example of this further down which we have referred to as &amp;ldquo;feature&amp;rdquo;.&lt;/p&gt;

&lt;h2 id=&#34;gherkin&#34;&gt;Gherkin&lt;/h2&gt;

&lt;p&gt;Before we dive into talking about user stories and scenarios, We should discuss Gherkin which is the language that Behat understands. This language allows you to describe the behaviour of the software you are working with, without having to go into too much detail on how things would be implemented and developed.&lt;/p&gt;

&lt;h2 id=&#34;scenarios&#34;&gt;Scenarios&lt;/h2&gt;

&lt;p&gt;Scenarios are used to define what the software will need to do and how the user/customer will actually use it. This will need to be in quite a bit of depth to cover all bases. An example of this would be how a user/customer would log into the software if it is required.&lt;/p&gt;

&lt;p&gt;Before actually going away and writing your own scenarios we will first need to cover how they would actually be structured and what they should look like.&lt;/p&gt;

&lt;p&gt;Below you will see a template of how you would usually find them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Feature&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;As a [Role]&lt;/span&gt;       
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;I need to [Feature]&lt;/span&gt;
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;In order to [Benefit]&lt;/span&gt;

&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Scenario&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Given [Context]&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;When [Event]&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;And [Additional Event]&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Then [Outcome]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you should have an idea of how scenarios should be structured and what should be included in everyone you create. It is now time to look at how we would write a scenario for a simple log in process which we mentioned earlier.&lt;/p&gt;

&lt;p&gt;Here is a real world example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Feature&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;A user needs to access the system&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;In order to access the system&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;As a user&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;I need to be able to log in&lt;/span&gt; 

&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Scenario&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;The user can log in&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Given I am on the login page&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;When I fill in the following&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt;
         &lt;span class=&#34;p p-Indicator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;err&#34;&gt; UserName  | admin        |	&lt;/span&gt;     
         &lt;span class=&#34;no&#34;&gt;| Password   | password  |&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;And I follow &amp;quot;Log In&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Then I should see &amp;quot;Sign Out&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above example is just one of many different ways you would test your software. The reason we would need to go into such depth is to cover all bases.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What happens if everything is fine I.e login/password&lt;/li&gt;
&lt;li&gt;What happens if email is incorrect? Will they be prompted with a forgot password icon or any form of indication it is incorrect?&lt;/li&gt;
&lt;li&gt;The ability to create an account if one is needed&lt;/li&gt;
&lt;li&gt;What happens after 3 failed login attempts i.e captcha/ lock out?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By adding in the above you will cover a lot more of the issues a user might face when attempting to log in. This will have a positive impact on the software as this will decrease the amount of issues you could face.&lt;/p&gt;

&lt;h2 id=&#34;acceptance-testing-your-project-with-behat-mink-and-selenium&#34;&gt;Acceptance testing your project with Behat, Mink and Selenium&lt;/h2&gt;

&lt;h3 id=&#34;what-is-acceptance-testing&#34;&gt;What is acceptance testing?&lt;/h3&gt;

&lt;p&gt;According to Wikipedia, acceptance testing is a test, conducted to determine if requirements of specification are met. This type of testing comes along with another abbreviation seen in programming called BDD (Behaviour Driven Development).&lt;/p&gt;

&lt;h3 id=&#34;what-is-mink&#34;&gt;What is Mink?&lt;/h3&gt;

&lt;p&gt;Mink is a library which unifies different browser emulators and removes API differences between those emulators. It provides us of easy ways to control the browser, traverse pages, manipulate page elements or interact with them.&lt;/p&gt;

&lt;h3 id=&#34;what-is-selenium&#34;&gt;What is Selenium?&lt;/h3&gt;

&lt;p&gt;Selenium helps in automation of browsers, primarily for testing purposes. Selenium has the support of some of the largest browser vendors, who also making Selenium the native part of their browser.&lt;/p&gt;

&lt;h2 id=&#34;edmonds-commerce-behat-framework&#34;&gt;Edmonds Commerce Behat Framework&lt;/h2&gt;

&lt;p&gt;Developers in Edmonds Commerce have been fans of Behat since February 15th, 2015. This was the first time Edmonds deployed and shared with the world Behat context class for filling form fields with data from Faker class which generates random fake data. Since that time Edmonds Commerce as of today holds 12 context classes for various acceptance testing steps. 4 of the classes are specific to Magento, Magento 2, Prestashop and Prototype JS, rest of the classes can be applied to any project.&lt;/p&gt;

&lt;h3 id=&#34;what-is-feature-context&#34;&gt;What is Feature Context?&lt;/h3&gt;

&lt;p&gt;According to Behat documentation Feature Context class is plain simple PHP object used by Behat to represent how your application should be tested and that it behaves the way you want. So firstly you write your scenarios, followed by implementation of steps (which is parsed by Behat using annotations) in your Feature Class to test against expected behaviour.&lt;/p&gt;

&lt;p&gt;Let’s give you a brief look of general context classes created by Edmonds Commerce.&lt;/p&gt;

&lt;h3 id=&#34;behat-mouse-context&#34;&gt;Behat-mouse-context&lt;/h3&gt;

&lt;p&gt;This context class gives aids us when testing events triggered by mouse. Such as hovering, right clicking, double clicking elements on the page. Actual code can be cloned from &lt;a href=&#34;https://github.com/edmondscommerce/behat-mouse-context&#34; target=&#34;_blank&#34;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;behat-javascript-context&#34;&gt;Behat-javascript-context&lt;/h3&gt;

&lt;p&gt;This context class gives us a chance to test against popup windows, alert boxes, ajax calls etc&amp;hellip;
Actual code can be cloned from &lt;a href=&#34;https://github.com/edmondscommerce/behat-javascript-context&#34; target=&#34;_blank&#34;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;behat-html-context&#34;&gt;Behat-html-context&lt;/h3&gt;

&lt;p&gt;This context class implements various HTML manipulation steps. Actual code can be cloned from &lt;a href=&#34;https://github.com/edmondscommerce/behat-html-context&#34; target=&#34;_blank&#34;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;behat-faker-context&#34;&gt;Behat-faker-context&lt;/h3&gt;

&lt;p&gt;This context class enables us to automate finding of HTML form element in the page and filling it with fake data. Actual code can be cloned from &lt;a href=&#34;https://github.com/edmondscommerce/behat-faker-context&#34; target=&#34;_blank&#34;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;behat-error-handling-context&#34;&gt;Behat-error-handling-context&lt;/h3&gt;

&lt;p&gt;This context class allows us to handle simple errors and take screenshots when they occur. Actual code can be cloned from &lt;a href=&#34;https://github.com/edmondscommerce/behat-error-handling-context&#34; target=&#34;_blank&#34;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;behat-chrome-performance-context&#34;&gt;Behat-chrome-performance-context&lt;/h3&gt;

&lt;p&gt;This context class allows us to monitor chrome performance, check for broken links and check total size of downloaded files per request. The actual code can be cloned from &lt;a href=&#34;https://github.com/edmondscommerce/behat-chrome-performance-context&#34; target=&#34;_blank&#34;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;behat-error-detection-context&#34;&gt;Behat-error-detection-context&lt;/h3&gt;

&lt;p&gt;This context class allows you to detect errors from the web browser including PHP exception messages. The actual code can be cloned from &lt;a href=&#34;https://github.com/edmondscommerce/behat-error-detection-context&#34; target=&#34;_blank&#34;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;behat-screenshot-context&#34;&gt;Behat-screenshot-context&lt;/h3&gt;

&lt;p&gt;This context class allows you to take screenshot when triggering the &amp;ldquo;I take screenshot&amp;rdquo; step. The actual code can be cloned from &lt;a href=&#34;https://github.com/edmondscommerce/behat-screenshot-context&#34; target=&#34;_blank&#34;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;

&lt;p&gt;These tools like Behat, Mink, Selenium mirrors Cross-functional team paradigm. Separately these tools, doesn’t have many powers. However when they are combined together they can be called “Acceptance testing on steroids”.&lt;/p&gt;

&lt;p&gt;Behat is fun to work with and enables things to be tested properly with a chance to read and understand scenarios even for non-technical person, as it is basically simple english sentences.&lt;/p&gt;

&lt;p&gt;And for developers, we hate repetition, therefore we can write reusable context classes which can be shared with the world!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento Module Version Checker</title>
      <link>https://edmondscommerce.github.io/magento-module-version-checker/</link>
      <pubDate>Thu, 11 May 2017 07:43:39 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-module-version-checker/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/edmondscommerce/magento-module-version-checker&#34; target=&#34;_blank&#34;&gt;Magento Module Version Checker&lt;/a&gt;
(mmv) is a simple script to check
&lt;a href=&#34;https://www.magentocommerce.com/magento-connect/&#34; target=&#34;_blank&#34;&gt;Magento Connect&lt;/a&gt;
(or other custom sources) for the latest version of a module.&lt;/p&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;p&gt;Install via composer&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;git clone git@github.com:edmondscommerce/magento-module-version-checker.git
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; magento-module-version-checker
composer install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;You need to configure the modules you wish to check and the page from which
to get the modules version. You do this in a &lt;code&gt;json&lt;/code&gt; file with the following
format:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;https://www.magentocommerce.com/magento-connect/&amp;lt;module&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;&amp;lt;Module_Name&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;quot;https://www.magentocommerce.com/magento-connect/aoe-scheduler.html&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;quot;Aoe_Scheduler&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;

    &lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;running&#34;&gt;Running&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;./mmv &amp;lt;path/to/config.json&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;custom-sources&#34;&gt;Custom Sources&lt;/h3&gt;

&lt;p&gt;In order to add a custom source you need implement a &lt;code&gt;Module&lt;/code&gt; class and add the class to the &lt;code&gt;ModuleFactory&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;implementing-module&#34;&gt;Implementing Module&lt;/h4&gt;

&lt;p&gt;I&amp;rsquo;ve created a template &lt;code&gt;Module&lt;/code&gt; class for you to base yours on &lt;a href=&#34;https://github.com/edmondscommerce/magento-module-version-checker/blob/master/src/Module.php.template&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You simply need to make the following changes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;EdmondsCommerce\MagentoModuleVersions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;YourSource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Module&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AbstractModule&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// Here you need to add a css selector to grab the&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// version data from the page.&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;cleanVersionNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$versionNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// Here you need to add some clean up code that takes the&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// selected version and strips out only the version number.&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$versionNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see an example of this
&lt;a href=&#34;https://github.com/edmondscommerce/magento-module-version-checker/blob/master/src/MagentoConnectModule.php&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;adding-module-to-module-factory&#34;&gt;Adding Module to Module Factory&lt;/h4&gt;

&lt;p&gt;Once you&amp;rsquo;ve implemented a &lt;code&gt;Module&lt;/code&gt; class you need to add it to the
&lt;a href=&#34;https://github.com/edmondscommerce/magento-module-version-checker/blob/master/src/ModuleFactory.php&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;ModuleFactory&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ModuleFactory&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;www.magentocommerce.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;MagentoConnectModule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;www.your-modules-domain.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;YourSource&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$dom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;Invalid host &amp;#39;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;$host&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once that&amp;rsquo;s done you should be able to add your new modules to the config &lt;code&gt;json&lt;/code&gt; and run the script.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Exploring Streets Of York and Participation in First Ever PHP Yorkshire conference</title>
      <link>https://edmondscommerce.github.io/exploring-streets-of-york-and-participation-in-first-ever-php-yorkshire-conference/</link>
      <pubDate>Mon, 10 Apr 2017 17:17:06 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/exploring-streets-of-york-and-participation-in-first-ever-php-yorkshire-conference/</guid>
      <description>

&lt;p&gt;When something unbelievable happens, people tend to say “you were in the right place at the right time” that’s why you’re lucky. That is how I feel what happened to me here at Edmonds Commerce Ltd.&lt;/p&gt;

&lt;p&gt;Within first few weeks since I started working on Magento projects here at Edmonds. Nolwenn came to me with a question. “Hey Tadas, development team is going to this conference ‘PHP Yorkshire’, they don’t know what to expect, but it will be fun, will you join them?”&lt;/p&gt;

&lt;p&gt;And then in my head I am like “Wow, my first weeks and I got this promising opportunity to spend the weekend knowing my colleagues better and listen to these passionate people who loves PHP”. Who could decline such offer? So off we go.&lt;/p&gt;

&lt;p&gt;Sunny Friday evening, we are all set and heading to the city of York, which distanced just a bit more than hour from our office in Shipley. Few rounds of everyone&amp;rsquo;s preferred music requests and here we are, passing the door to explore York after we have left our belongings in the place we stayed overnight.&lt;/p&gt;

&lt;h2 id=&#34;the-night-in-york-or-how-to-know-the-city-centre-within-3-pubs&#34;&gt;The night in York or how to know the city centre within 3 pubs&lt;/h2&gt;

&lt;p&gt;I am not into architecture, but York looked very appealing to me and it was my first time visiting it, definitely not last. I didn’t see any building there which would look out of sync. And the buzz of people on the Friday night was more on the calm side, just the way I like. But let’s move onto the fun stuff. So our first stop was just meters away from the place we stayed where we order some beer and appreciated the moment and the beginning of night.&lt;/p&gt;

&lt;p&gt;Then another bar/pub and another. Everyone know how it goes, don’t we? The heading of this part might be too cheesy, you definitely can’t cover all the beauty of York within the distance of 3 pubs, but yeah&amp;hellip; York is great and the beer is great too!&lt;/p&gt;

&lt;h2 id=&#34;the-big-day&#34;&gt;The Big Day&lt;/h2&gt;

&lt;p&gt;So here we are, little bit tired from the night before, but we stood tall in the morning, ready to enjoy our day. I was amazed to be honest, that we were just right on time to begin our conference in the University of York.&lt;/p&gt;

&lt;p&gt;So what was this all conference about? 1 day, 2 tracks, 13 experts. So after all, everyone was satisfied with how it ended.&lt;/p&gt;

&lt;p&gt;To be honest I enjoyed all of the talks I have participated in but the most memorable to me was about HTML5 API’s, naming things and object calisthenics.&lt;/p&gt;

&lt;p&gt;While my colleagues loved the speeches on GIT internals, handling errors gracefully, and they got answered what MySQL 8 is all about and why it is 8 and not any other number and Joseph have even won a MySQL dolphin.&lt;/p&gt;

&lt;p&gt;All in all, the weekend was enjoyable, I am glad I had a chance to be there, know my colleagues better and just be inspired by the talks and the community of PHP.&lt;/p&gt;

&lt;p&gt;- Tadas&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Magento 1 Php7 Core Bug and Fix</title>
      <link>https://edmondscommerce.github.io/magento-1-php7-core-bug-and-fix/</link>
      <pubDate>Thu, 23 Mar 2017 12:23:44 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/magento-1-php7-core-bug-and-fix/</guid>
      <description>&lt;p&gt;We recently came across an issue with a client that had previously upgraded to PHP7 from PHP5.x for their Magento 1 CE store.
The issue came to light when the client tried to create a new store in the admin and found that their store name was left blank when they hit the save button.&lt;/p&gt;

&lt;p&gt;No errors were displayed as the site was in production mode and the logs did not give any useful information.
After looking in to this locally with developer mode I found that a core Magento class was still using deprecated code even after using a PHP7 compatibility module.&lt;/p&gt;

&lt;p&gt;Unfortunately there are only two ways of fixing the issue discovered, the first and correct option is to update Magento as the bug is present in all versions of Magento prior to Magento 1.9.1.0,
there does not seem to be any patches that resolve the issue officially.&lt;/p&gt;

&lt;p&gt;The second faster (and possibly safer depending on how big your site is) is to directly edit the core file (!!).&lt;/p&gt;

&lt;p&gt;As all developers know, editing the core is taboo but in this case we are looking at bringing code from a later version of Magento that has fixed the issue.&lt;/p&gt;

&lt;p&gt;The issue boils down to the use of the &lt;code&gt;preg_replace&lt;/code&gt; function with the &lt;code&gt;e&lt;/code&gt; modifier, the code is used across the entire installation when calling the &lt;code&gt;removeTags&lt;/code&gt; method on any helper that extends from &lt;code&gt;Mage_Core_Helper_Abstract&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To fix the issue without doing a Magento upgrade, replace the &lt;code&gt;removeTags()&lt;/code&gt; method with the updated version&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    public function removeTags($html)
    {
        $html = preg_replace_callback(
            &amp;quot;# &amp;lt;(?![/a-z]) | (?&amp;lt;=\s)&amp;gt;(?![a-z]) #xi&amp;quot;,
            function ($matches) {
                return htmlentities($matches[0]);
            },
            $html
        );
        $html =  strip_tags($html);
        return htmlspecialchars_decode($html);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Always be sure to test your changes before deploying to production, it is also recommended you comment your edit loudly so the change is not overlooked.
E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;############### Edit Made #################
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Phpstorm Paste Without Escaping</title>
      <link>https://edmondscommerce.github.io/phpstorm-paste-without-escaping/</link>
      <pubDate>Mon, 20 Mar 2017 14:42:04 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm-paste-without-escaping/</guid>
      <description>&lt;p&gt;One really &lt;del&gt;great&lt;/del&gt; annoying feature of PHPStorm is that by default, when copying and pasting a chunk of code, it will automatically escape everything.&lt;/p&gt;

&lt;p&gt;There are certain times when this can be a time saver, but often it is just getting in the way.&lt;/p&gt;

&lt;p&gt;There is a solution though:&lt;/p&gt;

&lt;p&gt;Simply enough - instead of just hitting [ctrl]+[v] you have a right click menu option for &amp;ldquo;simple paste&amp;rdquo; and this will just paste the text as is, without any escaping&lt;/p&gt;

&lt;p&gt;yay!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with your own Magento 2 Theme</title>
      <link>https://edmondscommerce.github.io/getting-started-with-your-own-magento-2-theme/</link>
      <pubDate>Fri, 03 Mar 2017 11:41:55 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/getting-started-with-your-own-magento-2-theme/</guid>
      <description>

&lt;h1 id=&#34;prerequisites-and-assumptions&#34;&gt;Prerequisites and Assumptions&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Magento 2.1 installation. &lt;a href=&#34;https://edmondscommerce.github.io/magento-2-quick-start-and-common-gotchas/&#34; target=&#34;_blank&#34;&gt;See our tutorial here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Basing from Luma theme&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;relevant-technologies&#34;&gt;Relevant Technologies&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://lesscss.org/&#34; target=&#34;_blank&#34;&gt;Less CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/php/default.asp&#34; target=&#34;_blank&#34;&gt;PHP/PHTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/xml/default.asp&#34; target=&#34;_blank&#34;&gt;XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/html/default.asp&#34; target=&#34;_blank&#34;&gt;HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/js/default.asp&#34; target=&#34;_blank&#34;&gt;Javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;relevant-magento-2-concepts&#34;&gt;Relevant Magento 2 Concepts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#layout&#34;&gt;Layout XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://edmondscommerce.github.io/introducing-ui-components/&#34;&gt;UI Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;on-this-page&#34;&gt;On this page&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;New Themeing Concepts in Magento 2

&lt;ul&gt;
&lt;li&gt;Module-specific theme files&lt;/li&gt;
&lt;li&gt;Themes&lt;/li&gt;
&lt;li&gt;Static content&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Creating the theme structure

&lt;ul&gt;
&lt;li&gt;Folders&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Configuration

&lt;ul&gt;
&lt;li&gt;registration.php&lt;/li&gt;
&lt;li&gt;theme.xml&lt;/li&gt;
&lt;li&gt;Applying your theme&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Theme Files

&lt;ul&gt;
&lt;li&gt;Templates&lt;/li&gt;
&lt;li&gt;Layout&lt;/li&gt;
&lt;li&gt;Static content (CSS/Images/JS)&lt;/li&gt;
&lt;li&gt;Overriding modules’ view files&lt;/li&gt;
&lt;li&gt;Common Snippets&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Admin Configuration&lt;/li&gt;
&lt;li&gt;Deployment&lt;/li&gt;
&lt;li&gt;Further Reading&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;new-themeing-concepts-in-magento-2&#34;&gt;New Themeing Concepts in Magento 2&lt;/h1&gt;

&lt;h2 id=&#34;module-specific-theme-files&#34;&gt;Module-specific theme files&lt;/h2&gt;

&lt;p&gt;In Magento 2 there is no longer a &amp;ldquo;base&amp;rdquo; package or &amp;ldquo;default&amp;rdquo; theme. Now, modules contain their own files within their &lt;em&gt;view/(area)/(layout|template|web)&lt;/em&gt; folders.&lt;/p&gt;

&lt;p&gt;Here are a few examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/tree/develop/app/code/Magento/Captcha/view/frontend&#34; target=&#34;_blank&#34;&gt;Magento 2&amp;rsquo;s Captcha Module&amp;rsquo;s theme files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Magestore/Bannerslider-Magento2/tree/master/view/frontend&#34; target=&#34;_blank&#34;&gt;A 3rd party module&amp;rsquo;s theme files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;

&lt;p&gt;Themes are a new standalone concept in Magento 2. These themes exist to create their own template, layout, CSS files as a self contained package.&lt;/p&gt;

&lt;p&gt;Themes can also specify their own overrides to modules&amp;rsquo; theme files, rather than relying purely on file path matching.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/webgriffe/theme-bootstrap/&#34; target=&#34;_blank&#34;&gt;A standalone theme rooted in &lt;em&gt;app/design/frontend&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;static-content&#34;&gt;Static content&lt;/h2&gt;

&lt;p&gt;Static resources such as CSS, images and JS files are no longer served from the theme folder itself. Instead they&amp;rsquo;re &lt;a href=&#34;static-content-css-images-js&#34; target=&#34;_blank&#34;&gt;published&lt;/a&gt; to the &lt;em&gt;pub&lt;/em&gt; folder using either symlinks or copies.&lt;/p&gt;

&lt;h1 id=&#34;creating-the-theme-structure&#34;&gt;Creating the theme structure&lt;/h1&gt;

&lt;h2 id=&#34;folders&#34;&gt;Folders&lt;/h2&gt;

&lt;p&gt;The first step is to create a new namespaced folder path in app/design/frontend/. This would look like &lt;em&gt;app/design/frontend/(Vendor_Name)/(ThemeName)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;magento-2-theme-skeleton-folders&#34;&gt;Magento 2 theme skeleton folders&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;app/design/frontend/(Vendor_Name)/(ThemeName)

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;(Module_Name)/&lt;/strong&gt; sets the theme&amp;rsquo;s templates and layout for each module, such as &lt;em&gt;Magento_Catalog&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Magento_Theme/&lt;/strong&gt; for module-agnostic templates and layout

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;layout/&lt;/strong&gt; for layout XML files&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;template/&lt;/strong&gt; for PHTML template files&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;media/&lt;/strong&gt; contains a preview file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;web/&lt;/strong&gt; contains static content for delivering to the browser

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;css/&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;source/&lt;/strong&gt; - less files&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;images/&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;js/&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;registration.php&lt;/strong&gt; registers the theme&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;theme.xml&lt;/strong&gt; contains data about the theme such as the name and parent theme&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;configuration&#34;&gt;Configuration&lt;/h1&gt;

&lt;h2 id=&#34;registration-php&#34;&gt;registration.php&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
\Magento\Framework\Component\ComponentRegistrar::register(
    \Magento\Framework\Component\ComponentRegistrar::THEME,
    &#39;frontend/EdmondsCommerce/ThemeTutorial&#39;,
    __DIR__
);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;theme-xml&#34;&gt;theme.xml&lt;/h2&gt;

&lt;p&gt;This file specifies information about the theme, as used in Magento&amp;rsquo;s admin&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;theme xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:noNamespaceSchemaLocation=&amp;quot;urn:magento:framework:Config/etc/theme.xsd&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Edmonds Commerce Theme Tutorial&amp;lt;/title&amp;gt;
    &amp;lt;parent&amp;gt;Magento/luma&amp;lt;/parent&amp;gt;
    &amp;lt;media&amp;gt;
        &amp;lt;preview_image&amp;gt;media/preview.jpg&amp;lt;/preview_image&amp;gt;
    &amp;lt;/media&amp;gt;
&amp;lt;/theme&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;applying-your-theme&#34;&gt;Applying your theme&lt;/h2&gt;

&lt;p&gt;To apply a theme to your store, navigate to the Magento Admin&amp;rsquo;s Design Configuration page:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Log into the Magento Admin&lt;/li&gt;
&lt;li&gt;Click Content, and then under Design click Configuration&lt;/li&gt;
&lt;li&gt;Choose your website/store/store view level, and click Edit&lt;/li&gt;
&lt;li&gt;Set your Applied Theme&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;theme-files&#34;&gt;Theme Files&lt;/h1&gt;

&lt;h2 id=&#34;templates&#34;&gt;Templates&lt;/h2&gt;

&lt;p&gt;Templates are the way to generate frontend HTML content with dynamically generated content.&lt;/p&gt;

&lt;p&gt;Magento allows for the ability to add new template engines to take advantage of other templating languages (such as twig) but only comes with PHP and XHTML renderers out of the box.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Bonus fact: the Template Hints are rendered using one of these Template Renderers in &lt;a href=&#34;https://github.com/magento/magento2/blob/develop/app/code/Magento/Developer/Model/TemplateEngine/Decorator/DebugHints.php&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;Magento\Developer\Model\TemplateEngine\Decorator\DebugHints&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;folders-1&#34;&gt;Folders&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A module&amp;rsquo;s template files are contained in its &lt;em&gt;view/(area)/templates&lt;/em&gt; folder&lt;/li&gt;
&lt;li&gt;A theme&amp;rsquo;s template files are contained in its &lt;em&gt;Magento_Theme/templates&lt;/em&gt; folder&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;phtml-overview&#34;&gt;PHTML Overview&lt;/h3&gt;

&lt;p&gt;Standard Magento templates are written as PHTML files. This involves a mixture of PHP and HTML, all with a focus on presenting the view-level content. This means business logic should be contained in the &lt;a href=&#34;#blocks&#34;&gt;Block class&lt;/a&gt; and called using its public methods (more on &lt;a href=&#34;#accessing-block-methods&#34;&gt;accessing block methods&lt;/a&gt; below)&lt;/p&gt;

&lt;p&gt;PHTML files look like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;lt;?php echo $url ?&amp;gt;&amp;quot;&amp;gt;
    &amp;lt;?php echo $text ?&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PHTML files use &lt;a href=&#34;http://php.net/manual/en/control-structures.alternative-syntax.php&#34; target=&#34;_blank&#34;&gt;PHP&amp;rsquo;s alternative syntax&lt;/a&gt; for &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; etc control structures:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php foreach($array as $item): ?&amp;gt;
    &amp;lt;span&amp;gt;&amp;lt;?php echo $item ?&amp;gt;
&amp;lt;?php endforeach; ?&amp;gt;

&amp;lt;?php if($test == &amp;quot;test&amp;quot;): ?&amp;gt;
    &amp;lt;span&amp;gt;&amp;lt;?php echo $test ?&amp;gt;
&amp;lt;?php endif; ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;accessing-block-methods&#34;&gt;Accessing block methods&lt;/h3&gt;

&lt;p&gt;As part of the rendering process, Magento makes available a &lt;code&gt;$block&lt;/code&gt; variable which represents an object instatiation of the &lt;a href=&#34;#blocks&#34;&gt;Block class&lt;/a&gt;. As with any other PHP object, you can call its public methods from within the template.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is a change from Magento 1, where the template was included within the class, and therefore had access to its protected and private methods.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;rendering-child-blocks&#34;&gt;Rendering child blocks&lt;/h3&gt;

&lt;p&gt;Inserting child blocks is pretty much the same as Magento 1:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php echo $block-&amp;gt;getChildHtml(&#39;block.name&#39;); ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;translations-and-escaping&#34;&gt;Translations and Escaping&lt;/h3&gt;

&lt;p&gt;Translations can be implemented using the &lt;code&gt;__()&lt;/code&gt; method. Note that this is not a method call on an object:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span&amp;gt;&amp;lt;?php echo __(&#39;Learn More&#39;) ?&amp;gt;&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Magento\Framework\View\ElementAbstractBlock&lt;/code&gt; provides public &lt;code&gt;stripTags()&lt;/code&gt; and &lt;code&gt;escapeHtml()&lt;/code&gt; methods. These strip a string of HTML entities and tags respectively.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&amp;lt;?php echo $block-&amp;gt;stripTags($_product-&amp;gt;getName(), null, true); ?&amp;gt;&amp;lt;/h2&amp;gt; &amp;lt;!-- the parameters null and true are for string $allowableTags and bool $allowHtmlEntities --&amp;gt;
&amp;lt;span title=&amp;quot;&amp;lt;?php echo $block-&amp;gt;escapeHtml(__(&#39;More Info&#39;)); ?&amp;gt;&amp;quot;&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/templates/template-overview.html&#34; target=&#34;_blank&#34;&gt;Magento DevDocs on Templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;layout&#34;&gt;Layout&lt;/h2&gt;

&lt;p&gt;In Magento 2, layout XML works a little differently. The most obvious difference is that each layout handle is its own XML file, so your theme&amp;rsquo;s layout folder might look like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Magento_Theme/

&lt;ul&gt;
&lt;li&gt;layout/

&lt;ul&gt;
&lt;li&gt;catalog_product_view.xml&lt;/li&gt;
&lt;li&gt;cms_index_index.xml&lt;/li&gt;
&lt;li&gt;default.xml &lt;em&gt;applies to all pages&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;xml-instructions&#34;&gt;XML Instructions&lt;/h3&gt;

&lt;p&gt;Layout XML in Magento 2 seperates its instructions into four groups:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;update&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All but the last one correspond to the HTML elements that contain them. &lt;code&gt;&amp;lt;update&amp;gt;&lt;/code&gt; is simply a way to include another handle&amp;rsquo;s instructions into the current file.&lt;/p&gt;

&lt;p&gt;Magento 2 has a few instructions in Layout XML. Some will be familiar from Magento 1, others are new.&lt;/p&gt;

&lt;h4 id=&#34;head-layout-instructions&#34;&gt;Head Layout Instructions&lt;/h4&gt;

&lt;h5 id=&#34;title&#34;&gt;Title&lt;/h5&gt;

&lt;p&gt;Sets the page&amp;rsquo;s title, as used in the window title bar and tab&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;Page Title&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;css-script-link&#34;&gt;CSS/Script/Link&lt;/h5&gt;

&lt;p&gt;Adds CSS and Javascript resources to the page. The &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag allows for both IE-conditional comments, and to defer loadinf the script until the page has loaded&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;css src=&amp;quot;Namespace_Module::css/style.css&amp;quot; /&amp;gt;

&amp;lt;script src=&amp;quot;Namespace_Module::js/script.js&amp;quot; /&amp;gt;

&amp;lt;link src=&amp;quot;Namespace_Module::js/script.css&amp;quot; ie_condition=&amp;quot;IE 9&amp;quot; defer=&amp;quot;defer&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;meta&#34;&gt;Meta&lt;/h5&gt;

&lt;p&gt;Normal meta tags for the page, with key/value pairs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;content-type&amp;quot; content=&amp;quot;text/html; charset=utf-8&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;body-layout-instructions&#34;&gt;Body Layout Instructions&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/layouts/xml-instructions.html&#34; target=&#34;_blank&#34;&gt;Full documentation on body layout instructions&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;containers&#34;&gt;Containers&lt;/h5&gt;

&lt;p&gt;Containers are a new concept in Magento 2. Containers are intended to represent a part of a page, rather than a block of content. They&amp;rsquo;re not backed by a PHP Class, and can only create an HTML element.&lt;/p&gt;

&lt;p&gt;Attributes can be assigned to the containers, and they can be sorted within their parents.&lt;/p&gt;

&lt;p&gt;Examples of standard containers are the header, footer, left, right and content areas.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;container name=&amp;quot;container.name&amp;quot; htmlTag=&amp;quot;div&amp;quot; htmlClass=&amp;quot;class&amp;quot; after=&amp;quot;-&amp;quot;&amp;gt;&amp;lt;/container&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;blocks&#34;&gt;Blocks&lt;/h5&gt;

&lt;p&gt;Blocks are used to add content to the page, and are backed by a PHP Block class. &lt;a href=&#34;#more-on-blocks&#34;&gt;More on Blocks&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;block class=&amp;quot;Namespaced\Path\To\Block\Class&amp;quot; name=&amp;quot;top.container.welcome&amp;quot;&amp;gt;&amp;lt;/block&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;move&#34;&gt;Move&lt;/h5&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;move&amp;gt;&lt;/code&gt; instruction allows for a block to be moved from one block or container to another.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;move element=&amp;quot;old.name&amp;quot; as=&amp;quot;new.name&amp;quot; destination=&amp;quot;destination.block.name&amp;quot; before=&amp;quot;-&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;referencecontainer-referenceblock&#34;&gt;ReferenceContainer/ReferenceBlock&lt;/h5&gt;

&lt;p&gt;This allows for more content to be added into a block or container&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;referenceContainer name=&amp;quot;footer&amp;quot;&amp;gt;&amp;lt;/referenceContainer&amp;gt;

&amp;lt;referenceBlock name=&amp;quot;header&amp;quot;&amp;gt;&amp;lt;/referenceBlock&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;more-on-blocks&#34;&gt;More on Blocks&lt;/h3&gt;

&lt;h4 id=&#34;block-types&#34;&gt;Block Types&lt;/h4&gt;

&lt;p&gt;There are many types of predefined Block in Magento 2, all contained within &lt;code&gt;Magento\Framework\View\Element&lt;/code&gt; namespace.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Text&lt;/strong&gt; is used for displaying simple text on the page. Good for debugging your layout XML&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Text\ListText&lt;/strong&gt; is extended from Text, this is used to contain a sorted list of other blocks. Blocks added as children to this are automatically rendered&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Messages&lt;/strong&gt; are their own block type in Magento 2. These represent the &amp;ldquo;success&amp;rdquo;, &amp;ldquo;error&amp;rdquo; etc banners&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Redirect&lt;/strong&gt; perform a client-side redirect, if ever that&amp;rsquo;s desirable&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Template&lt;/strong&gt; for loading a block with an included template. The template is set with &lt;code&gt;&amp;lt;block ... template=&amp;quot;Module_Name::path/to/template.phtml&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;block-methods&#34;&gt;Block methods&lt;/h4&gt;

&lt;p&gt;Parameters can be called on Blocks&amp;rsquo; constructors, as well as their class methods.&lt;/p&gt;

&lt;p&gt;To set constructor parameter values, &lt;code&gt;argument&lt;/code&gt;s can be added thusly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;arguments&amp;gt;
    &amp;lt;argument name=&amp;quot;logo_img_width&amp;quot; xsi:type=&amp;quot;number&amp;quot;&amp;gt;220&amp;lt;/argument&amp;gt;
    &amp;lt;argument name=&amp;quot;logo_img_height&amp;quot; xsi:type=&amp;quot;number&amp;quot;&amp;gt;70&amp;lt;/argument&amp;gt;
&amp;lt;/arguments&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And class methods by specifying an &lt;code&gt;action&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;action method=&amp;quot;methodName&amp;quot;&amp;gt;
    &amp;lt;argument name=&amp;quot;methodArgumentName&amp;quot; xsi:type=&amp;quot;text&amp;quot;&amp;gt;value&amp;lt;/argument&amp;gt;
    &amp;lt;argument name=&amp;quot;methodArgumentArray&amp;quot; xsi:type=&amp;quot;array&amp;quot;&amp;gt;
        &amp;lt;item name=&amp;quot;array_key&amp;quot; xsi:type=&amp;quot;number&amp;quot;&amp;gt;1337&amp;lt;item&amp;gt;
    &amp;lt;/argument&amp;gt;
&amp;lt;/action&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;static-content-css-images-js&#34;&gt;Static content (CSS/Images/JS)&lt;/h2&gt;

&lt;p&gt;These files are stored in the theme&amp;rsquo;s &lt;em&gt;web&lt;/em&gt; subfolder, under their own &lt;em&gt;css&lt;/em&gt;, &lt;em&gt;js&lt;/em&gt; and &lt;em&gt;images&lt;/em&gt; subfolders.&lt;/p&gt;

&lt;p&gt;In Developer mode these files are read through symlinks created inside the pub folder. In production though they&amp;rsquo;re published to the &lt;em&gt;pub&lt;/em&gt; folder using the &lt;code&gt;bin/magento setup:static-content:deploy&lt;/code&gt; command.&lt;/p&gt;

&lt;h3 id=&#34;images-and-css&#34;&gt;Images and CSS&lt;/h3&gt;

&lt;p&gt;A theme&amp;rsquo;s images and CSS files are stored in the &lt;em&gt;web/images&lt;/em&gt; and &lt;em&gt;web/css&lt;/em&gt; folders respectively.&lt;/p&gt;

&lt;h3 id=&#34;less&#34;&gt;LESS&lt;/h3&gt;

&lt;p&gt;Magento 2 natively supports using CSS preprocessors, and uses Less CSS for its own Luna theme.&lt;/p&gt;

&lt;h4 id=&#34;storing-less-files&#34;&gt;Storing Less files&lt;/h4&gt;

&lt;p&gt;Less files are contained within a modules web/css/source/ folder, with a naming convention that base files are named as &lt;code&gt;file.less&lt;/code&gt; and files to be imported are named with an underscore prefix as &lt;code&gt;_file.less&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;importing-other-less-files&#34;&gt;Importing other less files&lt;/h4&gt;

&lt;p&gt;Because normal Less &lt;code&gt;@import&lt;/code&gt; directives use paths relative to the include path, they&amp;rsquo;re not aware of Magento&amp;rsquo;s fallback system. For this reason, other .less files should be included with &lt;code&gt;//@magento_import file.less&lt;/code&gt; - yes, with the &lt;code&gt;//&lt;/code&gt; comment. This means the Less compiler will ignore it, allowing Magento to handle the fallback in its round of compilation.&lt;/p&gt;

&lt;h4 id=&#34;referencing-images&#34;&gt;Referencing images&lt;/h4&gt;

&lt;p&gt;Image URLs are relative to the &lt;em&gt;web/css&lt;/em&gt; folder, so image paths should be &lt;code&gt;url(&#39;../images/path/to/image.jpg&#39;)&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;compiling-your-less&#34;&gt;Compiling your Less&lt;/h4&gt;

&lt;p&gt;There are two ways to compile your less files:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using &lt;code&gt;grunt&lt;/code&gt; commands:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grunt exec&lt;/code&gt; sets up symlinks from the files in pub/static to your module/theme&amp;rsquo;s files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grunt less&lt;/code&gt; compiles your less to CSS, and then sets up the symlinks to those&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grunt watch&lt;/code&gt; runs a file watcher to track changes to the less files, and compiles the CSS on the fly&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;bin/magento setup:static-content:deploy&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Usually used in production&lt;/li&gt;
&lt;li&gt;Copies the files themselves into the pub folder&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;variables&#34;&gt;Variables&lt;/h4&gt;

&lt;p&gt;Magento provides &lt;a href=&#34;https://github.com/magento/magento2/tree/2.1/lib/web/css/source/lib/variables&#34; target=&#34;_blank&#34;&gt;a set of helpful variables&lt;/a&gt; for use in the Less files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/lib/web/css/source/lib/variables/_responsive.less&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;@screen__*&lt;/code&gt;&lt;/a&gt; variables for use in &lt;code&gt;@media&lt;/code&gt; queries&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/lib/web/css/source/lib/variables/_icons.less#L43&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;@icon-*&lt;/code&gt;&lt;/a&gt;` variables for a limited set of icons&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magento/magento2/blob/2.1/lib/web/css/source/lib/variables/_navigation.less&#34; target=&#34;_blank&#34;&gt;Navigation variables&lt;/a&gt; to customise the category menus&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;further-reading-1&#34;&gt;Further Reading&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/css-topics/css_debug.html&#34; target=&#34;_blank&#34;&gt;Compile LESS with Grunt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;javascript&#34;&gt;JavaScript&lt;/h3&gt;

&lt;p&gt;Magento recommends including Javascript as part of templates rather than through layout XML to ensure they run as part of the body.&lt;/p&gt;

&lt;p&gt;It makes use of RequireJS to pull in dependencies. These are run with the script tag with a Magento-specific type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;pulling-in-a-javascript-assets&#34;&gt;Pulling in a Javascript assets&lt;/h4&gt;

&lt;p&gt;To pull in the module Magento_Configurable&amp;rsquo;s &lt;em&gt;js/configurable.js&lt;/em&gt; file (which will exist in the &lt;em&gt;pub&lt;/em&gt; folder):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
   require([&amp;quot;Magento_ConfigurableProduct/js/configurable&amp;quot;], function(Configurable){
        // your function body here
   }); 
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To pull in a JavaScript file from your theme, use a relative file path from your theme&amp;rsquo;s &lt;em&gt;web&lt;/em&gt; folder:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
   require([&amp;quot;js/customFile.js&amp;quot;], function(){
        // your function body here
   }); 
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Javascript libraries provided by Magento in the &lt;em&gt;lib&lt;/em&gt; folder are accessed by name:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/x-magento-init&amp;quot;&amp;gt;
   require([&amp;quot;jquery&amp;quot;], function($){
        // your function body here
   }); 
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;jquery-widgets&#34;&gt;jQuery Widgets&lt;/h4&gt;

&lt;p&gt;Not to be confused with &lt;a href=&#34;https://edmondscommerce.github.io/introducing-ui-components/&#34;&gt;UI Components&lt;/a&gt;, these extend from jQuery UI components and are useful widgets to use on the frontend. They include accordions, calendars, menus and tabs.&lt;/p&gt;

&lt;p&gt;They can be initialised similar to the following in your template file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    require([
        &#39;jquery&#39;,
        &#39;tabs&#39;], function ($) {
        $(&amp;quot;#footer-accordion&amp;quot;).accordion();
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A full list of Widgets can be found at the &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/javascript-dev-guide/widgets/jquery-widgets-about.html&#34; target=&#34;_blank&#34;&gt;jQuery Widgets DevDocs page&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;further-reading-2&#34;&gt;Further Reading&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/javascript-dev-guide/javascript/js-resources.html&#34; target=&#34;_blank&#34;&gt;Dev Docs on JavaScript Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;overriding-modules-view-files&#34;&gt;Overriding modules&amp;rsquo; view files&lt;/h2&gt;

&lt;p&gt;In Magento 1, overriding other modules&amp;rsquo; assets was as simple as matching the file path in your own theme. In Magento 2, things are pretty similar, except you specify which module you want to override.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In your theme (&lt;em&gt;app/design/frontend/(namespace)/(theme)&lt;/em&gt;), create a folder matching the &lt;em&gt;NameSpace_Module&lt;/em&gt; you&amp;rsquo;re overriding&lt;/li&gt;
&lt;li&gt;Create a subfolder for the type of file you&amp;rsquo;re overriding: &lt;em&gt;templates&lt;/em&gt;, &lt;em&gt;layout&lt;/em&gt; or &lt;em&gt;web&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Match the original module&amp;rsquo;s file path, and add your content there&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;An example would look like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;app/design/frontend/(namespace)/(theme)/

&lt;ul&gt;
&lt;li&gt;Magento_Catalog/

&lt;ul&gt;
&lt;li&gt;layout/

&lt;ul&gt;
&lt;li&gt;catalog_product_view.xml&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;templates/

&lt;ul&gt;
&lt;li&gt;product/

&lt;ul&gt;
&lt;li&gt;list.phtml&lt;/li&gt;
&lt;li&gt;view.phtml&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;common-snippets&#34;&gt;Common Snippets&lt;/h2&gt;

&lt;h3 id=&#34;templates-1&#34;&gt;Templates&lt;/h3&gt;

&lt;h4 id=&#34;url-generation&#34;&gt;URL Generation&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;lt;?php echo $block-&amp;gt;getUrl(&#39;path/to/page&#39;) ?&amp;gt;&amp;quot;&amp;gt;Link&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;layout-1&#34;&gt;Layout&lt;/h3&gt;

&lt;h4 id=&#34;new-container&#34;&gt;New container&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;container name=&amp;quot;new_container&amp;quot; htmlClass=&amp;quot;container_css_class&amp;quot; htmlTag=&amp;quot;div&amp;quot;&amp;gt;
    &amp;lt;!-- blocks or containers here --&amp;gt;
&amp;lt;/container&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;new-blank-template&#34;&gt;New blank template&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;block class=&amp;quot;Magento\Framework\View\Element\Template&amp;quot;
       template=&amp;quot;Magento_Theme::path/to/template.phtml&amp;quot;
       name=&amp;quot;block_name&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;removing-sidebar-items&#34;&gt;Removing sidebar items&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;referenceBlock name=&amp;quot;catalog.compare.sidebar&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;view.addto.compare&amp;quot; remove=&amp;quot;true&amp;quot; /&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;category.product.addto.compare&amp;quot; remove=&amp;quot;true&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;removing-my-account-links&#34;&gt;Removing My Account links&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;referenceBlock name=&amp;quot;customer-account-navigation-wish-list-link&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;customer-account-navigation-billing-agreements-link&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;customer-account-navigation-downloadable-products-link&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;customer-account-navigation-newsletter-subscriptions-link&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;referenceBlock name=&amp;quot;customer-account-navigation-my-credit-cards-link&amp;quot; remove=&amp;quot;true&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;admin-configuration&#34;&gt;Admin Configuration&lt;/h1&gt;

&lt;p&gt;A few aspects of the theme can be user-configured through the Admin. This is found in Content &amp;gt; Design &amp;gt; Configuration &amp;gt; (store) &amp;gt; Edit&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Logo&lt;/strong&gt; image and dimensions (now includes SVG)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Title&lt;/strong&gt; prefix and suffix as displayed in the tab/title bar&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Meta keywords/description&lt;/strong&gt; as the default if the page doesn&amp;rsquo;t specify its own&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Favicon&lt;/strong&gt; image&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Welcome Text&lt;/strong&gt; which is displayed for logged out users&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Miscellaneous HTML, scripts and CSS&lt;/strong&gt; inserted before the closing &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/html&amp;gt;&lt;/code&gt; tags&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Image placeholders are configurable at Stores &amp;gt; Configuration &amp;gt; Catalog &amp;gt; Product Image Placeholders&lt;/p&gt;

&lt;h1 id=&#34;deployment&#34;&gt;Deployment&lt;/h1&gt;

&lt;p&gt;When deploying to the server, you should &lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/config-guide/cli/config-cli-subcommands-mode.html&#34; target=&#34;_blank&#34;&gt;change from Developer mode to Production mode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this change in place, resources are served directly from the &lt;em&gt;pub&lt;/em&gt; folder rather than through symlinks or the static.php file. To this end you need to ensure your resources are published.&lt;/p&gt;

&lt;p&gt;This is accomplished using the &lt;code&gt;bin/magento setup:static-content:deploy&lt;/code&gt; command. This will loop through the themes and modules to deploy their static files to the &lt;em&gt;pub&lt;/em&gt; folder.&lt;/p&gt;

&lt;p&gt;Remember to set a locale if an Admin user uses a non-default locale, or else they&amp;rsquo;ll have no CSS in their Admin: &lt;code&gt;bin/magento setup:static-content:deploy --language en_GB&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;further-reading-3&#34;&gt;Further reading&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/themes/theme-create.html&#34; target=&#34;_blank&#34;&gt;Magento 2 Dev Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.creare.co.uk/blog/magento/theming-in-magento-2-part-1&#34; target=&#34;_blank&#34;&gt;Creare Magento 2 themeing guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Test If Your Magento Site Is Php7 Ready</title>
      <link>https://edmondscommerce.github.io/test-if-your-magento-site-is-php7-ready/</link>
      <pubDate>Thu, 02 Mar 2017 10:48:46 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/test-if-your-magento-site-is-php7-ready/</guid>
      <description>

&lt;p&gt;After you&amp;rsquo;ve installed the &lt;a href=&#34;https://github.com/Inchoo/Inchoo_PHP7&#34; target=&#34;_blank&#34;&gt;Inchoo PHP7 module&lt;/a&gt; you&amp;rsquo;ll likely
want to check if your custom or 3rd party module code is also PHP7 compatible. In order to determine
this you can run a &lt;a href=&#34;https://en.wikipedia.org/wiki/Static_program_analysis&#34; target=&#34;_blank&#34;&gt;static analysis&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;phpcodesniffer&#34;&gt;PHPCodeSniffer&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34; target=&#34;_blank&#34;&gt;PHPCodeSniffer&lt;/a&gt; is a PHP static analysis tool which can
be used to test your code against a set of coding standards.&lt;/p&gt;

&lt;h1 id=&#34;phpcompatibility&#34;&gt;PHPCompatibility&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wimg/PHPCompatibility&#34; target=&#34;_blank&#34;&gt;PHPCompatibility&lt;/a&gt; is a coding standard which you can use
to test if your code is compatible with a certain (or range of) PHP versions. In our case we&amp;rsquo;re only
interested in PHP7.&lt;/p&gt;

&lt;h1 id=&#34;running-the-analysis&#34;&gt;Running the Analysis&lt;/h1&gt;

&lt;p&gt;Once you&amp;rsquo;ve install both PHPCodeSniffer and PHPCompatibility (by following the instructions on their
respective GitHub pages) we should be ready to run our analysis.&lt;/p&gt;

&lt;p&gt;Use the following command to run your analysis:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;./vendor/bin/phpcs -p --standard&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;PHPCompatibility --runtime-set testVersion 7.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As the command is running you should see a summary of the tested files. &lt;code&gt;W&lt;/code&gt; means warning and &lt;code&gt;E&lt;/code&gt;
means error.&lt;/p&gt;

&lt;p&gt;After the command has run you should see a detailed list of all the potential compatibility issues.&lt;/p&gt;

&lt;p&gt;Once these have been fixed or mitigated you should be ready for PHP7.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrade From Magento Magemonkey to Mailchimp</title>
      <link>https://edmondscommerce.github.io/upgrade-from-magento-magemonkey-to-mailchimp/</link>
      <pubDate>Tue, 21 Feb 2017 14:13:42 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/upgrade-from-magento-magemonkey-to-mailchimp/</guid>
      <description>&lt;p&gt;Upgrading from MageMonkey to MailChimp unfortunately isn&amp;rsquo;t as simple as just installing the new module.&lt;/p&gt;

&lt;p&gt;You need to purge the old module completely using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Remove all MageMonkey files (taken from https://www.dropbox.com/s/fx9p0w7hqeb0zwi/uninstall_magemonkey.sh?dl=0)&lt;/span&gt;
rm app/etc/modules/Ebizmarts_MageMonkey.xml
rm app/etc/modules/Ebizmarts_Mandrill.xml
rm app/etc/modules/Ebizmarts_Autoresponder.xml
rm app/etc/modules/Ebizmarts_AbandonedCart.xml
rm app/etc/modules/Ebizmarts_SweetMonkey.xml
rm -r app/locale/nl_NL/template/email/ebizmarts
rm app/locale/nl_NL/Ebizmarts_MageMonkey.csv
rm app/locale/nl_NL/Ebizmarts_SweetMonkey.csv
rm app/locale/nl_NL/Ebizmarts_AbandonedCart.csv
rm app/locale/en_US/Ebizmarts_Mandrill.csv
rm -r app/locale/en_US/template/email/ebizmarts
rm app/locale/en_US/Ebizmarts_Autoresponder.csv
rm app/locale/en_US/Ebizmarts_MageMonkey.csv
rm app/locale/en_US/Ebizmarts_SweetMonkey.csv
rm app/locale/en_US/Ebizmarts_AbandonedCart.csv
rm -r app/code/community/Ebizmarts
rm app/design/adminhtml/default/default/layout/magemonkey.xml
rm -r app/design/adminhtml/default/default/layout/ebizmarts
rm -r app/design/adminhtml/default/default/template/ebizmarts
rm -r app/design/adminhtml/default/default/template/magemonkey
rm -r app/design/adminhtml/default/default/template/sweetmonkey
rm app/design/frontend/base/default/layout/magemonkey.xml
rm -r app/design/frontend/base/default/layout/ebizmarts
rm -r app/design/frontend/base/default/template/ebizmarts
rm -r app/design/frontend/base/default/template/magemonkey
rm -r app/design/frontend/base/default/template/ebizmarts_abandonedcart
rm -r js/ebizmarts
rm -r skin/adminhtml/default/default/abandonedcart
rm -r skin/adminhtml/default/default/ebizmarts
rm -r skin/adminhtml/default/default/magemonkey
rm -r skin/frontend/base/default/magemonkey
rm -r lib/Mandrill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This was taken from &lt;a href=&#34;https://www.dropbox.com/s/fx9p0w7hqeb0zwi/uninstall_magemonkey.sh?dl=0&#34; target=&#34;_blank&#34;&gt;uninstall_magemonkey.sh&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You also need to drop the following tables.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;ch&#34;&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Drop all MageMonkey tables (taken from https://ebizmarts.com/forums/topics/view/19381#19491)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;dbname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nb&#34;&gt;declare&lt;/span&gt; -a &lt;span class=&#34;nv&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_mails_sent&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_abandonedcart_popup&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_abandonedcart_abtesting&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_unsubscribe&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_visited&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_review&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_backtostock&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;ebizmarts_autoresponder_backtostock_alert&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_api_debug&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_ecommerce360&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_bulksync_export&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_bulksync_import&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_async_subscribers&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_async_orders&amp;quot;&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;quot;magemonkey_last_order&amp;quot;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; table in &lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[@]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    mysql -h &lt;span class=&#34;nv&#34;&gt;$host&lt;/span&gt; -u &lt;span class=&#34;nv&#34;&gt;$user&lt;/span&gt; --password&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dbname&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;quot;drop table &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$table&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These tables were taken from the following &lt;a href=&#34;https://ebizmarts.com/forums/topics/view/19381#19491&#34; target=&#34;_blank&#34;&gt;Ebizmarts post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once you&amp;rsquo;ve done this you can install the new module by following the instructions contained within it&amp;rsquo;s
README.md.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bash Snippet to Get Column Numbers For Csv Headers</title>
      <link>https://edmondscommerce.github.io/bash-snippet-to-get-column-numbers-for-csv-headers/</link>
      <pubDate>Wed, 08 Feb 2017 15:29:56 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/bash-snippet-to-get-column-numbers-for-csv-headers/</guid>
      <description>&lt;p&gt;Check out this BASH snippet to get the headers from a CSV file and give you the column numbers&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/edmondscommerce/87472f274e47ed90a2dafa2cdf48a75f.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>PHP File /tmp/ Does Not Exist</title>
      <link>https://edmondscommerce.github.io/php-file-/tmp/-does-not-exist/</link>
      <pubDate>Mon, 23 Jan 2017 18:23:49 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/php-file-/tmp/-does-not-exist/</guid>
      <description>&lt;p&gt;Recently I ran into an issue with a upload issue in Akeneo when trying to include an image with a product, however the issue could happen with any PHP script.&lt;/p&gt;

&lt;p&gt;I had provided a file path of /path/to/file.jpg in the upload, but was getting an error message of &lt;code&gt;Attribute or field &amp;quot;picture&amp;quot; expects a valid pathname as data, &amp;quot;/tmp/path/to/file.jpg&amp;quot; given (for setter media)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I was surprised to see that the path had been changed to /tmp/path/to/file.jpg, but a put a copy of the file into the /tmp/ directory and tried again. This produced the same error message.&lt;/p&gt;

&lt;p&gt;At this point I assumed that the issue had to be permissions related, so as the PHP and Nginx user made sure that I could read the file. Slightly stumped I made sure that I was working on the correct container and found that I was.&lt;/p&gt;

&lt;p&gt;I then inserted an extra bit of debugging code to write the exception to a file in /tmp/uploadError.txt. I tried the upload again, got the same error, but could not find the newly created file.&lt;/p&gt;

&lt;p&gt;After confirming that this logging was in the right place, I decided to scan the entire file system to see where the file had been saved, and got the following result:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;root@desktop-container$ find / -type f -iname &lt;span class=&#34;s1&#34;&gt;&amp;#39;uploadError.txt&amp;#39;&lt;/span&gt; 
/tmp/systemd-private-c5c2073fc98d4581bb08fe6013321d9e-php-fpm.service-i9QqcK/tmp/uploadError.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A bit of googling indicated that this is a security feature of systemd. It can be disabled, if necessary, by editing the PHP service file ( found here &lt;code&gt;/usr/lib/systemd/system/php-fpm.service&lt;/code&gt; and setting PrivateTmp to false.&lt;/p&gt;

&lt;p&gt;After doing this you&amp;rsquo;ll need to reload the systemd daemon by running &lt;code&gt;systemctl daemon-reload&lt;/code&gt; and restart PHP.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Phpstorm and Mysql Scratch Files</title>
      <link>https://edmondscommerce.github.io/phpstorm-and-mysql-scratch-files/</link>
      <pubDate>Fri, 20 Jan 2017 12:39:15 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/phpstorm-and-mysql-scratch-files/</guid>
      <description>

&lt;h3 id=&#34;workflow&#34;&gt;Workflow&lt;/h3&gt;

&lt;p&gt;Recently I have been writing a number of internal scripts that interface with one of our databases to check a few things.
A lot of the time we use PhpMyAdmin or the standard Mysql command line client where necessary but there is a better
and more reliable way to fire queries to the database.&lt;/p&gt;

&lt;p&gt;Enter PHP Storm.&lt;/p&gt;

&lt;h3 id=&#34;php-storm-and-mysql&#34;&gt;PHP Storm and MySQL&lt;/h3&gt;

&lt;p&gt;PHPStorm has been extended so much over the years that it can be used for fully fledged raw SQL on it&amp;rsquo;s own which can be very handy.
To start off, look in to adding your database source (we use MySql but any data source supported will work too).&lt;/p&gt;

&lt;p&gt;You can also use an SSH tunnel for your remote projects!&lt;/p&gt;

&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://confluence.jetbrains.com/display/PhpStorm/Databases+and+SQL+Editor+in+PhpStorm#DatabasesandSQLEditorinPhpStorm-Settingupadatabaseconnection&#34;&gt;
Data source Guide
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have your data source set up and configured, you are now ready to start firing queries, open a new scratch file and choose &lt;code&gt;mysql&lt;/code&gt; or which ever data source type you are currently using.
You will now have full auto completion and error highlighting out of the box and a bunch of other useful features.&lt;/p&gt;

&lt;h3 id=&#34;selective-statement-execution&#34;&gt;Selective Statement Execution&lt;/h3&gt;

&lt;p&gt;One useful feature besides the code completion is the ability to only execute certain parts of large SQL statements with inner statements so to ensure the expected results are returned.
See the screen shots for an example.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://edmondscommerce.github.io/images/phpstorm-mysql-editor.png&#34; alt=&#34;PHP Storm Mysql Editor&#34; /&gt;&lt;/p&gt;

&lt;p&gt;When selecting the code block, hit &lt;code&gt;CTRL+Enter&lt;/code&gt; or the shortcut for completion in your settings and you can then cycle through which parts of the query to run with the arrow keys.
As you cycle different parts of the query will have the green border to indicate this.&lt;/p&gt;

&lt;p&gt;This feature was tested in PHP Storm 2017.1 (EAP) but should be present in 2016.*&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debugging Google Adwords Conversion Tracking and Analytics</title>
      <link>https://edmondscommerce.github.io/debugging-google-adwords-conversion-tracking-and-analytics/</link>
      <pubDate>Tue, 17 Jan 2017 16:23:22 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/debugging-google-adwords-conversion-tracking-and-analytics/</guid>
      <description>&lt;p&gt;Recently I had to try and fix a number of issues with a client&amp;rsquo;s Google Adwork conversion tracking and Universal Analytics.&lt;/p&gt;

&lt;p&gt;To better help in debugging I discovered a plugin from Google themselves for Chrome that does some basic validation on any tracking tags in the page, this also includes tags loaded through Google Tag Manager and the Tag Manager loader itself.&lt;/p&gt;

&lt;p&gt;From here I quickly found that the wrong parameters were being passed to the Tag Manager data layer (and as a result to Ad Words) making it a simple issue to fix without having to wait for Adwords/Analytics to update.&lt;/p&gt;

&lt;p&gt;The plugin is located here, along with a list of features and supporting documentation
&lt;a href=&#34;https://get.google.com/tagassistant/&#34;&gt;Google Tag Assistant&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mysql Password Expiry - How to Resolve and Then Disable</title>
      <link>https://edmondscommerce.github.io/mysql-password-expiry---how-to-resolve-and-then-disable/</link>
      <pubDate>Mon, 16 Jan 2017 14:17:19 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/mysql-password-expiry---how-to-resolve-and-then-disable/</guid>
      <description>&lt;p&gt;I recently had the issue that the root user for a MySQL installation had their password expire.&lt;/p&gt;

&lt;p&gt;Apparently this is a fairly new MySQL feature which is designed to improve security and assist with meeting PCI-DSS requirements. However for this development box, it is not really necessary so I would prefer to disable.&lt;/p&gt;

&lt;p&gt;The issue became apparent when trying to log into phpmyadmin and seeing the error message: &amp;ldquo;#1862 - Your password has expired. To log in you must change it using a client that supports expired passwords.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;On the command line the confusing thing is that you can log in, only when you run a query such as &lt;code&gt;show databases;&lt;/code&gt; do you then get the error message:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; show databases;
ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So to fix this, firstly you can just reset your password back to the same one you were already using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set password = password(&#39;mySecretPass&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then to disable this you can use this query:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alter user &#39;root&#39;@&#39;localhost&#39; password expire never;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Screen Capture on Fedora</title>
      <link>https://edmondscommerce.github.io/screen-capture-on-fedora/</link>
      <pubDate>Thu, 12 Jan 2017 14:42:21 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/screen-capture-on-fedora/</guid>
      <description>&lt;p&gt;If you want to quickly capture your screen on Fedora follow these steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go to the following &lt;a href=&#34;http://download1.rpmfusion.org/free/fedora/updates/24/x86_64/v/vokoscreen-2.4.0-3.fc24.x86_64.rpm&#34; target=&#34;_blank&#34;&gt;download&lt;/a&gt;
link for &lt;a href=&#34;http://www.kohaupt-online.de/hp/&#34; target=&#34;_blank&#34;&gt;VokoScreen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo dnf install path/to/rpm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run VokoScreen&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that&amp;rsquo;s it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting Up an Ipv6 Tunnel in Fedora</title>
      <link>https://edmondscommerce.github.io/setting-up-an-ipv6-tunnel-in-fedora/</link>
      <pubDate>Tue, 10 Jan 2017 12:15:31 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/setting-up-an-ipv6-tunnel-in-fedora/</guid>
      <description>

&lt;h1 id=&#34;creating-an-ipv6-tunnel-in-fedora&#34;&gt;Creating an IPv6 tunnel in Fedora&lt;/h1&gt;

&lt;p&gt;Recently I had to access a server that only had an IPv6 address. As I am one of the &lt;a href=&#34;https://www.google.com/intl/en/ipv6/statistics.html#tab=per-country-ipv6-adoption&amp;amp;tab=per-country-ipv6-adoption&#34; target=&#34;_blank&#34;&gt;over 80% of the UK without IPv6 access&lt;/a&gt; I needed to set up a tunnel on my machine to do this.&lt;/p&gt;

&lt;p&gt;After looking through the different ways of doing this I concluded that the easiest way to do this was to use &lt;a href=&#34;https://www.tunnelbroker.net/&#34; target=&#34;_blank&#34;&gt;Tunnel Broker&lt;/a&gt; which offers a free tunneling service.&lt;/p&gt;

&lt;p&gt;After registering for a free account you need to login and you&amp;rsquo;ll need to create a tunnel. Click the Create Regular Tunnel link in the User Functions box on the left hand side and fill out the information.&lt;/p&gt;

&lt;p&gt;Once this is done you&amp;rsquo;ll be taken to the Tunnel Details page, the next time you log in you can access this directly from the Configured Tunnels box visible after you have logged in.&lt;/p&gt;

&lt;p&gt;Click the Example Configurations tab and then select the most appropriate option from the drop down menu - I found that Linux-net-tools worked but Linux-route2 did not.&lt;/p&gt;

&lt;p&gt;Copy and paste the command into a root terminal and then you should be able to access the IPv6 web.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>