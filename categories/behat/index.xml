<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Behat on Edmonds Commerce Dev Blog</title>
    <link>http://edmondscommerce.github.io/categories/behat/</link>
    <description>Recent content in Behat on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Apr 2015 12:02:28 +0000</lastBuildDate>
    <atom:link href="http://edmondscommerce.github.io/categories/behat/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Repeating Behat Scenarios when Testing Magento with SmartStep</title>
      <link>http://edmondscommerce.github.io/behat/repeating-behat-scenarios-when-testing-magento-with-smartstep.html</link>
      <pubDate>Wed, 15 Apr 2015 12:02:28 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/behat/repeating-behat-scenarios-when-testing-magento-with-smartstep.html</guid>
      <description>&lt;p&gt;When behat testing Magento I found myself repeating the same Homepage &amp;gt; Category &amp;gt; Product &amp;gt; Add-to-cart &amp;gt; Cart page scenario for a variety of tests - checking that a category page has products; checking that items are added to the cart; testing the checkout itself etc etc.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t want to copy-paste the whole procedure because if I changed, say the &lt;code&gt;.product-list&lt;/code&gt; class, I&amp;rsquo;d have to update each of the Scenarios. Bit of a kick in the face to &lt;a href=&#34;http://en.wikipedia.org/wiki/Don%27t_repeat_yourself&#34; target=&#34;_blank&#34;&gt;DRY&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The standard Behat way is to create a method in the Context class which performs the add-to-cart procedure under the Step &lt;code&gt;Given I have added to cart&lt;/code&gt; or similar, but this defeats the object of using Gherkin to write the tests.&lt;/p&gt;

&lt;p&gt;Fortunately KnpLabs have soled this problem with &lt;a href=&#34;https://github.com/KnpLabs/FriendlyContexts/blob/master/doc/feature-smartStep.md&#34; target=&#34;_blank&#34;&gt;SmartSteps&lt;/a&gt;. This allows you to create a Scanerio that you want to be repeatable by tagging it as a &lt;code&gt;@smartStep&lt;/code&gt;. Once it&amp;rsquo;s tagged, you can easily embed that scenario into a new one by having a step &lt;code&gt;Given [scenario name]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;###Adding SmartSteps to your behat tests&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In &lt;code&gt;composer.json&lt;/code&gt;, add a new dependency
&lt;code&gt;
&amp;quot;knplabs/friendly-contexts&amp;quot;: &amp;quot;dev-master&amp;quot;
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;behat.yml&lt;/code&gt;
```
default:
extensions:
    Knp\FriendlyContexts\Extension:
        smartTag: smartStep&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;- Tag your scenario

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;@smartStep
  Scenario: I arrive on the site and add a product to cart
    When I am on &amp;ldquo;/&amp;rdquo;
    Then I follow &amp;ldquo;My category&amp;rdquo;
    Then I follow &amp;ldquo;My product&amp;rdquo;
    Then I press &amp;ldquo;Add to Cart&amp;rdquo;
    And I should see &amp;ldquo;was added to your shopping cart&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- And then use the Scenario in any other scenarios with
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Given I arrive on the site and add a product to cart
```&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Behat</title>
      <link>http://edmondscommerce.github.io/behat/behat.html</link>
      <pubDate>Wed, 01 Apr 2015 12:04:12 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/behat/behat.html</guid>
      <description>&lt;p&gt;I love Behat. One of the great things about it is that it has been built to be very extensible, so if it doesn&amp;rsquo;t do exactly what you need then it&amp;rsquo;s really quite easy to to customise the way it works without having to do any hacking on the core code. This is because it makes extensive use of an Observer Pattern like Hooks system.&lt;/p&gt;

&lt;p&gt;If you want to have your Behat tests fail as soon as a scenario fails - ideal when you are running a large suite of tests and trying to fix issues - then simply add in this method into a Context class.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;   &lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    /** @AfterScenario */&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    public function dieOnFailedScenario(Behat\Behat\Hook\Scope\AfterScenarioScope $scope)&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        if (99 === $scope-&amp;gt;getTestResult()-&amp;gt;getResultCode()) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            if (isset($_SERVER[&amp;#39;BEHAT_DIE_ON_FAILURE&amp;#39;])) {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                die(&amp;quot;\n\nBEHAT_DIE_ON_FAILURE is defined\n\nKilling Full Process\n\n\n\n&amp;quot;);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            } else {&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;                echo &amp;quot;\n\nTo die on failure, please run:\nexport BEHAT_DIE_ON_FAILURE=true;\n\n&amp;quot;;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;            }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;        }&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;    }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then in your terminal, simply export BEHAT_DIE_ON_FAILURE=true and then the next time you run your tests, the process will die and you can go and fix the problems.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Behat Selenium arguments[0] is undefined Problem &#43; Solution</title>
      <link>http://edmondscommerce.github.io/behat/behat-selenium-arguments-0-is-undefined-problem-plus-solution.html</link>
      <pubDate>Tue, 17 Feb 2015 12:33:51 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/behat/behat-selenium-arguments-0-is-undefined-problem-plus-solution.html</guid>
      <description>&lt;p&gt;Just spent a good amount of time struggling to see why my perfectly functional looking code was not working.&lt;/p&gt;

&lt;p&gt;Tests were failing with the error message:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;arguments[0] is undefined&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A little bit of Googling later and I found the issue.&lt;/p&gt;

&lt;p&gt;It seems that some Firefox versions will bomb out and give you this error message.&lt;/p&gt;

&lt;p&gt;The simple solution, if you can, is to switch to using Chrome and Chromedriver&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Easily Setup and Run Selenium for your Behat Tests</title>
      <link>http://edmondscommerce.github.io/behat/easily-setup-and-run-selenium-for-your-behat-tests.html</link>
      <pubDate>Thu, 12 Feb 2015 14:01:24 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/behat/easily-setup-and-run-selenium-for-your-behat-tests.html</guid>
      <description>&lt;p&gt;We&amp;rsquo;ve decided on sticking with Selenium to run our Behat based testing as it allows us to do proper browser testing and it&amp;rsquo;s also actually quite nice to be able to watch the tests as they progress and easily spot anything that might be wrong.&lt;/p&gt;

&lt;p&gt;Getting Selenium running and ensuring everyone is using the same version is another challenge.&lt;/p&gt;

&lt;p&gt;To make that easier, and also to allow us to easily update as we go, we have now released a Composer package so that it can easily be added to project dependencies.&lt;/p&gt;

&lt;p&gt;For full details, we suggest you head over to the Repo and read the information there as that will be kept up to date.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/edmondscommerce/selenium-server&#34; target=&#34;_blank&#34;&gt;https://github.com/edmondscommerce/selenium-server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also find this on Packagist here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://packagist.org/packages/edmondscommerce/selenium-server&#34; target=&#34;_blank&#34;&gt;https://packagist.org/packages/edmondscommerce/selenium-server&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Behat and emulating mobile browsers using chrome</title>
      <link>http://edmondscommerce.github.io/behat/behat-and-emulating-mobile-browsers-using-chrome.html</link>
      <pubDate>Tue, 03 Feb 2015 13:00:25 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/behat/behat-and-emulating-mobile-browsers-using-chrome.html</guid>
      <description>&lt;p&gt;Lets admit it not all mobile sites are responsive as they were created when responsive sites were in their infancy or just did not exist. Along with that and even if a site is responsive some elements, images, styles and javascript maybe exclusive to mobile user agents or excluded all together due to file size concerns.&lt;/p&gt;

&lt;p&gt;It would be useful to test a site when it is dealing with a mobile user agent. However you don not always need a actual mobile browser thanks to chromes mobile device emulation. Although it is not useful it can at lest be used to do some testing when site responds to specific user agents. Chromes mobile emulation can be driven with behat using the following example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
  &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;extensions&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Behat\MinkExtension&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;base_url&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;http://urltotest.com/&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;default_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium_firefox_session&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;goutte&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;~&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;sessions&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
        &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;goutte_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
          &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;goutte&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
            &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;guzzle_parameters&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
              &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ssl.certificate_authority&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;false&lt;/span&gt;
        &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium_chrome_mobile_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
          &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium2&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
            &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;browser&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;chrome&lt;/span&gt;
            &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;capabilities&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
              &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;extra_capabilities&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
                &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;chromeOptions&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
                  &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;mobileEmulation&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
                    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;deviceName&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;Google&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Nexus&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s&#34;&gt;5&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium_chrome_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
          &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium2&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
            &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;browser&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;chrome&lt;/span&gt;
            &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;capabilities&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
              &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;extra_capabilities&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
                &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;chromeOptions&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
                  &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
                    &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;--start-maximized&amp;quot;&lt;/span&gt;
                    &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;--test-type&amp;quot;&lt;/span&gt;
        &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium_firefox_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
          &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium2&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
            &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;browser&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;firefox&lt;/span&gt;
  &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;suites&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;my_suite&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;contexts&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
        &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;FeatureContext&lt;/span&gt;
        &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Behat\MinkExtension\Context\MinkContext&lt;/span&gt;

&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;chrome_mobile&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
  &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;extensions&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Behat\MinkExtension&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;default_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium_chrome_mobile_session&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With Behat and Mink we are able to pass extra parameters to the chrome selnium driver using the extra_capabilities options. In the above example we enable mobile emulation using the &amp;ldquo;Google Nexus 5&amp;rdquo; profile. To drive tests using this we have two options.&lt;/p&gt;

&lt;p&gt;Specify the profile at run time using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/behat -p chrome
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Alternative you can tag specific scenarios to use a given profile by using the following tag above the scenario you want to affect:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;@mink:selenium_chrome_mobile_session
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Multiple Behat and Mink profiles for testing multiple browsers</title>
      <link>http://edmondscommerce.github.io/behat/multiple-behat-and-mink-profiles-for-testing-multiple-browsers.html</link>
      <pubDate>Tue, 03 Feb 2015 12:20:36 +0000</pubDate>
      
      <guid>http://edmondscommerce.github.io/behat/multiple-behat-and-mink-profiles-for-testing-multiple-browsers.html</guid>
      <description>&lt;p&gt;Behat makes it easy to write and run automated testing in browser and in most cases where functionality is not javascript driven then testing in a single browser is fine.&lt;/p&gt;

&lt;p&gt;However if you are testing Javascript driven functionality then it is best to have multiple profiles for multiple browsers without having to write the scenario multiple times with different tagsi for different sessions. Luckily behat support defination of multiple profiles which inherit from a single default profile for all your browser needs. You simply need to set up your bhat yaml config file like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
  &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;extensions&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Behat\MinkExtension&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;base_url&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;quot;http://someurl.com&amp;quot;&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;default_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium_firefox_session&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;goutte&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;~&lt;/span&gt;
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;sessions&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
        &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;goutte_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
          &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;goutte&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
            &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;guzzle_parameters&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
              &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;ssl.certificate_authority&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;false&lt;/span&gt;
        &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium_chrome_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
          &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium2&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
            &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;browser&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;chrome&lt;/span&gt;
        &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium_firefox_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
          &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium2&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
            &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;browser&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;firefox&lt;/span&gt;
  &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;suites&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;my_suite&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;contexts&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
        &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;FeatureContext&lt;/span&gt;
        &lt;span class=&#34;p p-Indicator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Behat\MinkExtension\Context\MinkContext&lt;/span&gt;

&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;chrome&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
  &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;extensions&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Behat\MinkExtension&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;default_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium_chrome_session&lt;/span&gt;

&lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;firefox&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
  &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;extensions&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
    &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;Behat\MinkExtension&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; 
      &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;default_session&lt;/span&gt;&lt;span class=&#34;p p-Indicator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;l l-Scalar l-Scalar-Plain&#34;&gt;selenium_firefox_session&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The to run the crome profile for example use the -p option flag on the behat command as show:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span&gt;&lt;/span&gt;bin/behat -p chrome
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>