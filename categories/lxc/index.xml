<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lxc on Edmonds Commerce Dev Blog</title>
    <link>https://edmondscommerce.github.io/categories/lxc/</link>
    <description>Recent content in Lxc on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Sep 2016 09:39:04 +0000</lastBuildDate>
    <atom:link href="https://edmondscommerce.github.io/categories/lxc/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Lxc Bash Completion For Fedora</title>
      <link>https://edmondscommerce.github.io/lxc-bash-completion-for-fedora/</link>
      <pubDate>Thu, 15 Sep 2016 09:39:04 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/lxc-bash-completion-for-fedora/</guid>
      <description>&lt;p&gt;LXC is great, I&amp;rsquo;m really loving it.&lt;/p&gt;

&lt;p&gt;However I also love Fedora and work almost exclusively in the Red Hat, Centos, Fedora ecosphere - so the Ubuntu centric nature of LXC is sometimes a bit of a hindrance.&lt;/p&gt;

&lt;p&gt;One thing is that the LXC implementation on Ubuntu and Fedora differs in how the commands are run, eg Ubuntu: &lt;code&gt;lxc start -n containerName&lt;/code&gt; and Fedora: &lt;code&gt;lxc-start -n containerName&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This means that I can&amp;rsquo;t easily use the LXC bash completion I found &lt;a href=&#34;https://github.com/arges/lxd/blob/7a33c43deeca38cd77ed38eb84f12a2f4efa90ca/config/bash/lxc.in&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I love bash completion, it&amp;rsquo;s awesome and really quite easy to get working&lt;/p&gt;

&lt;p&gt;Here is something quick I threw together for working with LXC on Fedora:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
#!/usr/bin/env bash

_lxc-containers(){
    local cur
    local -a toks
    cur=&amp;quot;${COMP_WORDS[COMP_CWORD]}&amp;quot;
    toks=( $(  ls /var/lib/lxc | grep &amp;quot;$cur&amp;quot; ))
    COMPREPLY=( &amp;quot;${toks[@]}&amp;quot; )
    return 0
}
complete -F _lxc-containers -o nospace lxc-start
complete -F _lxc-containers -o nospace lxc-stop
complete -F _lxc-containers -o nospace lxc-attach

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I also use the following aliases to make life a bit easier:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias lxc-start=&amp;quot;lxc-start -n &amp;quot;
alias lxc-stop=&amp;quot;lxc-stop -n &amp;quot;
alias lxc-attach=&amp;quot;lxc-attach -n &amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And now if I add both of the above to my &lt;code&gt;~/.bashrc&lt;/code&gt; file, I get completion on start, stop and attach. I&amp;rsquo;ve deliberately excluded the destroy command from this, just in case.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fedora 24 Lxc Multiple /dev/pts Instances: Missing</title>
      <link>https://edmondscommerce.github.io/fedora-24-lxc-multiple-/dev/pts-instances-missing/</link>
      <pubDate>Wed, 14 Sep 2016 18:58:49 +0000</pubDate>
      
      <guid>https://edmondscommerce.github.io/fedora-24-lxc-multiple-/dev/pts-instances-missing/</guid>
      <description>&lt;p&gt;If you are finding that when you run &lt;code&gt;lxc-checkconfig&lt;/code&gt; then you will probably get output like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Kernel configuration not found at /proc/config.gz; searching...
Kernel configuration found at /boot/config-4.7.3-200.fc24.x86_64
--- Namespaces ---
Namespaces: enabled
Utsname namespace: enabled
Ipc namespace: enabled
Pid namespace: enabled
User namespace: enabled
Network namespace: enabled
Multiple /dev/pts instances: missing

--- Control groups ---
Cgroup: enabled
Cgroup clone_children flag: enabled
Cgroup device: enabled
Cgroup sched: enabled
Cgroup cpu account: enabled
Cgroup memory controller: enabled
Cgroup cpuset: enabled

--- Misc ---
Veth pair device: enabled
Macvlan: enabled
Vlan: enabled
Bridges: enabled
Advanced netfilter: enabled
CONFIG_NF_NAT_IPV4: enabled
CONFIG_NF_NAT_IPV6: enabled
CONFIG_IP_NF_TARGET_MASQUERADE: enabled
CONFIG_IP6_NF_TARGET_MASQUERADE: enabled
CONFIG_NETFILTER_XT_TARGET_CHECKSUM: enabled
FUSE (for use with lxcfs): enabled

--- Checkpoint/Restore ---
checkpoint restore: enabled
CONFIG_FHANDLE: enabled
CONFIG_EVENTFD: enabled
CONFIG_EPOLL: enabled
CONFIG_UNIX_DIAG: enabled
CONFIG_INET_DIAG: enabled
CONFIG_PACKET_DIAG: enabled
CONFIG_NETLINK_DIAG: enabled
File capabilities: enabled

Note : Before booting a new kernel, you can check its configuration
usage : CONFIG=/path/to/config /usr/bin/lxc-checkconfig


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The good news is that the error about dev/pts is a false alarm.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.spinics.net/lists/kernel/msg2283133.html&#34; target=&#34;_blank&#34;&gt;Apparently&lt;/a&gt;, more up to date Kernels don&amp;rsquo;t have a kernel flag that is clearly being used by &lt;code&gt;lxc-checkconfig&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However I can confirm that lxc seems to be working fine on Fedora 24&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>