<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spidering on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/categories/spidering/</link>
    <description>Recent content in Spidering on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Apr 2008 13:15:49 +0000</lastBuildDate>
    <atom:link href="http://example.com/categories/spidering/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Populating osCommerce and other Ecommerce Platforms</title>
      <link>http://example.com/oscommerce/spidering/ecommerce/product-feed/scraping/populating-oscommerce-and-other-ecommerce-platforms.html</link>
      <pubDate>Wed, 23 Apr 2008 13:15:49 +0000</pubDate>
      
      <guid>http://example.com/oscommerce/spidering/ecommerce/product-feed/scraping/populating-oscommerce-and-other-ecommerce-platforms.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
One of the most arduous task in maintaining and ecommerce web site is the constant task of keeping all of your products up to date. Suppliers like to release new price lists and product ranges on at least a yearly basis. Just when you have managed to get your web site completely up to date, the rug is pulled out from under you and you have to start all over again&amp;hellip;&lt;/p&gt;

&lt;p&gt;Its a never ending task and if not handled carefully can soak up ridiculous amounts of staff time. Staff time means expense as any business financial director will tell you on wages day.&lt;/p&gt;

&lt;p&gt;There are some great gains to be made in automating the task of keeping a product catalogue up to date. The popular ecommerce platform osCommerce has a contribution called easypopulate which is an essential addition. CREloaded and other flavours of enhanced osCommerce tend to ship with easypopulate installed by default.&lt;/p&gt;

&lt;p&gt;Its a great script, but for a very large site with a lot of demands the script does need a little extra work to make it the fully fledged backup, restore, update and insert products tool that a serious ecommerce business needs.&lt;/p&gt;

&lt;p&gt;Most platforms either come with or have contributions or modules you can install to enable bulk importing and updating of products which definitely makes things faster. However if you are finding that you or your staff are creating these spreadsheets by hand in your spreadsheet programme then there are still amazing efficiences to be achieved.&lt;/p&gt;

&lt;p&gt;In fact, once you get really serious, you start hitting the row limits of common spread sheet programmes which means you literally can not open the entire product feed for editing. Once you are at this kind of size (or a lot less) you will find that your computer is very sluggish and editing becomes a slow and tedious task.&lt;/p&gt;

&lt;p&gt;A much better way is to use custom written scripts for processing your information into the correct format for your bulk updating system. This is something that Edmonds Commerce specialise in and we have many happy customers who are saving countless hours by having software for the hard work.&lt;/p&gt;

&lt;p&gt;The ultimate solution is to recieve product information in a feed from your suppliers. This is generally a very fast and reliable way of grabbing all of the product information for a particular supplier. However not all suppliers supply a feed. Others do supply a feed, but it is missing crucial information.&lt;/p&gt;

&lt;p&gt;In this kind of scenario, it is usually possible to actually develop a script which will grab all of the required information and images directly from your suppliers web site. The familiar copying and pasting scenario but done by a script rather than a member of staff. Thousands of products can be grabbed in an hour and all outputed into a file correctly formatted for immediate upload into your bulk updating system such as Easypopulate for oscommerce.&lt;/p&gt;

&lt;p&gt;Again this is a real speciality of Edmonds Commerce, though you may find that the average web design company does not have this kind of service to offer as it is a bit unusual and involves a steep learning curve.&lt;/p&gt;

&lt;p&gt;For more information on this subject please do get in touch&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Product Feed Integration and Scraping Products from Supplier Web Sites</title>
      <link>http://example.com/spidering/ecommerce/product-catalogue/product-feed/scraping/product-feed-integration-and-scraping-products-from-supplier-web-sites.html</link>
      <pubDate>Wed, 05 Mar 2008 09:53:12 +0000</pubDate>
      
      <guid>http://example.com/spidering/ecommerce/product-catalogue/product-feed/scraping/product-feed-integration-and-scraping-products-from-supplier-web-sites.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
One of the big tasks that any ecommerce retail business must undertake is the continual updating and inserting of products into the catalogue. Done one by one, this task can take a ridiculous amount of time. In some instances there is no better option, but in the vast majority of cases there is!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Product Feed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The ideal scenario is that your supplier makes available an up to date product feed which is regularly updated and contains all of the information you need to insert those products into your catalogue. The challenge with this is that it is highly unlikely that you will literally be able to upload this data as is. The reason being that each ecommerce system has its own quirks and separate ways of doing things. Before you can upload this data into your feed, it is highly likely that it will need to be altered and prepared for insertion.&lt;/p&gt;

&lt;p&gt;You could do updating by hand - but that brings us back to our first point. Doing things by hand can take a ridiculously large amount of time. Instead - we recommend that you have a script which does all this preparation for you.&lt;/p&gt;

&lt;p&gt;In fact this task is something that Edmonds Commerce specialise in. Not least because it is something that we have done plenty of and so we have a good understanding of how to do the job. Furthermore - we understand how to do the job well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spidering and Scraping Products from Supplier Web Site&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If your supplier does not provide a feed, or if the feed they supply does not have all of the information that you want, you might think you are stuck. You are not!&lt;/p&gt;

&lt;p&gt;It is perfectly possible to build a system which will visit every product on your suppliers web site and grab all of the information and pictures and then save them into a format that you can insert into your catalogue system. It is even possible to extend the scraping system so that it goes all the way and inserts the products into your site for you.&lt;/p&gt;

&lt;p&gt;Again this is something that Edmonds Commerce specialise in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you find that you or your staff are spending large amounts of time manually copying and pasting information from supplier web sites - you need to ask yourself if that is really cost effective. Whilst developing a script to process a feed or scrape a supplier web site might involve a significant initial outlay - the humongous saving in staff time ensures that you will quickly recoup this cost and then will be straight into a profitable scenario. Furthermore your catalogue will be absolutely up to date with the latest pictures, information and prices meaning that you have the best chance to sell those products.&lt;/p&gt;

&lt;p&gt;If you want to discuss how Edmonds Commerce could help you achieve these great goals of cost reduction and totally up to date catalogue - please do get in touch.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building Spiders: Grab Data, Post Forms and Interact with Web Sites Automatically</title>
      <link>http://example.com/php/curl/spidering/firefox/programming/building-spiders-grab-data-post-forms-and-interact-with-web-sites-automatically.html</link>
      <pubDate>Thu, 14 Feb 2008 11:56:16 +0000</pubDate>
      
      <guid>http://example.com/php/curl/spidering/firefox/programming/building-spiders-grab-data-post-forms-and-interact-with-web-sites-automatically.html</guid>
      <description>&lt;p&gt;&lt;div class=&#34;oldpost&#34;&gt;&lt;h4&gt;This is post is now quite old and the the information it contains may be out of date or innacurate.&lt;/h4&gt;
&lt;p&gt;
If you find any errors or have any suggestions to update the information &lt;a href=&#34;http://edmondscommerce.github.io/contact-us/index.html&#34;&gt;please let us know&lt;/a&gt;
or &lt;a href=&#34;https://github.com/edmondscommerce/edmondscommerce.github.io&#34;&gt;create a pull request on GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
One of the most useful and powerful things you can do with PHP is to create a programme which will simulate a web browser and can grab data, post data to forms and generally interact with other web sites - automatically.&lt;/p&gt;

&lt;p&gt;For PHP to be able to work like this it must have the CURL library installed and active. It is the CURL library which actually handles all of the interaction and PHP is my scripting language of choice for interacting with CURL.&lt;/p&gt;

&lt;p&gt;A simple CURL function is like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function curl($url){&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$timeout = &amp;#39;300&amp;#39;; //how long before CURL gives up on this page&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$go = curl_init();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;curl_setopt ($go, CURLOPT_URL, $url);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;curl_setopt ($go, CURLOPT_RETURNTRANSFER, 1);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;curl_setopt ($go, CURLOPT_FOLLOWLOCATION, 1);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;curl_setopt ($go, CURLOPT_TIMEOUT, $timeout);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$page = curl_exec($go);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;curl_close($go);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;return $page;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This function when called and echoed will output the entire html of the $url specified.&lt;/p&gt;

&lt;p&gt;For grabbing data from this page to be inserted into a database (for example when spidering a suppliers web site for product information to be inserted into your site) we then use regular expressions to find what we are looking for and then insert that into the database.&lt;/p&gt;

&lt;p&gt;so for example if we wanted to grab the product title and we knew that this was wrapped in a h1 tag with the class &amp;ldquo;product title&amp;rdquo; we could use this regexp to grab this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;$page = curl($url);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$pattern = &amp;#39;%&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;&amp;lt;h1 class=&amp;quot;product_title&amp;quot;&amp;gt;(.+?)&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;%i&amp;#39;;&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;preg_match($pattern,$page,$matches);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;print_r($matches); //we can see the entire array of matches and choose which we want to insert into the database&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can also Post data to web sites using curl. This allows us to do all kinds of things including grabbing data that is displayed on the submission of post forms. Here is an example Curl Post Function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;function curl_post($url,$post_data){&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;$timeout = &amp;#39;300&amp;#39;; //how long before CURL gives up on this page&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$go = curl_init();&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;curl_setopt ($go, CURLOPT_URL, $url);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;curl_setopt ($go, CURLOPT_RETURNTRANSFER, 1);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;curl_setopt ($go, CURLOPT_FOLLOWLOCATION, 1);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;curl_setopt ($go, CURLOPT_TIMEOUT, $timeout);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;//now for the post section&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;curl_setopt($go, CURLOPT_POST, true);&lt;/span&gt;

&lt;span class=&#34;x&#34;&gt;curl_setopt($go, CURLOPT_POSTFIELDS, $post_data);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;$page = curl_exec($go);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;curl_close($go);&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;return $page;&lt;/span&gt;
&lt;span class=&#34;x&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It can be tricky to figure out exactly what data should be in the post string. To help you out though is this incredibly handy addon for firefox: &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/3829&#34; target=&#34;_blank&#34;&gt;Live Http Headers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This addon lets you see exactly what is going on between your browser and the web site you are visiting. This can quickly and easily give you the information you need to replicate the same behaviour with your CURL script.&lt;/p&gt;

&lt;p&gt;Edmonds Commerce specialise in working with PHP and CURL. If you have any spidering, screen scraping or other application that requires PHP to actively interact with other web sites - &lt;a href=&#34;http://www.edmondscommerce.co.uk/contact-about-curl-and-php.html&#34;&gt;get in touch today&lt;/a&gt; to see how we can help you benefit from this incredibly powerful technique.&lt;/p&gt;

&lt;p&gt;Related Resources&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.phpfour.com/blog/2008/01/20/php-http-class/&#34; rel=&#34;nofollow&#34;&gt;&lt;a href=&#34;http://www.phpfour.com/blog/2008/01/20/php-http-class/&#34; target=&#34;_blank&#34;&gt;http://www.phpfour.com/blog/2008/01/20/php-http-class/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.phpclasses.org/browse/package/1988.html&#34; rel=&#34;nofollow&#34;&gt;&lt;a href=&#34;http://www.phpclasses.org/browse/package/1988.html&#34; target=&#34;_blank&#34;&gt;http://www.phpclasses.org/browse/package/1988.html&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.phpit.net/article/using-curl-php/&#34; rel=&#34;nofollow&#34;&gt;&lt;a href=&#34;http://www.phpit.net/article/using-curl-php/&#34; target=&#34;_blank&#34;&gt;http://www.phpit.net/article/using-curl-php/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://skeymedia.com/intro-to-curl-with-php/&#34; rel=&#34;nofollow&#34;&gt;&lt;a href=&#34;http://skeymedia.com/intro-to-curl-with-php/&#34; target=&#34;_blank&#34;&gt;http://skeymedia.com/intro-to-curl-with-php/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>