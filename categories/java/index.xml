<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Edmonds Commerce Dev Blog</title>
    <link>http://example.com/categories/java/</link>
    <description>Recent content in Java on Edmonds Commerce Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Feb 2012 11:21:55 +0000</lastBuildDate>
    <atom:link href="http://example.com/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SSL Certificates and Java!</title>
      <link>http://example.com/java/ssl-certificates-and-java.html</link>
      <pubDate>Fri, 24 Feb 2012 11:21:55 +0000</pubDate>
      
      <guid>http://example.com/java/ssl-certificates-and-java.html</guid>
      <description>&lt;p&gt;Java is a bit more picky about SSL authorities than, say, Chrome or Firefox. Fortunately adding a certificates to Java to accept it as secure is fairly straight forward:&lt;/p&gt;

&lt;p&gt;sudo keytool -import -keystore /usr/lib/jvm/java-6-sun/jre/lib/security/cacerts -file cert.crt
Password: changeit&lt;/p&gt;

&lt;p&gt;Of course acquiring the certificate file can be a little tricky as it&amp;rsquo;s entirely dependant on your setup. Also /usr/lib/jvm/java-6-sun/jre/lib/security/cacerts is the default location for the keystore on Ubuntu, this may differ depending on your OS/distribution.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>